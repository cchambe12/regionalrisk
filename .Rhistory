mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
priors = c(prior(poisson(0,13))))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = c(prior(poisson(0,13))))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = set_prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = prior(cauchy(0,13)))
pois.test
pp_check(pois.test)
prior<-get_prior(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=poisson())
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = prior)
pois.test
bern.test<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=bernoulli(), iter = 4500, warmup=2000, thin=5,
prior = prior(cauchy(0,1)))
bern.test
pp_check
pp_check(bern.test)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 8000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=5,
prior = prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=50,
prior = prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=0.5,
prior = prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=3000,
prior = prior(cauchy(0,13)))
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 8000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=10,
prior = prior(cauchy(0,13)))
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
library(lme4)
logs<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=binomial(link="logit"))
logs
summary(logs)
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=poisson(link="log"))
summary(poisbase)
poisnodist<-glm(fs.count ~ nao.z + mat.z + space.z + elev.z +
cc.z + species +
mat.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=poisson(link="log"))
summary(poisnodist);summary(poisbase)
bb<-bb[sample(nrow(bb), 800), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b), prior(normal(-5,5), class="Intercept"))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b), prior(normal(-5,5), coef="Intercept"))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b), prior(normal(-5,5), class=b, coef="Intercept"))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b))
pois.test
hist(bb$nao.z)
hist(bb$mat.z)
hist(bb$space.z)
hist(bb$elev.z)
hist(bb$cc.z)
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 15000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4000, warmup=2500,
prior = prior(normal(-6,6), class=b))
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial())
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial(theta=2))
summary(poisbase)
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial(theta=2))
summary(poisbase)
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=quasibinomial())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=quasibinomial())
summary(poisbase)
bet <- read.csv("~/Documents/git/ospree/analyses/bb_analysis/PEP_climate/input/bbch_betpen.csv")
head(bet)
rm(list=ls())
options(stringsAsFactors=FALSE)
library(brms)
load("/Users/catchamberlain/Downloads/orig_full_itrxns.Rdata")
check <- brms:extract_draws(orig.full, re_formula=c("cc.z", "elev.z", "species"))
check <- brms::extract_draws(orig.full, re_formula=c("cc.z", "elev.z", "species"))
check <- brms::extract_draws(orig.full)
View(check)
varies <- get_variables(orig.full)
library(broom)
varies <- get_variables(orig.full)
library(tidybayes)
install.packages("tidybayes")
varies <- get_variables(orig.full)
library(tidybayes)
varies <- get_variables(orig.full)
varies <- gsub(".*b_","",varies)
conds <- r_conditions[speciesBETPEN, mat.z]
conds <- r_condition[speciesBETPEN, mat.z]
check <- orig.full %>%
spread_draws(species[elev.z, cc.z, term])
library(dplyr)
check <- orig.full %>%
spread_draws(species[elev.z, cc.z, term])
varies <- get_variables(orig.full)
varies
check <- orig.full %>%
spread_draws(b_speciesBETPEN[elev.z, cc.z, term]) %>%
spread_draws(b_speciesFRAEXC[elev.z, cc.z, term])
check <- orig.full %>%
spread_draws(b_speciesBETPEN[elev.z, term]) %>%
spread_draws(b_speciesFRAEXC[elev.z, term])
check <- orig.full %>%
spread_draws(b_elev.z[condition, term]) %>%
spread_draws(b_cc.z[condition, term])
check <- orig.full %>%
add_fitted_draws()
check <- add_fitted_draws(orig.full)
check <- bb %>% add_fitted_draws(orig.full)
View(check)
head(check)
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
dplyr::select(species, cc, elev)
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN"))
unique(check$species)
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev)
View(foo)
foo <- foo[!duplicated(foo),]
colnames(check)
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev, .value)
foo <- foo[!duplicated(foo),]
View(foo)
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=cc)) + geom_line()
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=as.factor(cc))) + geom_line(aes(col=species, alpha=as.factor(cc)), stat="smooth", method="lm")
goober <- posterior_interval(orig.full, prob=0.5)
View(goober)
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
colnames(check)
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=as.factor(cc))) + geom_line(aes(col=species, alpha=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
ggplot(foo, aes(x=elev, y=.value, col=species, line_type=as.factor(cc))) + geom_line(aes(col=species, line_type=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
ggplot(foo, aes(x=elev, y=.value, col=species, linetype=as.factor(cc))) + geom_line(aes(col=species, linetype=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
list_of_draws <- extract(orig.full)
## Libraries
library(rstan)
list_of_draws <- extract(orig.full)
load("/Users/catchamberlain/Downloads/orig_full_itrxns.Rdata")
list_of_draws <- extract(orig.full)
list_of_draws <- extract_fit(orig.full)
list_of_draws <- brms::extract_fit(orig.full)
library(brms)
list_of_draws <- brms::extract_fit(orig.full)
list_of_draws <- brms::extract_draws(orig.full)
print(names(list_of_draws))
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
library(dplyr)
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
library(tidybayes)
library(broom)
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(elev.z, cc.z, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(`b_elev.z`, `b_cc.z`, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(b_elev.z, b_cc.z, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev, .value)
bb %>%
data_grid(elev) %>%
add_fitted_draws(orig.full) %>%
ggplot(aes(x = .value, y = elev)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
ggplot(aes(x = .value, y = elev)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(check$species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, group=cc)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, group=cc, col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
geom_line(.width = c(.25, .75), aes(col=species, linetype=as.factor(cc)),
stat="smooth", method="lm")
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(dplyr)
library(lubridate)
library(chillR)
library(tidyr)
library(brms) ## just for initial glances during experiment!
library(rstan)
library(rstanarm)
# Setting working directory
setwd("~/Documents/git/chillfreeze/analyses/input")
obs <- read.csv("chillobs.csv", header = TRUE)
## Start cleaning a bit...
obs$bb <- as.Date(obs$bb, "%m/%d/%y")
obs$bb <- yday(obs$bb)
obs$lo <- as.Date(obs$lo, "%m/%d/%y")
obs$lo <- yday(obs$lo)
obs$start <- as.Date(obs$start, format = "%m/%d/%y")
obs$budburst <- NA
obs$budburst <- ifelse(obs$start=="2018-12-24", obs$bb + 6, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-07", obs$bb - 7, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-21", obs$bb - 21, obs$budburst)
obs$leafout <- NA
obs$leafout <- ifelse(obs$start=="2018-12-24", obs$lo + 6, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-07", obs$lo - 7, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-21", obs$lo - 21, obs$leafout)
treats <- c(24, 44, 64, 84, 104, 124, 144, 164,
26, 46, 66, 86, 106, 126, 146, 166,
28, 48, 68, 88, 108, 128, 148, 168)
obs$inds <- substr(obs$id, 8, 10)
obs$tx <- ifelse(obs$inds %in% treats, 1, 0)
obs$chill <- NA
obs$chill <- ifelse(obs$start=="2018-12-24", 1, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-07", 2, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-21", 3, obs$chill)
chill.stan <- subset(obs, select=c("id", "budburst", "leafout", "tx", "chill", "lo.ht"))
chill.stan$chill1 = ifelse(chill.stan$chill == 2, 1, 0)
chill.stan$chill2 = ifelse(chill.stan$chill == 3, 1, 0)
with(chill.stan, table(chill1, chill2))
chill.stan <- na.omit(chill.stan)
chill.stan$species <- substr(chill.stan$id, 0, 6)
chill.stan$dvr <- chill.stan$leafout - chill.stan$budburst
fit.dvr <- brm(dvr ~ tx*chill1 + (1|species), data = chill.stan)
fit.dvr
fit.dvr <- brm(dvr ~ tx*chill1 + tx:species + chill:species, data = chill.stan)
fit.dvr
fit.bb <- brm(bb ~ chill1 + species, data=chill.stan)
fit.bb <- brm(budburst ~ chill1 + species, data=chill.stan)
fit.bb
fit.lo <- brm(leafout ~ chill1 + tx + species, data=chill.stan)
fit.lo
fit.ht <- lm(lo.ht ~ dvr, data = chill.stan) # simple curiosity!
fit.ht <- lm(lo.ht ~ dvr, data = chill.stan) # simple curiosity!
fit.ht
fit.ht <- lm(dvr ~ lo.ht, data = chill.stan) # simple curiosity!
fit.ht
obs$ht2 <- as.Date(obs$leafout, origin = obs$start)
obs$ht2 <- as.Date(obs$leafout + 28, origin = obs$start)
View(obs)
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
library(rstan)
library(brms)
library(ggplot2)
library(egg)
library(RColorBrewer)
library(tidybayes)
library(broom)
library(dplyr)
setwd("~/Documents/git/regionalrisk/")
#load("orig_full.Rdata")
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
load("orig_full.Rdata")
load("/Users/catchamberlain/Downloads/orig_full_itrxns.Rdata")
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
library(rstan)
library(brms)
library(ggplot2)
library(egg)
library(RColorBrewer)
library(tidybayes)
library(broom)
library(dplyr)
setwd("~/Documents/git/regionalrisk/")
load("orig_full.Rdata")
bb <- read.csv("output/fs_newspace_orig.csv", header=TRUE)
bb <- read.csv("analyses/output/fs_newspace_orig.csv", header=TRUE)
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
bb %>%
add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb %>%
add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full, prob=0.5, n=5000) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
stat_pointintervalh(.width = c(.25, .75))
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN"))
check <- bb %>% add_fitted_draws(orig.full, n=500) %>%
filter(species==c("FRAEXC", "BETPEN"))
check <- bb %>% add_fitted_draws(orig.full, n=5) %>%
filter(species==c("FRAEXC", "BETPEN"))
check <- bb %>% add_fitted_draws(orig.full, n=5) %>%
filter(species==c("FRAEXC", "BETPEN"))
Sys.getenv('R_MAX_VSIZE')
check <- bb %>% add_fitted_draws(orig.full, n=5) %>%
filter(species==c("FRAEXC", "BETPEN"))
Sys.setenv('R_MAX_VSIZE'=32000000000)
Sys.setenv('R_MAX_VSIZE'=32000000000)
Sys.getenv('R_MAX_VSIZE')
check <- bb %>% add_fitted_draws(orig.full, n=5) %>%
filter(species==c("FRAEXC", "BETPEN"))
