## to start
rm(list=ls())
options(stringsAsFactors=FALSE)
## load packages
packs.to.extract<-list('raster','foreach')
lapply(packs.to.extract,require, character.only=T)
## Get data. Here it is simulated it but can be read/imported as usually
# dat<-read.csv("XXX.csv")
dat=as.data.frame(matrix(rnorm(10000),ncol=100))
colnames(dat)<-c("y",paste("X",seq(1,9,1),sep=""))
write.csv(dat, file="~/Desktop/dat.csv")
## Get data. Here it is simulated it but can be read/imported as usually
dat<-read.csv("/n/wolkovich_lab/Lab/Cat/dat.csv")
#generate nested list to store model results
storing<-list()
## looping
for (i in 2:100){
storing[[i]]<-list()
for (j in 2:100){
print(paste(i,j,sep="."))
if(i<j){
mod.1<-lm(y~dat[,i]+dat[,j],data=dat)
storing[[i]][[j]]<-mod.1
}
}
}
## generate table summarizing some results
coeffs<-array(NA,dim=c(98,3))
for(i in 1:98){
coeffs[i,]<-storing[[2]][3:100][[i]]$coefficients
}
## saving results to memory
#save.image()
write.csv(coeffs, "/n/wolkovich_lab/Lab/Cat/some.coefficients.csv")
## I am fairly simple file for testing ##
library("car")
## I am fairly simple file for testing ##
#library("car")
x <- c(1,2,3,4)
y <- c(2,4,6,11)
foo <- anova(lm(x~y))
save(foo, file = "foo.RData")
load("/private/var/folders/24/gxkvcqyd525_zhq0nyldzv6c0000gn/T/fz3temp-2/foo.RData")
View(foo)
brm.simple
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv")
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc", "sm.elev"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
bb.stan<-na.omit(bb.stan)
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv")
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc", "sm.elev", "species"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
bb.stan<-na.omit(bb.stan)
binom
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_pois.Rdata")
pois
bringbernieback
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_zeroneg.Rdata")
zeroneg
bernquart
pp_check(bernquart)
library(rstanarm)
pp_check(bernquart)
pp_check(bernquart, type="stat_grouped", group="species")
pp_check(bernquart, type="mean")
pp_check(bernquart, stat="min")
bayesplot::pp_check(bernquart, stat="min")
bayesplot::pp_check(bernquart, stat="mean")
yrep_nb <- posterior_predict(bernquart, draws = 500)
y <- bb$fs
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
y <- bb$fs
ppc_stat(y, yrep_nb,  stat = "sd")
library(bayesplot)
ppc_stat(y, yrep_nb,  stat = "sd")
yrep_nb <- posterior_predict(bernquart)
y <- bb$fs
ppc_stat(y, yrep_nb,  stat = "sd")
pp_check(bernquart, type="xyz")
pp_check(bernquart, type="stat_grouped")
pp_check(bernquart, type="stat_grouped", group="species")
dim(y)
dim(yrep_nb)
yrep_nb <- posterior_predict(bernquart, draws=25000)
y <- bb$fs
ppc_stat(y, yrep_nb,  stat = "sd")
bb<-bb[sample(nrow(bb), 25000), ]
y <- bb$fs
ppc_stat(y, yrep_nb,  stat = "sd")
ppc_stat(y, yrep_nb,  stat = "min")
ppc_stat(y, yrep_nb,  stat = "max")
ppc_stat(y, yrep_nb,  stat = "median")
poistotal
pp_check(poistotal)
library(rstanarm)
pp_check(poistotal)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 25000), ]
yrep_nb <- posterior_predict(poistotal)
y <- bb$fs
ppc_stat(y, yrep_nb,  stat = "median")
library(bayesplot)
ppc_stat(y, yrep_nb,  stat = "median")
ppc_stat(y, yrep_nb,  stat = "max")
ppc_stat(y, yrep_nb,  stat = "min")
ppc_stat(y, yrep_nb,  stat = "min", bins=20)
ppc_stat(y, yrep_nb,  stat = "min", bins=40)
ppc_stat(y, yrep_nb,  stat = "sd")
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_negquart.Rdata")
negquart
pp_check(negquart)
yrep_nb <- posterior_predict(negquart)
ppc_stat(y, yrep_nb,  stat = "sd")
ppc_stat(y, yrep_nb,  stat = "max")
ppc_stat(y, yrep_nb,  stat = "min")
ppc_stat(y, yrep_nb,  stat = "min", binwidth = 5)
ppc_stat(y, yrep_nb,  stat = "min", binwidth = 1)
ppc_stat(y, yrep_nb,  stat = "min", binwidth = 0.2)
ppc_stat(y, yrep_nb,  stat = "min", binwidth = 0.1)
ppc_stat(y, yrep_nb,  stat = "q25")
q25 <- function(y) quantile(y, 0.25)
ppc_stat(y, yrep_nb,  stat = "q25")
library(brms)
plot(marginal_effects(poistotal, ask=FALSE))
test<-glm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb,
family=poisson())
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
test<-glm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb,
family=poisson())
summary(test)
bb<-bb[sample(nrow(bb), 800), ]
mains<-c("nao.z", "mat.z", "dist.z", "elev.z", "space.z")
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(0,5), class=b, coef=mains))
prior = prior(cauchy(0,5), class=b, coef=c("nao.z", "mat.z"))
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(0,5), class=b, coef=c("nao.z", "mat.z")))
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(0,1), class=b, coef="nao.z"), prior(cauchy(-1, 2), class=b, coef="mat.z"))
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(0,1), class=b, coef="nao.z"),
prior = prior(cauchy(-1, 2), class=b, coef="mat.z"))
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(0,1), class=b, coef="nao.z"),prior(cauchy(-1, 2), class=b, coef="mat.z"))
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(-1, 2), class=b, coef="mat.z"))
poisall<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = prior(cauchy(0, 10), class=b))
poisall
