rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(rstanarm)
library(dplyr)
library(tidyr)
library(brms)
library(jtools)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
install.packages("jtools")
library(jtools)
########################
#### get the data
#xx<-read.csv("output/fs_allspp_dvr.csv", header=TRUE)
#xx<-read.csv("output/fs_allspp_five.csv", header=TRUE)
#xx<-read.csv("output/fs_allspp_original.csv", header=TRUE)
xx<-read.csv("output/fs_allspp_fullleaf.csv", header=TRUE)
xx<-subset(xx, select=c("lat", "long", "fs.count", "year", "species", "fs"))
detach("package:jtools", unload=TRUE)
df<-read.csv("output/mat_MAM.csv", header=TRUE)
df<-subset(df, year>1950)
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
mat<-subset(mat, year>1950)
nao<-read.csv("output/nao_NovApr.csv", header=TRUE)
nao<-subset(nao, year>1950)
mat<-dplyr::select(mat, species, LAT, LON, ALT)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
mat$lat.long<-paste(mat$lat, mat$long)
mat<-mat[!duplicated(mat),]
bb<-full_join(mat, df)
#### Get elevation information
bb$cc<-ifelse(bb$year<=1983&bb$year>1950, 0, 1)
xx<-dplyr::select(xx, lat, long, species, fs.count, year)
xx<-xx[!duplicated(xx),]
bb<-full_join(bb, xx)
bb<-na.omit(bb)
bb<-bb[!duplicated(bb),]
############################################
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data - must choose the dataframe for specific analyses
#fs<-read.csv("output/fs_allspp_dvr.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_five.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_original.csv", header=TRUE)
fs<-read.csv("output/fs_allspp_fullleaf.csv", header=TRUE)
fs<-subset(fs, select=c("lat", "long", "fs.count", "year", "species", "fs"))
mat<-read.csv("output/mat_MAM.csv", header=TRUE)
mat<-subset(mat, year>1950)
elev<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
elev<-subset(elev, year>1950)
nao<-read.csv("output/nao_NovApr.csv", header=TRUE)
nao<-subset(nao, year>1950)
elev<-dplyr::select(elev, species, LAT, LON, ALT)
elev<-elev%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
elev$lat.long<-paste(elev$lat, elev$long)
elev<-elev[!duplicated(elev),]
matelev<-full_join(elev, mat)
#### Get elevation information
matelev$cc<-ifelse(matelev$year<=1983&matelev$year>1950, 0, 1)
fs<-dplyr::select(fs, lat, long, species, fs.count, year)
fs<-fs[!duplicated(fs),]
fspreds<-full_join(matelev, fs)
fspreds<-na.omit(fspreds)
fspreds<-fspreds[!duplicated(fspreds),]
fspreds$elev<-ave(fspreds$elev, fspreds$lat.long)
fspreds<-fspreds[!duplicated(fspreds),]
nao<-dplyr::select(nao, year, nao)
nao<-nao[!duplicated(nao),]
fspreds<-full_join(fspreds, nao)
dist<-read.csv("output/dist_wgs.csv", header=TRUE)
dist<-dist%>%rename(long=LONG)%>%rename(lat=LAT)
fspreds<-full_join(fspreds, dist)
#write.csv(bb, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", row.names = FALSE)
#write.csv(bb, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", row.names = FALSE)
#write.csv(bb, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_five_allpred.csv", row.names = FALSE)
write.csv(bb, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_fullleaf_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_five_allpred.csv", row.names = FALSE)
write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_fullleaf_allpred.csv", row.names = FALSE)
library(broom)
setwd("~/Documents/git/regionalrisk")
load("orig_full.Rdata")
load("dvr_full.Rdata")
load("five_full.Rdata")
modorig<-as.data.frame(tidy(orig.full, prob=0.9))
names(modorig)<-c("term", "estimate", "error", "10%", "90%")
modorig50<-as.data.frame(tidy(orig.full, prob=0.5))
modorig<-as.data.frame(tidy(orig.full, prob=0.9))
install.packages("broom")
########################################################################################
###################### NOW FOR THE MODEL Plots #########################################
########################################################################################
library(broom)
modorig<-as.data.frame(tidy(orig.full, prob=0.9))
names(modorig)<-c("term", "estimate", "error", "10%", "90%")
modorig50<-as.data.frame(tidy(orig.full, prob=0.5))
names(modorig50)<-c("term", "estimate", "error", "25%", "75%")
modorig <- full_join(modorig, modorig50)
#modorig25<-as.data.frame(tidy(orig.full, prob=0.25))
#names(modorig25)<-c("term", "estimate", "error", "25%", "75%")
#modorig <- full_join(modorig, modorig25)
modorig <- subset(modorig, select=c("term", "estimate", "10%", "25%", "75%", "90%"))
write.csv(modorig, file="analyses/output/orig_full_modeloutput.csv", row.names=FALSE)
moddvr<-as.data.frame(tidy(dvr.full, prob=0.9))
names(moddvr)<-c("term", "estimate", "error", "10%", "90%")
moddvr50<-as.data.frame(tidy(dvr.full, prob=0.5))
names(moddvr50)<-c("term", "estimate", "error", "25%", "75%")
moddvr <- full_join(moddvr, moddvr50)
#moddvr25<-as.data.frame(tidy(dvr.full, prob=0.25))
#names(moddvr25)<-c("term", "estimate", "error", "25%", "75%")
#moddvr <- full_join(moddvr, moddvr25)
moddvr <- subset(moddvr, select=c("term", "estimate", "10%", "25%", "75%", "90%"))
write.csv(moddvr, file="analyses/output/dvr_full_modeloutput.csv", row.names=FALSE)
modfive<-as.data.frame(tidy(five.full, prob=0.9))
names(modfive)<-c("term", "estimate", "error", "10%", "90%")
modfive50<-as.data.frame(tidy(five.full, prob=0.5))
names(modfive50)<-c("term", "estimate", "error", "25%", "75%")
modfive <- full_join(modfive, modfive50)
#modfive25<-as.data.frame(tidy(five.full, prob=0.25))
#names(modfive25)<-c("term", "estimate", "error", "25%", "75%")
#modfive <- full_join(modfive, modfive25)
modfive <- subset(modfive, select=c("term", "estimate", "10%", "25%", "75%", "90%"))
write.csv(modfive, file="analyses/output/five_full_modeloutput.csv", row.names=FALSE)
