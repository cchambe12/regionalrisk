scale_size_manual(name="Species", values=c(2, 1,1,1,1,1,1), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_alpha_manual(name="Species", values=c(1,.5,.5,.5,.5,.5,.5), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior")))))
regrisk
modoutput <- modorig #modelhere
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
#modoutput$term <- gsub(".*species", "", modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput$termclean <- gsub(":species.*", "", modoutput$term)
modoutput$estclean <- NA
modoutput$estclean <- ifelse(modoutput$termclean=="mat.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="mat.z")]+
modoutput$estimate, modoutput$estimate)
modoutput$estclean <- ifelse(modoutput$termclean=="nao.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="nao.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="dist.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="dist.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="elev.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="elev.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="space.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="space.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="cc.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="cc.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$lowclean <- NA
modoutput$lowclean <- ifelse(modoutput$termclean=="mat.z" & modoutput$species != "AESHIP",
modoutput$X10.[(modoutput$term=="mat.z")]+
modoutput$X10., modoutput$X10.)
modoutput$lowclean <- ifelse(modoutput$termclean=="nao.z" & modoutput$species != "AESHIP",
modoutput$X10.[(modoutput$term=="nao.z")]+
modoutput$X10., modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="dist.z" & modoutput$species != "AESHIP",
modoutput$X10.[(modoutput$term=="dist.z")]+
modoutput$X10., modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="elev.z" & modoutput$species != "AESHIP",
modoutput$X10.[(modoutput$term=="elev.z")]+
modoutput$X10., modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="space.z" & modoutput$species != "AESHIP",
modoutput$X10.[(modoutput$term=="space.z")]+
modoutput$X10., modoutput$X10.)
modoutput$lowclean <- ifelse(modoutput$termclean=="cc.z" & modoutput$species != "AESHIP",
modoutput$X10.[(modoutput$term=="cc.z")]+
modoutput$X10., modoutput$lowclean)
modoutput$highclean <- NA
modoutput$highclean <- ifelse(modoutput$termclean=="mat.z" & modoutput$species != "AESHIP",
modoutput$X90.[(modoutput$term=="mat.z")]+
modoutput$X90., modoutput$X90.)
modoutput$highclean <- ifelse(modoutput$termclean=="nao.z" & modoutput$species != "AESHIP",
modoutput$X90.[(modoutput$term=="nao.z")]+
modoutput$X90., modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="dist.z" & modoutput$species != "AESHIP",
modoutput$X90.[(modoutput$term=="dist.z")]+
modoutput$X90., modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="elev.z" & modoutput$species != "AESHIP",
modoutput$X90.[(modoutput$term=="elev.z")]+
modoutput$X90., modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="space.z" & modoutput$species != "AESHIP",
modoutput$X90.[(modoutput$term=="space.z")]+
modoutput$X90., modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="cc.z" & modoutput$species != "AESHIP",
modoutput$X90.[(modoutput$term=="cc.z")]+
modoutput$X90., modoutput$highclean)
modoutput$estavg <- ave(modoutput$estclean, modoutput$termclean)
modoutput$lowavg <- ave(modoutput$lowclean, modoutput$termclean)
modoutput$highavg <- ave(modoutput$highclean, modoutput$termclean)
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
my.pal <- colorRampPalette(brewer.pal(8,"Dark2"))(6)
my.pal <- c("black", my.pal)
### Now to make the plots
modoutput <- modorig #modelhere
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z", "nao.z:cc.z", "mat.z:cc.z", "dist.z:cc.z", "elev.z:cc.z", "space.z:cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput$termclean <- gsub(":species.*", "", modoutput$term)
### Now to make the plots
modoutput <- modorig #modelhere
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z", "nao.z:cc.z", "mat.z:cc.z", "dist.z:cc.z", "elev.z:cc.z", "space.z:cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput <- modoutput[(modoutput$species=="AESHIP"),]
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$term=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
my.pal <- colorRampPalette(brewer.pal(8,"Dark2"))(6)
my.pal <- c("black", my.pal)
regrisk<-ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar, col=species, size=species, alpha=species)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc")), aes(col=species, alpha=species)) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +  #+ ggtitle("Original Parameters") +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') + #ggtitle("A.")
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
#annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
#annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR FIVE
#annotate("text", x = -0.55, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR DVR AND ORIG
scale_color_manual(name="Species", values=c("black", cols), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_size_manual(name="Species", values=c(2, 1,1,1,1,1,1), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_alpha_manual(name="Species", values=c(1,.5,.5,.5,.5,.5,.5), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior")))))
regrisk
str(modoutput)
modoutput$Jvar <- as.integer(modoutput$Jvar)
regrisk<-ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar, col=species, size=species, alpha=species)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc")), aes(col=species, alpha=species)) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +  #+ ggtitle("Original Parameters") +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') + #ggtitle("A.")
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
#annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
#annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR FIVE
#annotate("text", x = -0.55, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR DVR AND ORIG
scale_color_manual(name="Species", values=c("black", cols), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_size_manual(name="Species", values=c(2, 1,1,1,1,1,1), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_alpha_manual(name="Species", values=c(1,.5,.5,.5,.5,.5,.5), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior")))))
regrisk
regrisk<-ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') +
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
#annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
#annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") ## FOR FIVE
regrisk
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc")))
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted")
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar))
modoutput$Jvar <- as.numeric(modoutput$Jvar)
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar))
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=as.numeric(Jvar)))
class(modoutput$Jvar)
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate))
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point()
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=as.numeric(estimate), y=as.numeric(Jvar)))
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted")
ggplot(modoutput, aes(x="2%", xend="98%", y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + #geom_point(aes(x=as.numeric(estimate), y=as.numeric(Jvar))) +
geom_segment(arrow = arrow(length = unit(0.00, "npc")))
ggplot(modoutput, aes(x="2%", xend="98%", y=as.numeric(Jvar), yend=as.numeric(Jvar))) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=as.numeric(estimate), y=as.numeric(Jvar)))
ggplot(modoutput, aes(x=`2%`, xend=`98%`, y=as.numeric(Jvar), yend=as.numeric(Jvar))) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=as.numeric(estimate), y=as.numeric(Jvar)))
regrisk<-ggplot(modoutput, aes(x=`2%`, xend=`98%`, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') +
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
#annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
#annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") ## FOR FIVE
regrisk
regrisk<-ggplot(modoutput, aes(x=`2%`, xend=`98%`, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') +
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
#annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
#annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
#annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") ## FOR FIVE
annotate("text", x = -0.55, y = 12, colour = "black", size=3, label="Less False Spring Risk")  ## FOR DVR AND ORIG
png("~/Documents/git/regionalrisk/analyses/figures/model_output_98_orig.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(regrisk)
dev.off()
### Now to make the plots
modoutput <- modfullleaf #modelhere
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
#modoutput$term <- gsub(".*species", "", modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z", "nao.z:cc.z", "mat.z:cc.z", "dist.z:cc.z", "elev.z:cc.z", "space.z:cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput <- modoutput[(modoutput$species=="AESHIP"),]
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$term=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
my.pal <- colorRampPalette(brewer.pal(8,"Dark2"))(6)
my.pal <- c("black", my.pal)
regrisk<-ggplot(modoutput, aes(x=`2%`, xend=`98%`, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') +
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
#annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
#annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") ## FOR FIVE
png("~/Documents/git/regionalrisk/analyses/figures/model_output_98_fullleaf.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(regrisk)
dev.off()
### Now to make the plots
modoutput <- modfive #modelhere
modfive <- read.csv("analyses/output/five_full_modeloutput.csv", header=TRUE)
load("dvr_full.Rdata")
load("five_full.Rdata")
moddvr98<-as.data.frame(tidy(dvr.full, prob=0.98))
names(moddvr98)<-c("term", "estimate", "error", "2%", "98%")
modfive98<-as.data.frame(tidy(five.full, prob=0.98))
names(modfive98)<-c("term", "estimate", "error", "2%", "98%")
### Now to make the plots
modoutput <- modfive98 #modelhere
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z", "nao.z:cc.z", "mat.z:cc.z", "dist.z:cc.z", "elev.z:cc.z", "space.z:cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput <- modoutput[(modoutput$species=="AESHIP"),]
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$term=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
my.pal <- colorRampPalette(brewer.pal(8,"Dark2"))(6)
my.pal <- c("black", my.pal)
regrisk<-ggplot(modoutput, aes(x=`2%`, xend=`98%`, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') +
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
#annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
#annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") ## FOR FIVE
png("~/Documents/git/regionalrisk/analyses/figures/model_output_98_five.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(regrisk)
dev.off()
### Now to make the plots
modoutput <- moddvr98 #modelhere
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z", "nao.z:cc.z", "mat.z:cc.z", "dist.z:cc.z", "elev.z:cc.z", "space.z:cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput <- modoutput[(modoutput$species=="AESHIP"),]
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$term=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$term=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
my.pal <- colorRampPalette(brewer.pal(8,"Dark2"))(6)
my.pal <- c("black", my.pal)
regrisk<-ggplot(modoutput, aes(x=`2%`, xend=`98%`, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$term)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +
coord_cartesian(xlim=c(-1.5, 1), ylim=c(1,11), clip = 'off') +
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
#annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
#annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
#annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") ## FOR FIVE
annotate("text", x = -0.55, y = 12, colour = "black", size=3, label="Less False Spring Risk")  ## FOR DVR AND ORIG
png("~/Documents/git/regionalrisk/analyses/figures/model_output_98_dvr.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(regrisk)
dev.off()
