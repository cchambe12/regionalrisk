panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Days to Budburst") +
xlab("Longitude") + ylab("Latitude")
photo
pc <- scale_colour_gradientn(colours = myPalette(100), limits=c(0, 25))
photo<- ggplot(ospr.stan, aes(x=long, y=lat, col=photo)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Days to Budburst") +
xlab("Longitude") + ylab("Latitude") + pc
photo
range(ospr.stan$photo)
pc <- scale_colour_gradientn(colours = myPalette(100), limits=c(6, 24))
photo<- ggplot(ospr.stan, aes(x=long, y=lat, col=photo)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Days to Budburst") +
xlab("Longitude") + ylab("Latitude") + pc
photo
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Photoperiod") +
xlab("Longitude") + ylab("Latitude") + pc
pc <- scale_colour_gradientn(colours = myPalette(100), limits=c(6, 24))
photo<- ggplot(ospr.stan, aes(x=long, y=lat, col=photo)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Photoperiod") +
xlab("Longitude") + ylab("Latitude") + pc
photo
ggarrange(type, lat, photo)
library(egg)
ggarrange(type, lat, photo)
ggarrange(type, lat, photo, ncol=3)
quartz()
ggarrange(type, lat, photo, ncol=3)
quartz()
ggarrange(type, lat, photo, ncol=3)
quartz()
ggarrange(type, lat, photo)
quartz()
ggarrange(type, lat, photo)
type<- ggplot(ospr.stan, aes(x=long, y=lat, col=as.factor(type))) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
type<- type + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm")) + geom_point(aes(col=as.factor(type))) + geom_jitter()+
labs(color="Type") +
xlab("Longitude") + ylab("Latitude")
lat<- ggplot(ospr.stan, aes(x=long, y=lat, col=resp)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
lat<- lat + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm")) + geom_point(aes(col=resp)) + geom_jitter()+
labs(color="Days to Budburst") +
xlab("Longitude") + ylab("Latitude") +sc
photo<- ggplot(ospr.stan, aes(x=long, y=lat, col=photo)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm")) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Photoperiod") +
xlab("Longitude") + ylab("Latitude") + pc
ggarrange(type, lat, photo)
type<- ggplot(ospr.stan, aes(x=long, y=lat, col=as.factor(type))) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
type<- type + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size=8)) + geom_point(aes(col=as.factor(type))) + geom_jitter()+
labs(color="Type") +
xlab("Longitude") + ylab("Latitude")
lat<- ggplot(ospr.stan, aes(x=long, y=lat, col=resp)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
lat<- lat + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size=8)) + geom_point(aes(col=resp)) + geom_jitter()+
labs(color="Days to Budburst") +
xlab("Longitude") + ylab("Latitude") +sc
photo<- ggplot(ospr.stan, aes(x=long, y=lat, col=photo)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size=8)) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Photoperiod") +
xlab("Longitude") + ylab("Latitude") + pc
ggarrange(type, lat, photo)
type<- ggplot(ospr.stan, aes(x=long, y=lat, col=as.factor(type))) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
type<- type + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size=8),
legend.title = element_text(size=9)) + geom_point(aes(col=as.factor(type))) + geom_jitter()+
labs(color="Type") +
xlab("Longitude") + ylab("Latitude")
lat<- ggplot(ospr.stan, aes(x=long, y=lat, col=resp)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
lat<- lat + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size=8),
legend.title = element_text(size=9)) + geom_point(aes(col=resp)) + geom_jitter()+
labs(color="Days to Budburst") +
xlab("Longitude") + ylab("Latitude") +sc
photo<- ggplot(ospr.stan, aes(x=long, y=lat, col=photo)) +   mapWorld +
coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
photo<- photo + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.25, "cm"),
legend.text = element_text(size=8),
legend.title = element_text(size=9)) + geom_point(aes(col=photo)) + geom_jitter()+
labs(color="Photoperiod") +
xlab("Longitude") + ylab("Latitude") + pc
ggarrange(type, lat, photo)
#### Now for some plotting...
ggplot(ospr.stan, aes(x=lat, y=resp, shape=photo, col=type)) + geom_point()
#### Now for some plotting...
ggplot(ospr.stan, aes(x=lat, y=resp, shape=as.factor(photo), col=type)) + geom_point()
#### Now for some plotting...
ggplot(ospr.stan, aes(x=lat, y=resp, col=photo)) + geom_point()
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_line(aes(col=photo))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_line(aes(x=lat, y=resp, col=photo))
range(ospr.stan$photo)
table(ospr.stan$photo)
ospr.stan$photo.class<-NA
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=5 & ospr.stan$photo<10, "short", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=10 & ospr.stan$photo<15, "med", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=15 & ospr.stan$photo<20, "long", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=20 & ospr.stan$photo<24, "very long", ospr.stan$photo.class)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_line(aes(x=lat, y=resp, col=photo.class))
ospr.stan<-ospr.stan[!is.na(ospr.stan$photo),]
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_line(aes(x=lat, y=resp, col=photo.class))
ospr.stan<-ospr.stan[!is.na(ospr.stan$photo.class),]
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_line(aes(x=lat, y=resp, col=photo.class))
ospr.stan$photo.class<-NA
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=5 & ospr.stan$photo<10, "short", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=10 & ospr.stan$photo<15, "med", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=15 & ospr.stan$photo<20, "long", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=20 & ospr.stan$photo<25, "very long", ospr.stan$photo.class)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=photo.class))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_abline(aes(x=lat, y=resp, col=photo.class))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class), method="lm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class), method="loess", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class), method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class), method="gam", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class), method="rlm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class), method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod")
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude")
ospr.stan$photo.class<-NA
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=5 & ospr.stan$photo<10, "5-9 hrs", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=10 & ospr.stan$photo<15, "10-14 hrs", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=15 & ospr.stan$photo<20, "15-19 hrs", ospr.stan$photo.class)
ospr.stan$photo.class<-ifelse(ospr.stan$photo>=20 & ospr.stan$photo<25, "20-24 hrs", ospr.stan$photo.class)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude")
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=photo.class, labels=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=ospr.stan$photo.class, labels=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"))
length(ospr.stan$photo.class)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=unique(ospr.stan$photo.class), labels=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=photo.class),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=unique(ospr.stan$photo.class), values=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"))
ospr.stan$legend<-factor(ospr.stan$photo.class,
labels=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("blue2", "firebrick3", "orange3","sienna2","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("blue4", "firebrick3", "orangered3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("blue3", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green3", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Longitude") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_points(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend)) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend)) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))+
geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend), alpha=2) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))+
geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend), alpha=0.5) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))+
geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend), alpha=0.2) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))+
geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend), alpha=0.4) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))+
geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE)
ggplot(ospr.stan, aes(x=lat, y=resp)) + geom_point(aes(x=lat, y=resp, col=legend), alpha=0.3) +
labs(col="Photoperiod") + xlab("Latitude") + ylab("Days to Budburst") +
scale_colour_manual(breaks=c("5-9 hrs", "10-14 hrs", "15-19 hrs",
"20-24 hrs"),
values=c("green4", "firebrick3", "orange3","purple2"))+
geom_smooth(aes(x=lat, y=resp, col=legend),
method="glm", se=FALSE)
lat.simple<-stan_glm(presp ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan, family=neg_binomial_2)
ospr.stan$complex <- as.numeric(as.factor(ospr.stan$complex))
ospr.stan$presp<-as.integer(ospr.stan$resp+1)
ospr.stan<-ospr.stan[(ospr.stan$presp!=1000),]
lat.simple<-stan_glm(presp ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan, family=neg_binomial_2)
ospr.stan$sm.chill<-ospr.stan$chill/240
lat.simple<-stan_glm(presp ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan, family=neg_binomial_2)
launch_shinystan(lat.simple)
lat.simple
lat.inter<-stan_glm(presp ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan)
lat.inter
lat.inter<-stan_glm(resp ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan)
lat.inter
lat.trunc<-brm(resp | trunc(lb = 0, ub = 300) ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan)
lat.trunc<-brm(resp | trunc(lb = 0) ~ sm.chill + photo + force + lat +
sm.chill:photo + sm.chill:force +
sm.chill:lat + photo:force + photo:lat + force:lat, data=ospr.stan)
lat.nointer<-stan_glm(resp~ sm.chill + photo + force + lat, data=ospr.stan)
lat.nointer
lat.nointer.pois<-stan_glm(resp~ sm.chill + photo + force + lat, data=ospr.stan, family=poisson)
lat.nointer.pois<-stan_glm(presp~ sm.chill + photo + force + lat, data=ospr.stan, family=poisson)
lat.nointer.pois
############################################
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
#library(rstan)
library(ggplot2)
#library(shinystan)
#library(bayesplot)
library(rstanarm)
library(dplyr)
library(tidyr)
library(brms)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
#bb<-read.csv("output/fs_matspspace.csv", header=TRUE)
bb<-read.csv("output/fs_matspring.csv", header=TRUE)
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
## fix KNMI Climate Explorer data for NAO - https://climexp.knmi.nl/getindices.cgi?WMO=NCEPData/cpc_nao&STATION=CPC_NAO&TYPE=i&id=someone@somewhere
#setwd("~/Documents/git/regionalrisk")
#nao<-read.delim("data/icpc_nao.dat.txt", header=TRUE)
#write.csv(nao, "~/Documents/git/regionalrisk/analyses/output/icpc_nao.csv", row.names=FALSE)
nao<-read.csv("output/icpc_nao.csv", header=TRUE)
nf<-nao%>%gather(month, index, -year)
nf$m.index<-ave(nf$index, nf$year)
nx<-dplyr::select(nf, year, m.index)
nx<-nx[!duplicated(nx),]
nx<-filter(nx, year<=2016)
#### Get elevation information
bb<-bb%>%rename(sp.temp=pre.bb)
bb<-dplyr::select(bb, -fs.count, -PEP_ID)
bb<-bb[!duplicated(bb),]
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
mat<-dplyr::select(mat, species, lat, long, elev)
mat<-mat[!duplicated(mat),]
d<-inner_join(bb, mat)
d<-inner_join(d, nx)
#d$cc<-NA
#d$cc<-ifelse(d$year<=1970&d$year>=1950, 0, d$cc)
#d$cc<-ifelse(d$year>=1996&d$year<=2016, 1, d$cc)
#d<-d[!is.na(d$cc),]
d$cc<-ifelse(d$year>=1950&d$year<=1983, 0, 1)
d$elev<-d$elev+1
d$fs.num<-ave(d$fs, d$lat.long, d$species, d$cc, FUN=sum)
d$sp.temp<-ave(d$sp.temp, d$cc, d$lat.long)
fs.cc<-dplyr::select(d, fs.num, sp.temp, elev, cc, species)
fs.cc$species<-as.numeric(as.factor(fs.cc$species))
fs.cc<-fs.cc[!duplicated(fs.cc),]
fs.cc<-fs.cc[!is.na(fs.cc$sp.temp),]
fs.cc<-fs.cc[!is.na(fs.cc$elev),]
fs.cc$elev<-ifelse(fs.cc$elev<=500, 0, 1)
fs.cc<-fs.cc[!duplicated(fs.cc),]
####### Try NAO model... ########
nao.mod<-dplyr::select(d, fs, sp.temp, elev, species, m.index)
nao.mod<-nao.mod[!duplicated(nao.mod),]
nao.mod<-nao.mod[!is.na(nao.mod$sp.temp),]
nao.mod<-nao.mod[!is.na(nao.mod$elev),]
nao.mod<-nao.mod[!is.na(nao.mod$m.index),]
nao.mod$species<-as.numeric(as.factor(nao.mod$species))
nao.mod$elev<-ifelse(nao.mod$elev<=500, 0, 1)
## Maybe try the proportion of sites rather than each site...?
dxx<-d
dxx$fs.yr<-ave(dxx$fs, dxx$year, FUN=sum)
dxx$fs.yrspp<-ave(dxx$fs, dxx$species, dxx$year, FUN=sum)
dxx$spp.prop<-NA
dxx$spp.sites<-as.numeric(ave(dxx$lat.long, dxx$year, dxx$species, FUN=length))
dxx$spp.prop<-ifelse(dxx$species=="AESHIP", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
dxx$spp.prop<-ifelse(dxx$species=="ALNGLU", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
dxx$spp.prop<-ifelse(dxx$species=="BETPEN", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
dxx$spp.prop<-ifelse(dxx$species=="FAGSYL", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
dxx$spp.prop<-ifelse(dxx$species=="FRAEXC", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
dxx$spp.prop<-ifelse(dxx$species=="QUEROB", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
dxx$spp.ave<-ave(dxx$spp.prop, dxx$species, FUN=median)
dxx$num.sites<-as.numeric(ave(dxx$lat.long, dxx$year, FUN=length))
dxx$fs.prop<-dxx$fs.yr/dxx$num.sites
#dxx$fs.ave<-ave(dxx$fs.prop)
prop<-dxx%>%dplyr::select(spp.prop, species, m.index, year, fs.prop, sp.temp)
prop$cc<-ifelse(prop$year<=1983, 0, 1)
prop<-prop[!is.na(prop$sp.temp),]
prop$sp.temp<-ave(prop$sp.temp, prop$year)
prop<-prop[!duplicated(prop),]
prop$fs.tot<-prop$fs.prop*100
prop.mod<-brm(fs.prop~m.index+cc+(m.index-1|species)+(cc-1|species), data=prop, family=zero_inflated_beta())
prop.mod
View(prop)
prop$spp.tot<-prop$spp.prop*100
sp20.stan<-stan_glmer(spp.tot~nao+sp.temp+(1|species) , data=prop)
sp20.stan<-stan_glmer(spp.tot~m.index+sp.temp+(1|species) , data=prop)
sp20.stan
nao<-stan_glm(fs.tot~m.index+sp.temp, data=prop)
nao
## should I take the log of m.index so it's a positive value?
prop$nao<-prop$m.index+1.5
nao<-stan_glm(fs.tot~nao+sp.temp, data=prop)
nao
nao_prev<-NA
shift <- function(x, n){
c(x[(seq(n))], rep(NA, n))
}
prop$nao_prev <- shift(prop$nao, 1)
prev<-prop%>%dplyr::select(year, nao)
prev<-prev[!duplicated(prev),]
prev$nao_prev<-NA
shift <- function(x, n){
c(x[(seq(n))], rep(NA, n))
}
prev$nao_prev <- shift(prev$nao, 1)
View(prev)
shift <- function(x, n){
c(x[(seq(n))], rep(NA, n))
}
prev$nao_prev <- shift(prev$nao, 1)
prev$nao<-ifelse(prev$year==2016, NA, prev$nao)
prev$nao_prev <- shift(prev$nao, 1)
prev<-rbind(c("2017", NA, NA))
prev<-rbind(prev, c("2017", NA, NA))
prev<-prop%>%dplyr::select(year, nao)
prev<-prev[!duplicated(prev),]
shift <- function(x, n){
c(x[(seq(n))], rep(NA, n))
}
prev<-rbind(prev, c("2017", NA, NA))
prev$nao_prev <- shift(prev$nao, 1)
prop$nao_prev<-NA
for(i in c(1:nrow(prop))){
for(j in c(1:nrow(prop)))
if(prop$year[i]=prop$year[j]+1)
prop$nao_prev[j]=prop$nao[i]
}
for(i in c(1:nrow(prop))){
for(j in c(1:nrow(prop))) {
if(prop$year[i]=prop$year[j]+1)
prop$nao_prev[j]=prop$nao[i]
}
}
for(i in c(1:nrow(prop))){
for(j in c(1:nrow(prop))) {
if(prop$year[i]=prop$year[j]+1)
prop$nao_prev[j]<-prop$nao[i]
}
}
for(i in c(1:nrow(prop))){
for(j in c(1:nrow(prop)))
if(prop$year[i]=prop$year[j]+1)
prop$nao_prev[j]<-prop$nao[i]
}
prop_prev$nao_prev<-NA
prop_prev<-prop
prop_prev$year<-prop_prev$year + 1
prop_prev$nao_prev<-NA
for(i in c(1:nrow(prop))){
for(j in c(1:nrow(prop_prev)))
if(prop$year[i]=prop_prev$year[j] )
prop_prev$nao_prev[j]<-prop$nao[i]
}
for(i in c(1:nrow(prop))) {
for(j in c(1:nrow(prop_prev)))
if(prop$year[i]=prop_prev$year[j] )
prop_prev$nao_prev[j]<-prop$nao[i]
}
if(prop$year[i]==prop_prev$year[j] )
for(i in c(1:nrow(prop))) {
for(j in c(1:nrow(prop_prev)))
if(prop$year[i]==prop_prev$year[j] )
prop_prev$nao_prev[j]<-prop$nao[i]
}
View(prop_prev)
prop_prev<-prop
prop_prev$year<-prop_prev$year - 1
prop_prev$nao_prev<-NA
for(i in c(1:nrow(prop))) {
for(j in c(1:nrow(prop_prev)))
if(prop$year[i]==prop_prev$year[j] )
prop_prev$nao_prev[j]<-prop$nao[i]
}
