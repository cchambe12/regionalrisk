library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
View(goo)
View(trx)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
View(trx)
View(classes)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Bird", trx$group)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$scientific_name=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$scientific_name=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$scientific_name=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$scientific_name=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$taxa=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$taxa=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$taxa=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$taxa=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
trx <- left_join(trx, classes)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, subset=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa"))
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
goo <- full_join(results, trx)
howmanymatch <- unique(trx$image)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(foo)
goo <- left_join(results, trx)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(goo)
709/821
(exp(-0.48)-1)*100
(exp(0.14)-1)*100
(exp(0.4)-1)*100
(exp(0.19)-1)*100
(exp(0.35)-1)*100
(exp(0.42)-1)*100
(exp(-0.83)-1)*100
load("/Users/catchamberlain/Documents/git/regionalrisk/orig_full.Rdata")
orig.full
(exp(-0.12)-1)*100
broom::tidy(orig.full)
(exp(0.0008967095)-1)*100
load("/Users/catchamberlain/Documents/git/regionalrisk/bbmod.scaled.Rdata")
load("/Users/catchamberlain/Documents/git/regionalrisk/lstfrz.scaled.Rdata")
load("/Users/catchamberlain/Documents/git/regionalrisk/tmin.simple.Rdata")
bb.mod.scaled
lstfrz.mod.scaled
tmin.simple
lstfrz <- read.csv("~/Documents/git/regionalrisk/analyses/output/lastfreezedates.csv")
lstfrz$cc <- ifelse(lstfrz$year<=1983, 0, 1)
lstfrz$cc.z <- (lstfrz$cc-mean(lstfrz$cc,na.rm=TRUE))/(2*sd(lstfrz$cc,na.rm=TRUE))
colnames(lstfrz)
load("/Users/catchamberlain/Documents/git/regionalrisk/tminmod.Rdata")
tmin.mod
171-8
163/20
163/30
163-7
156/30
### Need to first build shapefiles...
pnw_long <- c(-123,  -123,  -119, -119)
pnw_lat <- c(52, 46, 52, 46)
pnw <- cbind(pnw_lat, pnw_long)
pnw
library(sp)
pnwpoly = Polygon(pnw)
pnwps = Polygons(list(pnw),1)
pnwsps = SpatialPolygons(pnw)
plot(pnw)
plot(pnwpoly)
st_write(pnw,
"~/Documents/git/microclimates/pnw.shp", driver = "ESRI Shapefile")
proj4string(pnw) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
require(sf)
install.packages("sf")
pnwshp<-st_as_sf(pnw)
require(sf)
pnwshp<-st_as_sf(pnw)
pnwshp<-st_as_sf(pnw, crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
coordinates(pnw)=~long+lat
### Need to first build shapefiles...
pnw_long <- c(-123,  -123,  -119, -119)
pnw_lat <- c(52, 46, 52, 46)
pnw <- cbind(pnw_lat, pnw_long)
View(pnw)
### Need to first build shapefiles...
pnw <- data.frame(long=c(-123,  -123,  -119, -119), lat= c(52, 46, 52, 46))
coordinates(pnw)=~long+lat
proj4string(pnw)<- CRS("+proj=longlat +datum=WGS84")
LLcoor<-spTransform(pnw,CRS("+proj=longlat"))
pnwshp<-spTransform(pnw,CRS("+proj=longlat"))
(78824+2337+931+655+388+94+93+60+48+45+41+41+36+34+32+23+23+19+19+16+14+10+8+7+7+5+4+4+4+3+3+3+2+2+2+2+22)
(2788+13+8+17+34+2+2+1+1)
2866/83861
osp <- read.csv("~/Documents/git/ospree/analyses/input/ospree.csv")
ospfull <- read.csv("~/Documents/git/ospree/analyses/output/ospree_clean_withchill_BB_taxon.csv")
unique(osp$datasetID)
length(unique(osp$datasetID))
range(osp$year, na.rm=TRUE)
osp <- read.csv("~/Documents/git/ospree/analyses/output/ospree2019update.csv")
osp <- read.csv("~/Documents/git/ospree/analyses/output/ospree2019update.csv")
length(unique(osp$datasetID))
range(osp$year, na.rm=TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(raster)
library(reshape2)
library(data.table)
dxx<-read.csv("~/Desktop/allspp_climateprep_midleaf.csv", header=TRUE)
dxx<-dxx[sample(nrow(dxx), 50), ]
r<-brick("~/Desktop/Big Data Files/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
bb<-dxx
bb$lat.long<-paste(bb$lat, bb$long, sep=",")
bb<-bb[!duplicated(bb$lat.long),]
lats <- bb$lat
lons <- bb$long
coords <- data.frame(x=lons,y=lats)
coords<- na.omit(coords)
points <- SpatialPoints(coords, proj4string = r@crs)
values <- extract(r,points)
dclim <- cbind.data.frame(coordinates(points),values)
dx<-reshape2::melt(dclim, id.vars=c("x","y"))
dx<-dx%>%
dplyr::rename(long=x)%>%
dplyr::rename(lat=y)%>%
dplyr::rename(date=variable)%>%
dplyr::rename(Tmin=value)
dx$date<-substr(dx$date, 2,11)
dx$Date<- gsub("[.]", "-", dx$date)
dxx<-dplyr::select(dxx, -date)
dx<-dplyr::select(dx, -date)
x<-inner_join(dx, dxx, by=c("Date", "lat", "long"))
x$fs <- 0
x$fs<- ifelse(x$Tmin<=-2.2 & x$species%in%c("FAGSYL", "FRAEXC", "QUEROB"), 1, x$fs)
x$fs<- ifelse(x$Tmin<=-5 & x$species%in%c("AESHIP", "BETPEN", "ALNRUG"), 1, x$fs)
View(x)
dxx<-read.csv("/n/wolkovich_lab/Lab/Cat/allspp_climateprep_midleaf.csv", header=TRUE)
dxx<-read.csv("~/Desktop/allspp_climateprep_midleaf.csv", header=TRUE)
View(x)
dxx<-dxx[sample(nrow(dxx), 100), ]
r<-brick("/n/wolkovich_lab/Lab/Cat/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
r<-brick("~/Desktop/Big Data Files/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
bb<-dxx
bb$lat.long<-paste(bb$lat, bb$long, sep=",")
bb<-bb[!duplicated(bb$lat.long),]
lats <- bb$lat
lons <- bb$long
coords <- data.frame(x=lons,y=lats)
coords<- na.omit(coords)
points <- SpatialPoints(coords, proj4string = r@crs)
values <- extract(r,points)
dclim <- cbind.data.frame(coordinates(points),values)
dx<-reshape2::melt(dclim, id.vars=c("x","y"))
dx<-dx%>%
dplyr::rename(long=x)%>%
dplyr::rename(lat=y)%>%
dplyr::rename(date=variable)%>%
dplyr::rename(Tmin=value)
dx$date<-substr(dx$date, 2,11)
dx$Date<- gsub("[.]", "-", dx$date)
dxx<-dplyr::select(dxx, -date)
dx<-dplyr::select(dx, -date)
x<-inner_join(dx, dxx, by=c("Date", "lat", "long"))
x$fs <- 0
x$fs<- ifelse(x$Tmin<=-2.2 & x$species%in%c("FAGSYL", "FRAEXC", "QUEROB"), 1, x$fs)
x$fs<- ifelse(x$Tmin<=-5 & x$species%in%c("AESHIP", "BETPEN", "ALNRUG"), 1, x$fs)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data - must choose the dataframe for specific analyses
#fs<-read.csv("output/fs_allspp_dvr.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_five.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_original.csv", header=TRUE)
fs<-read.csv("output/fs_allspp_fullleaf.csv", header=TRUE)
fs<-subset(fs, select=c("lat", "long", "fs.count", "year", "species", "fs"))
mat<-read.csv("output/mat_MAM.csv", header=TRUE)
mat<-subset(mat, year>1950)
elev<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
elev<-subset(elev, year>1950)
nao<-read.csv("output/nao_NovApr.csv", header=TRUE)
nao<-subset(nao, year>1950)
elev<-dplyr::select(elev, species, LAT, LON, ALT)
elev<-elev%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
elev$lat.long<-paste(elev$lat, elev$long)
elev<-elev[!duplicated(elev),]
matelev<-full_join(elev, mat)
#### Get elevation information
matelev$cc<-ifelse(matelev$year<=1983&matelev$year>1950, 0, 1)
fs<-dplyr::select(fs, lat, long, species, fs.count, year)
fs<-fs[!duplicated(fs),]
fspreds<-full_join(matelev, fs)
fspreds<-na.omit(fspreds)
fspreds<-fspreds[!duplicated(fspreds),]
fspreds$elev<-ave(fspreds$elev, fspreds$lat.long)
fspreds<-fspreds[!duplicated(fspreds),]
nao<-dplyr::select(nao, year, nao)
nao<-nao[!duplicated(nao),]
fspreds<-full_join(fspreds, nao)
dist<-read.csv("output/dist_wgs.csv", header=TRUE)
dist<-dist%>%rename(long=LONG)%>%rename(lat=LAT)
fspreds<-full_join(fspreds, dist)
write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_fullleaf_allpred.csv", row.names = FALSE)
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(raster)
library(reshape2)
library(data.table)
setwd("~/Documents/git/regionalrisk/analyses")
aes<-read.csv("output/bbch_region_aesculus.csv", header=TRUE)
aln<-read.csv("output/bbch_region_alnus.csv", header=TRUE)
bet<-read.csv("output/bbch_region_betula.csv", header=TRUE)
fsyl<-read.csv("output/bbch_region_fagus.csv", header=TRUE)
fra<-read.csv("output/bbch_region_fraxinus.csv", header=TRUE)
que<-read.csv("output/bbch_region_quercus.csv", header=TRUE)
d<-full_join(aes, aln)
d<-full_join(d, bet)
d<-full_join(d, fsyl)
d<-full_join(d, fra)
d<-full_join(d, que)
df<-d%>%
filter(BBCH==11)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
df$bb<-df$lo-12
df<-dplyr::select(df, bb, year, PEP_ID, lat, long, lo, species)
df$pep.year<-paste(df$year, df$PEP_ID, df$species)
dfcomp<-d%>%
filter(BBCH==11)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
dfcomp$bb<-dfcomp$lo-12
dfcomp<-dplyr::select(dfcomp, bb, year, PEP_ID, lat, long, lo, species)
dfcomp$pep.year<-paste(dfcomp$year, dfcomp$PEP_ID, dfcomp$species)
dfcomp<-d%>%
filter(BBCH==13)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
dfcomp$bb<-dfcomp$lo-12
dfcomp<-dplyr::select(dfcomp, bb, year, PEP_ID, lat, long, lo, species)
dfcomp$pep.year<-paste(dfcomp$year, dfcomp$PEP_ID, dfcomp$species)
table(dfcomp$species)
sort(unique(d$BBCH))
dfcomp<-d%>%
filter(BBCH==7)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
dfcomp$bb<-dfcomp$lo-12
dfcomp<-dplyr::select(dfcomp, bb, year, PEP_ID, lat, long, lo, species)
dfcomp$pep.year<-paste(dfcomp$year, dfcomp$PEP_ID, dfcomp$species)
dfcomp<-d%>%
filter(BBCH==10)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
dfcomp$bb<-dfcomp$lo-12
dfcomp<-dplyr::select(dfcomp, bb, year, PEP_ID, lat, long, lo, species)
dfcomp$pep.year<-paste(dfcomp$year, dfcomp$PEP_ID, dfcomp$species)
dfcomp<-d%>%
filter(BBCH==15)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
dfcomp$bb<-dfcomp$lo-12
dfcomp<-dplyr::select(dfcomp, bb, year, PEP_ID, lat, long, lo, species)
dfcomp$pep.year<-paste(dfcomp$year, dfcomp$PEP_ID, dfcomp$species)
dfcomp<-d%>%
filter(BBCH==19)%>%
filter(YEAR>=1950)%>%
dplyr::select(YEAR, DAY, BBCH, PEP_ID, LAT, LON, species)%>%
rename(year=YEAR)%>%
rename(lo=DAY)%>%
rename(lat=LAT)%>%
rename(long=LON)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
dfcomp$bb<-dfcomp$lo-12
dfcomp<-dplyr::select(dfcomp, bb, year, PEP_ID, lat, long, lo, species)
dfcomp$pep.year<-paste(dfcomp$year, dfcomp$PEP_ID, dfcomp$species)
