write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", row.names=FALSE)
colnames(prep_space)
table(prep_space$fs.count, prep_space$species)
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/output/memselect_orig.csv", header=TRUE)
dx<-cbind(bbs, dselect)
bb<-read.csv("/n/wolkovich_lab/Lab/Cat/fs_allspp_dvr_allpred.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", header=TRUE)
bb$lat.long<-paste(bb$lat, bb$long)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
dx<-cbind(bbs, dselect)
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/orig_bigpriors.Rdata")
orig.bigpriors
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
bb$lat.long<-paste(bb$lat, bb$long)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/output/memselect_orig.csv", header=TRUE)
dx<-cbind(bbs, dselect)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -lat.long, -distance, -year)
library(dplyr)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -lat.long, -distance, -year)
rex.mod<-lm(fs.count~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig, by="lat.long")
View(prep_space)
check<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
range(check$eigen)
range(prep_space$eigen)
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/output/memselect_orig.csv", header=TRUE)
colnames(dselect)
colnames(dx)
dx<-cbind(bbs, dselect)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -lat.long, -distance, -year, -fs.count, -nao, -cc)
rex.mod<-lm(Y~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig, by="lat.long")
range(prep_space$eigen)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-read.csv("~/Documents/git/regionalrisk/analyses/fs_space_orig.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/fs_space_orig.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/fs_space_orig.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
colnames(bb)
#dselect<-read.csv("~/Documents/git/regionalrisk/analyses/output/memselect_orig.csv", header=TRUE)
deselect<-bb
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$lat.long<-paste(bb$lat, bb$long)
bb$Y<-ave(bb$fs, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
dx<-cbind(bbs, dselect)
library(dplyr)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -lat.long, -distance, -year, -fs.count, -nao, -cc, -fs)
rex.mod<-lm(Y~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig, by="lat.long")
#write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_dvr.csv", row.names=FALSE)
write.csv(dx, file="/n/wolkovich_lab/Lab/Cat/fs_space_orig.csv", row.names=FALSE)
#write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_dvr.csv", row.names=FALSE)
write.csv(prep_space, file="/n/wolkovich_lab/Lab/Cat/fs_space_orig.csv", row.names=FALSE)
write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", row.names=FALSE)
range(prep_space$eigen)
bb<-read.csv("~/Documents/git/regionalrisk/fs_space_dvr.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/fs_space_dvr.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
dselect<-read.csv("~/Documents/git/regionalrisk/memselect_dvr.csv", header=TRUE)
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/scripts/memselect_dvr.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$lat.long<-paste(bb$lat, bb$long)
bb$Y<-ave(bb$fs, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
#dselect<-read.csv("~/Documents/git/regionalrisk/analyses/scripts/memselect_dvr.csv", header=TRUE)
#deselect<-bb
dx<-cbind(bbs, dselect)
library(dplyr)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -lat.long, -distance, -year, -fs.count, -nao, -cc, -fs)
rex.mod<-lm(Y~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig, by="lat.long")
write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_dvr.csv", row.names=FALSE)
range(prep_space$eigen)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
foo<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_dvr.csv", header=TRUE)
x<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", header=TRUE)
write.csv(dselect, file="/n/wolkovich_lab/Lab/Cat/memselect_orig.csv", row.names=FALSE)
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/scripts/memselect_orig.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$lat.long<-paste(bb$lat, bb$long)
bb$Y<-ave(bb$fs, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
#dselect<-read.csv("~/Documents/git/regionalrisk/analyses/scripts/memselect_orig.csv", header=TRUE)
#deselect<-bb
dx<-cbind(bbs, dselect)
library(dplyr)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -lat.long, -distance, -year, -fs.count, -nao, -cc, -fs)
rex.mod<-lm(Y~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig, by="lat.long")
range(prep_space$eigen)
range(x$eigen)
write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", row.names=FALSE)
x<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
bb<-x
#bb<-x
#bb$fs<-ifelse(bb$fs.count>0, 1, 0)
#bb$lat.long<-paste(bb$lat, bb$long)
#bb$Y<-ave(bb$fs, bb$lat.long, FUN=sum)
#bbs<-bb%>%dplyr::select(lat.long, Y, elev, distkm, lat, long, fs.count)
#bbs$fs.count<-ave(bb$fs, bb$lat.long)
bbs<-bb[!duplicated(bb$lat.long),]
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/scripts/memselect_orig.csv", header=TRUE)
dx<-cbind(bbs, dselect)
colnames(dx)
#eigen<-rowMeans(dx[,13:493])
dx$eigen<-dx[,13]
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, dx)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig)
bb<-prep_space
library(dplyr)
prep_space<-full_join(bb, beig)
bb<-prep_space
#bb$eigen<-rowMeans(bb[,20:24])
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
#bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb$space2.z <-(bb$eigen2-mean(bb$eigen2,na.rm=TRUE))/(2*sd(bb$eigen2,na.rm=TRUE))
norm.first<-glm(fs~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species +
cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z,
data=bb, family=binomial())
summary(norm.first)
noncenspace.first<-glm(fs~ nao.z + mat.z + dist.z + elev.z + eigen +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + cc.z:species + eigen:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + eigen:cc.z,
data=bb, family=binomial())
summary(noncenspace.first)
write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_orig.csv", row.names=FALSE)
x<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", header=TRUE)
bb<-x
#bb<-x
#bb$fs<-ifelse(bb$fs.count>0, 1, 0)
#bb$lat.long<-paste(bb$lat, bb$long)
#bb$Y<-ave(bb$fs, bb$lat.long, FUN=sum)
#bbs<-bb%>%dplyr::select(lat.long, Y, elev, distkm, lat, long, fs.count)
#bbs$fs.count<-ave(bb$fs, bb$lat.long)
bbs<-bb[!duplicated(bb$lat.long),]
dselect<-read.csv("~/Documents/git/regionalrisk/memselect_dvr.csv", header=TRUE)
dx<-cbind(bbs, dselect)
rex<-dx%>%dplyr::select(-lat.long, -distance, -lat, -long, -cc, -species, -nao, -mst, -year)
#test<-full_join(bbs, MEM.select)
#test<-test%>%dplyr::select(-species, -lat.long, -distance)
rex.mod<-lm(fs.count~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, dx)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig)
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig)
bb<-prep_space
#bb$eigen<-rowMeans(bb[,20:24])
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
#bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb$space2.z <-(bb$eigen2-mean(bb$eigen2,na.rm=TRUE))/(2*sd(bb$eigen2,na.rm=TRUE))
norm.first<-glm(fs~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species +
cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z,
data=bb, family=binomial())
summary(norm.first)
bb<-x
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
#bb<-x
#bb$fs<-ifelse(bb$fs.count>0, 1, 0)
#bb$lat.long<-paste(bb$lat, bb$long)
#bb$Y<-ave(bb$fs, bb$lat.long, FUN=sum)
#bbs<-bb%>%dplyr::select(lat.long, Y, elev, distkm, lat, long, fs.count)
#bbs$fs.count<-ave(bb$fs, bb$lat.long)
bbs<-bb[!duplicated(bb$lat.long),]
dx<-cbind(bbs, dselect)
rex<-dx%>%dplyr::select(-lat.long, -distance, -lat, -long, -cc, -species, -nao, -mst, -year)
#test<-full_join(bbs, MEM.select)
#test<-test%>%dplyr::select(-species, -lat.long, -distance)
rex.mod<-lm(fs.count~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
#bb<-bb%>%dplyr::select(-eigen)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig)
bb<-prep_space
#bb$eigen<-rowMeans(bb[,20:24])
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
#bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
norm.first<-glm(fs~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species +
cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z,
data=bb, family=binomial())
summary(norm.first)
load("~/Documents/git/regionalrisk/orig_short.Rdata")
orig.short
load("~/Documents/git/orig_full.Rdata")
orig.full
make_output(output_location = "~/Documents/git/cameratrap", # the output csv will be stored on my dekstop
output_name = "zamba_results.csv", # the name of the csv I want to create with my output
model_dir = "~/Documents/git/cameratrap", # the location where I stored the L1 folder
saved_predictions = "output_class_names.txt" # the same name that I used for save_predictions in the classify function (if I didn't use default, I would need to change this).
)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
#library(devtools)
#devtools::install_github("mikeyEcology/MLWIC")
library(reticulate)
library(tensorflow)
library(MLWIC)
setup(python_loc = "/Users/CatherineChamberlain/anaconda3/bin/python")
make_output(output_location = "~/Documents/git/cameratrap", # the output csv will be stored on my dekstop
output_name = "zamba_results.csv", # the name of the csv I want to create with my output
model_dir = "~/Documents/git/cameratrap", # the location where I stored the L1 folder
saved_predictions = "output_class_names.txt" # the same name that I used for save_predictions in the classify function (if I didn't use default, I would need to change this).
)
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/orig_short.Rdata")
View(orig.short)
orig.short
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/dvr_full.Rdata")
View(dvr.full)
dvr.full
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(egg)
library(RColorBrewer)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
#xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
#xx<-subset(xx, year>1950)
#mat<-read.csv("output/BBdata.csv", header=TRUE)
mat<-read.csv("output/BBdata_dvr.csv", header=TRUE)
mat$bb.avg<-ave(mat$bb, mat$species)
mat$cc<-ifelse(mat$year<1984, 0, 1)
mat$species<-ifelse(mat$species=="BETPEN", "aaBETPEN", mat$species)
mat$species<-ifelse(mat$species=="FRAEXC", "zFRAEXC", mat$species)
#mat$species<-ifelse(mat$species=="ALNGLU", "abALNGLU", mat$species)
pre<-subset(mat, mat$cc==0)
#for(i in unique(pre$species)){
# pre<-pre[(pre$bb[pre$species==i]<quantile(pre$bb[pre$species==i], 0.75) & pre$bb[pre$species==i]>quantile(pre$bb[pre$species==i], 0.25)),]
#}
post<-subset(mat, mat$cc==1)
#for(i in unique(post$species)){
# post<-post[(post$bb[post$species==i]<quantile(post$bb[post$species==i], 0.75) & post$bb[post$species==i]>quantile(post$bb[post$species==i], 0.25)),]
#}
plus<-full_join(pre, post)
cols <- colorRampPalette(brewer.pal(7,"Accent"))(6)
budburst<- ggplot(mat, aes(x=species, y=bb, alpha=cc)) + geom_boxplot(aes(alpha=as.factor(cc), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
scale_fill_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_color_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"), #legend.position = "none",
plot.margin = unit(c(1.5,1.5,1.0,1.5), "lines"),
axis.title.x = element_blank(),
axis.text.x.bottom = element_blank(), axis.ticks.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(labels=c("aaBETPEN" = "Betula pendula", "AESHIP" = "Aesculus \nhippocastanum",
"ALNGLU" = "Alnus glutinosa", "FAGSYL"="Fagus sylvatica",
"cQUEROB"="Quercus robur", "zFRAEXC"="Fraxinus \nexcelsior")) +
ylab("Day of Budburst") + coord_cartesian(ylim=c(50,165)) +
geom_hline(yintercept=107.96, linetype="dotted", col="black") +
#annotate("text", x = 5.75, y = 245, label = "Before 1984", family="Helvetica", size=3, fontface="bold") +
scale_alpha_manual(name="Climate Change", values=c(0.2, 0.7),
labels=c("0"="1951-1983", "1"="1984-2016")) +
ggtitle("A.") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
###### Tmin boxplots now...
#tm<-read.csv("output/tminprep_boxplots.csv", header=TRUE)
tm<-read.csv("output/tminprep_boxplots_dvr.csv", header=TRUE)
tm$cc<-ifelse(tm$year<1984, 0, 1)
tm$species<-ifelse(tm$species=="BETPEN", "aaBETPEN", tm$species)
tm$species<-ifelse(tm$species=="FRAEXC", "zFRAEXC", tm$species)
#tm$species<-ifelse(tm$species=="ALNGLU", "abALNGLU", tm$species)
tm<-tm[!is.na(tm$Tmin),]
pret<-subset(tm, tm$cc==0)
#for(i in unique(pret$species)){
# pret<-pret[(pret$Tmin[pret$species==i]<quantile(pret$Tmin[pret$species==i], 0.75) & pret$Tmin[pret$species==i]>quantile(pret$Tmin[pret$species==i], 0.25)),]
#}
postt<-subset(tm, tm$cc==1)
#for(i in unique(postt$species)){
#  postt<-postt[(postt$Tmin[postt$species==i]<quantile(postt$Tmin[postt$species==i], 0.75) & postt$Tmin[postt$species==i]>quantile(postt$Tmin[postt$species==i], 0.25)),]
#}
plust<-full_join(pret, postt)
cols <- colorRampPalette(brewer.pal(7,"Accent"))(6)
tmin<- ggplot(plust, aes(x=species, y=Tmin, alpha=cc)) + geom_boxplot(aes(alpha=as.factor(cc), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
scale_fill_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_color_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"), #legend.position = "none",
plot.margin = unit(c(1.5,1.5,1.0,1.5), "lines"),
axis.title.x = element_blank(),
legend.position = "none",
axis.text.x.bottom = element_blank(), axis.ticks.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(labels=c("aaBETPEN" = "Betula pendula", "AESHIP" = "Aesculus \nhippocastanum",
"ALNGLU" = "Alnus glutinosa", "FAGSYL"="Fagus sylvatica",
"QUEROB"="Quercus robur", "zFRAEXC"="Fraxinus \nexcelsior")) +
ylab("Minimum Temperature \nfrom Budburst to Leafout") + coord_cartesian(ylim=c(0,15)) +
geom_hline(yintercept=7.69, linetype="dotted", col="black") +
#annotate("text", x = 5.75, y = 245, label = "Before 1984", family="Helvetica", size=3, fontface="bold") +
scale_alpha_manual(name="Climate Change", values=c(0.2, 0.7),
labels=c("0"="1951-1983", "1"="1984-2016")) +
ggtitle("B.") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
### And finally... False springs!
#f<-read.csv("output/fs_newspace_orig.csv", header=TRUE)
f<-read.csv("output/fs_newspace_dvr.csv", header=TRUE)
#f<-read.csv("output/fs_newspace_five.csv", header=TRUE)
f$cc<-ifelse(f$year<1980, 0, 1)
f$species<-ifelse(f$species=="BETPEN", "aaBETPEN", f$species)
f$species<-ifelse(f$species=="FRAEXC", "zFRAEXC", f$species)
#f$species<-ifelse(f$species=="ALNGLU", "abALNGLU", f$species)
f<-f[!is.na(f$fs.count),]
f$fs<-ifelse(f$fs.count>0, 1, 0)
f$fs<-ave(f$fs,f$lat.long, f$species, f$cc, FUN=sum)
plusf<-subset(f, select=c(species, cc, fs))
plusf<-plusf[!duplicated(plusf),]
cols <- colorRampPalette(brewer.pal(7,"Accent"))(6)
falsespring<- ggplot(plusf, aes(x=species,alpha=cc, y=fs)) + geom_boxplot(aes(alpha=as.factor(cc), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
scale_fill_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_color_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=35, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"), #legend.position = "none",
plot.margin = unit(c(1.5,1.5, 1.0, 1.5), "lines"),
axis.title.x = element_blank()) +
#axis.text.x.bottom = element_blank(), axis.ticks.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(labels=c("aaBETPEN" = "Betula pendula", "AESHIP" = "Aesculus \nhippocastanum",
"ALNGLU" = "Alnus glutinosa", "FAGSYL"="Fagus sylvatica",
"QUEROB"="Quercus robur", "zFRAEXC"="Fraxinus \nexcelsior")) +
ylab("Number of Years \nwith False Springs") + coord_cartesian(ylim=c(0,31)) +
#geom_hline(yintercept=7.66, linetype="dotted", col="black") +
#annotate("text", x = 5.75, y = 245, label = "Before 1984", family="Helvetica", size=3, fontface="bold") +
scale_alpha_manual(name="Climate Change", values=c(0.2, 0.7),
labels=c("0"="1951-1983", "1"="1984-2016")) +
ggtitle("C.") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(falsespring)
falsespring<- ggplot(plusf, aes(x=species,alpha=cc, y=fs)) + geom_boxplot(aes(alpha=as.factor(cc), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
scale_fill_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_color_manual(name="Species", values=cols,
labels=c("aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=35, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"), legend.position = "none",
plot.margin = unit(c(1.5,1.5, 1.0, 1.5), "lines"),
axis.title.x = element_blank()) +
#axis.text.x.bottom = element_blank(), axis.ticks.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(labels=c("aaBETPEN" = "Betula pendula", "AESHIP" = "Aesculus \nhippocastanum",
"ALNGLU" = "Alnus glutinosa", "FAGSYL"="Fagus sylvatica",
"QUEROB"="Quercus robur", "zFRAEXC"="Fraxinus \nexcelsior")) +
ylab("Number of Years \nwith False Springs") + coord_cartesian(ylim=c(0,31)) +
#geom_hline(yintercept=7.66, linetype="dotted", col="black") +
#annotate("text", x = 5.75, y = 245, label = "Before 1984", family="Helvetica", size=3, fontface="bold") +
scale_alpha_manual(name="Climate Change", values=c(0.2, 0.7),
labels=c("0"="1951-1983", "1"="1984-2016")) +
ggtitle("C.") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
quartz()
g1<-ggarrange(budburst, tmin, falsespring, nrow=3)
g2<-grid.arrange(mylegend)
grid.arrange(g1, g2, ncol=2, widths=c(2.5, 0.75))
