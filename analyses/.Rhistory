mace<-read.csv("PEP725/PEP725_MK_Sambucus.csv", header=TRUE) # ADDED!
mace.station<-read.csv("PEP725/PEP725_MK_stations.csv", header=TRUE) # ADDED!
neth<-read.csv("PEP725_NL/PEP725_NL_Sambucus.csv", header=TRUE)
neth.station<-read.csv("PEP725_NL/PEP725_NL_stations.csv", header=TRUE)
slov<-read.csv("PEP725_SI/PEP725_SI_Sambucus.csv", header=TRUE) # ADDED!
slov.station<-read.csv("PEP725_SI/PEP725_SI_stations.csv", header=TRUE) # ADDED!
vakia<-read.csv("PEP725_SK/PEP725_SK_Sambucus.csv", header=TRUE) # ADDED!
vakia.station<-read.csv("PEP725_SK/PEP725_SK_stations.csv", header=TRUE) #ADDED!
engl<-read.csv("PEP725_UK/PEP725_UK_Sambucus.csv", header=TRUE)
engl.station<-read.csv("PEP725_UK/PEP725_UK_stations.csv", header=TRUE)
at<-austria%>%filter(BBCH<=19)
at<-full_join(at, aust.station)
at<-dplyr::select(at, -NAME)
at<-na.omit(at)
bs<-bos%>%filter(BBCH<=19)
bs<-full_join(bs, bos.station)
bs<-dplyr::select(bs, -NAME)
bs<-na.omit(bs)
d<-bind_rows(at,bs)
ch<-switz%>%filter(BBCH<=19)
ch<-full_join(ch, switz.station)
ch<-dplyr::select(ch, -NAME)
ch<-na.omit(ch)
d<-bind_rows(d,ch)
cz<-czech%>%filter(BBCH<=19)
cz<-full_join(cz, czech.station)
cz<-dplyr::select(cz, -NAME)
cz<-na.omit(cz)
d<-bind_rows(d, cz)
gm<-germany%>%filter(BBCH<=19)
gm<-full_join(gm, germ.station)
gm<-dplyr::select(gm, -NAME)
gm<-na.omit(gm)
d<-bind_rows(d, gm)
hr<-croatia%>%filter(BBCH<=19)
hr<-full_join(hr, croa.station)
hr<-dplyr::select(hr, -NAME)
hr<-na.omit(hr)
d<-bind_rows(d, hr)
ie<-ireland%>%filter(BBCH<=19)
ie<-full_join(ie, ire.station)
ie<-dplyr::select(ie, -NAME)
ie<-na.omit(ie)
d<-bind_rows(d, ie)
lv<-latv%>%filter(BBCH<=19)
lv<-full_join(lv, latv.station)
lv<-dplyr::select(lv, -NAME)
lv<-na.omit(lv)
d<-bind_rows(d, lv)
nl<-neth%>%filter(BBCH<=19)
nl<-full_join(nl, neth.station)
nl<-dplyr::select(nl, -NAME)
nl<-na.omit(nl)
d<-bind_rows(d, nl)
uk<-engl%>%filter(BBCH<=19)
uk<-full_join(uk, engl.station)
uk<-dplyr::select(uk, -NAME)
uk<-na.omit(uk)
d<-bind_rows(d, uk)
d<-na.omit(d)
d$species<-"ACEPSU"
rm(list=ls())
library(ggmap)
library(ggplot2)
library(rworldmap)
library(maps)
library(mapdata)
library(marmap)
install.packages("marmap")
library(marmap)
library(rgdal)
install.packages("rgdal")
library(rgdal)
library(maptools)
setwd("~/MEGA/Work_Harvard_postdoc/mapping/vector themes")
setwd("~/Documents/git/regionalrisk/analyses/input")
land<-readShapePoly("ne_50m_land.shp") ##
boundars<-readShapePoly("ne_50m_admin_0_countries.shp")
file.exists("ne_50m_land.shp")
file.exists("ne_50m_admin_0_countries.shp")
land<-readShapeSpatial("ne_50m_land.shp") ##
boundars<-readShapeSpatial("ne_50m_admin_0_countries.shp")
library(rgdal)
library(maptools)
setwd("~/Documents/git/regionalrisk/analyses/input")
land<-readShapeSpatial("ne_50m_land.shp") ##
setwd("~/Documents/git/regionalrisk/analyses/input/natural_earth_vector")
land<-readShapeSpatial("50m_physical/ne_50m_land.shp") ##
boundars<-readShapeSpatial("50m_cultural/ne_50m_admin_0_countries.shp")
plot(land,col="grey",lty=0,ylim=c(30,60),xlim=c(-5,35))
plot(boundars,col="grey",border="lightgrey",ylim=c(30,60),xlim=c(-5,35))
BATHYMET<-getNOAA.bathy(lon1=180,lon2=-180,lat1=75,lat2=-60, resolution=30)
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
plot(BATHYMET, image = TRUE, land = TRUE, lwd = 0.05,lty=0,
bpal = list(c(0, max(BATHYMET), "lightsteelblue1"),
c(min(BATHYMET),0,blues)),add=F)
library(raster)
extent(land)
to.crop<-extent(-180,180,-60,75)
land.cropped<-crop(land,to.crop)
library(rgeos)
install.packages("rgeos")
library(rgeos)
to.crop<-extent(-180,180,-60,75)
land.cropped<-crop(land,to.crop)
plot(land.cropped,col="grey",lty=0,add=T)
plot(land.cropped,col="grey",lty=0,add=T, ylim=c(30,70), xlim=c(-5, 35))
to.crop<-extent(-5,35,30,70)
land.cropped<-crop(land,to.crop)
plot(land.cropped,col="grey",lty=0,add=T, ylim=c(30,70), xlim=c(-5, 35))
plot(to.crop)
BATHYMET<-getNOAA.bathy(lon1=-5,lon2=35,lat1=30,lat2=70, resolution=30)
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
plot(BATHYMET, image = TRUE, land = TRUE, lwd = 0.05,lty=0,
bpal = list(c(0, max(BATHYMET), "lightsteelblue1"),
c(min(BATHYMET),0,blues)),add=F)
library(raster)
extent(land)
to.crop<-extent(-5,35,30,70)
land.cropped<-crop(land,to.crop)
plot(land.cropped,col="grey",lty=0,add=T)
BATHYMET<-getNOAA.bathy(lon1=-5,lon2=45,lat1=30,lat2=70, resolution=30)
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
plot(BATHYMET, image = TRUE, land = TRUE, lwd = 0.05,lty=0,
bpal = list(c(0, max(BATHYMET), "lightsteelblue1"),
c(min(BATHYMET),0,blues)),add=F)
to.crop<-extent(-5,45,30,70)
land.cropped<-crop(land,to.crop)
plot(land.cropped,col="grey",lty=0,add=T)
BATHYMET<-getNOAA.bathy(lon1=-10,lon2=40,lat1=30,lat2=70, resolution=30)
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
plot(BATHYMET, image = TRUE, land = TRUE, lwd = 0.05,lty=0,
bpal = list(c(0, max(BATHYMET), "lightsteelblue1"),
c(min(BATHYMET),0,blues)),add=F)
extent(land)
to.crop<-extent(-10,45,30,70)
land.cropped<-crop(land,to.crop)
plot(land.cropped,col="grey",lty=0,add=T)
BATHYMET<-getNOAA.bathy(lon1=-15,lon2=40,lat1=30,lat2=70, resolution=30)
blues <- c("lightsteelblue4", "lightsteelblue3",
"lightsteelblue2", "lightsteelblue1")
plot(BATHYMET, image = TRUE, land = TRUE, lwd = 0.05,lty=0,
bpal = list(c(0, max(BATHYMET), "lightsteelblue1"),
c(min(BATHYMET),0,blues)),add=F)
to.crop<-extent(-15,40,30,70)
land.cropped<-crop(land,to.crop)
plot(land.cropped,col="grey",lty=0,add=T)
plot(boundars, col="grey", border="lightgrey", ylim=c(30, 70), xlim=c(-15, 35))
plot(boundars, col="grey", border="lightgrey", ylim=c(30, 70), xlim=c(-5, 35))
extent(bounders)
plot(BATHYMET, image = TRUE, land = TRUE, lwd = 0.05,lty=0,
bpal = list(c(0, max(BATHYMET), "lightsteelblue1"),
c(min(BATHYMET),0,blues)),add=F)
extent(boundars)
to.crop<-extent(-15,40,30,70)
land.cropped<-crop(boundars,to.crop)
plot(land.cropped,col="grey",lty=0,add=T)
plot(land.cropped,col="grey",lty=0,add=TRUE, lwd=2)
plot(land.cropped,col="grey",lty=0,add=TRUE, lwd=5)
plot(land.cropped,col="grey",lty=0,add=TRUE, border="lightgrey",lwd=3)
betula<-read.csv("lastobs.csv", header=TRUE)
setwd("~/Documents/git/regionalrisk/analyses")
land<-readShapeSpatial("input/natural_earth_vector/50m_physical/ne_50m_land.shp") ##
boundars<-readShapeSpatial("input/natural_earth_vector/50m_cultural/ne_50m_admin_0_countries.shp")
betula<-read.csv("output/lastobs.csv", header=TRUE)
points(airports$lon, airports$lat, col = "red", cex = .6)
points(betula$long, betula$lat, col = "red", cex = .6)
bet.clim<-read.csv("output/climate_betula.csv", header=TRUE)
bet.bb<-read.csv("output/bbch_region_betula.csv", header=TRUE)
points(bet.clim$long, betclim$lat, col = "red", cex = .6)
points(bet.clim$long, bet.clim$lat, col = "green", cex = .6)
points(bet.bb$long, bet.bb$lat, col = "red", cex = .6, add=TRUE)
library(ggmap)
map<-get_map(location="Europe", zoom=4)
mapPoints<-ggmap(map) + geom_point(x=long, y=lat, col="red", data=bet.clim) + geom_point(x=long, y=lat, col="blue", data=betula) +
geom_point(x=LON, y=LAT, col="red", data=bet.bb)
install.packages("ggplot2")
mapPoints<-ggmap(map) + geom_point(x=long, y=lat, col="red", data=bet.clim) + geom_point(x=long, y=lat, col="blue", data=betula) +
geom_point(x=LON, y=LAT, col="red", data=bet.bb)
library(ggmap)
map<-get_map(location="Europe", zoom=4)
mapPoints<-ggmap(map) + geom_point(x=long, y=lat, col="red", data=bet.clim) + geom_point(x=long, y=lat, col="blue", data=betula) +
geom_point(x=LON, y=LAT, col="red", data=bet.bb)
install.packages("ggproto")
install.packages("ggmap, source=TRUE")
install.packages("ggmap, type="source"")
install.packages("ggmap", type="source")
install.packages("ggmap", type = "source")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
map<-get_map(location="Europe", zoom=4)
mapPoints<-ggmap(map) + geom_point(x=long, y=lat, col="red", data=bet.clim) + geom_point(x=long, y=lat, col="blue", data=betula) +
geom_point(x=LON, y=LAT, col="red", data=bet.bb)
mapPoints<-ggmap(map) + geom_point(x=bet.clim$long, y=bet.clim$lat, col="red", data=bet.clim) + geom_point(x=betula$long, y=betula$lat, col="blue", data=betula) +
geom_point(x=LON, y=LAT, col="red", data=bet.bb)
mapPoints<-ggmap(map) + geom_point(x=bet.clim$long, y=bet.clim$lat, col="red", data=bet.clim) + geom_point(x=betula$long, y=betula$lat, col="blue", data=betula) +
geom_point(x=bet.bb$LON, y=bet.bb$LAT, col="red", data=bet.bb)
mapPoints
mapPoints<-ggmap(map) + geom_point(x=bet.clim$long, y=bet.clim$lat, col="red", data=bet.clim) + geom_point(x=betula$long, y=betula$lat, col="blue", data=betula) +
geom_point(x=bet.bb$LON, y=bet.bb$LAT, col="green", data=bet.bb)
mapPoints
mapPoints<-ggmap(map) + geom_point(x=bet.clim$long, y=bet.clim$lat, col="red", data=bet.clim) + geom_point(x=betula$long, y=betula$lat, col="blue", data=betula)
mapPoints
ggplot(BATHYMET)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
library(lme4)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_betula.csv", header=TRUE)
clim<-read.csv("climate_betula.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
View(d)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
View(plz)
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
tt<-test%>%
filter(count==2) %>%
group_by(pepBB) %>%
filter(date==max(date))
tt<-tt[!duplicated(tt), ]
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
View(plz)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
View(plzers)
plzers<-plzers[!(plzers$PEP_ID==NA)]
View(plzers)
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
View(plzers)
plzers<-plzers[!(is.na(plzers$PEP_ID))]
View(plzers)
plzers$end<-ifelse(is.na(plzers$end), plzers$start, plzers$end)
View(plzers)
class(plzers$end)<-"Date"
View(plzers)
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, year=.$year, pepyear=.$pepyear, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
View(please)
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
View(freeze)
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
peppies<-as.data.frame(table(freeze$pepyear))
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx%>%dplyr::select(-total)
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, events=n)
dxx<-full_join(dxx, fs)
dxx$events<-ifelse(is.na(dxx$events), 0, dxx$events)
dxx$freq<-dxx$events/dxx$total
View(dxx)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
hist(dxx$lat)
mod<-lm(events~lat*long, data=dxx)
display(mod)
mod<-glmer(fs~lat + (1|year), data=dxx, family=binomial(link="logit"))
display(mod)
mod<-glmer(events~lat + (1|year), data=dxx, family=binomial(link="logit"))
mod<-glmer(fs~lat + year, data=dxx, family=binomial(link="logit"))
mod<-glm(fs~lat + year + long + lat*long, data=dxx, family=binomial(link="logit"))
display(mod)
write.csv(freeze, "~/Documents/git/regionalrisk/analyses/output/betula_events.csv", row.names=FALSE)
rm(list=ls())
library(ggmap)
library(ggplot2)
library(rworldmap)
library(maps)
library(mapdata)
library(marmap)
library(rgdal)
library(maptools)
library(rgeos)
setwd("~/Documents/git/regionalrisk/analyses")
land<-readShapeSpatial("input/natural_earth_vector/50m_physical/ne_50m_land.shp") ##
boundars<-readShapeSpatial("input/natural_earth_vector/50m_cultural/ne_50m_admin_0_countries.shp")
betula<-read.csv("output/betula_events.csv", header=TRUE)
bet.clim<-read.csv("output/climate_betula.csv", header=TRUE)
bet.bb<-read.csv("output/bbch_region_betula.csv", header=TRUE)
plot(land,col="grey",lty=0,ylim=c(30,60),xlim=c(-5,35))
plot(boundars,col="grey",border="lightgrey",ylim=c(30,60),xlim=c(-5,35))
points(betula$long, betula$lat, col = "red", cex = .6)
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
points(betula$long, betula$lat, col = "red", cex = .6)
betula$Col <- colors(10)[as.numeric(cut(betula$events,breaks = 1))]
betula$events<-as.numeric(as.character(betula$events))
View(betula)
write.csv(dxx, "~/Documents/git/regionalrisk/analyses/output/betula_events.csv", row.names=FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
library(lme4)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_betula.csv", header=TRUE)
clim<-read.csv("climate_betula.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
############# WORK ON LAST OBSERVATION! ######################
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
#test<- within(test, count[test$count==2]<-2)
tt<-test%>%
filter(count==2) %>%
group_by(pepBB) %>%
filter(date==max(date))
tt<-tt[!duplicated(tt), ]
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
#ends<- unique(plz$pepyear[which(plz$count=="end")])
#plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
#plzers<-plzers[!(plzers$start==plzers$end),]
#plzers<-plzers[!duplicated(plzers), ]
plzers<-plzers[!(is.na(plzers$PEP_ID))]
plzers$end<-ifelse(is.na(plzers$end), plzers$start, plzers$end)
class(plzers$end)<-"Date"
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, year=.$year, pepyear=.$pepyear, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
## Any relationship between growing season and region?
peppies<-as.data.frame(table(freeze$pepyear))
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx%>%dplyr::select(-total)
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, events=n)
dxx<-full_join(dxx, fs)
dxx$events<-ifelse(is.na(dxx$events), 0, dxx$events)
dxx$freq<-dxx$events/dxx$total
#ggplot((dxx), aes(x=long, y=lat)) + geom_point(aes(color=as.factor(freq)))
model1<-lm(freq~lat*long, data=dxx)
display(model1)
mod<-lm(events~lat*long, data=dxx)
display(mod)
mod<-glm(fs~lat + year + long + lat*long, data=dxx, family=binomial(link="logit"))
display(mod)
#qplot(as.factor(PEP_ID), growth, data = freeze,
#geom = "boxplot", color=as.factor(lat)) +
#xlab("Site")+ylab("Growing Season length")
#ggplot((freeze), aes(x=long, y=lat)) + geom_point(aes(col=count))
write.csv(dxx, "~/Documents/git/regionalrisk/analyses/output/betula_events.csv", row.names=FALSE)
View(dxx)
library(rgdal)
library(maptools)
library(rgeos)
setwd("~/Documents/git/regionalrisk/analyses")
land<-readShapeSpatial("input/natural_earth_vector/50m_physical/ne_50m_land.shp") ##
boundars<-readShapeSpatial("input/natural_earth_vector/50m_cultural/ne_50m_admin_0_countries.shp")
betula<-read.csv("output/betula_events.csv", header=TRUE)
bet.clim<-read.csv("output/climate_betula.csv", header=TRUE)
bet.bb<-read.csv("output/bbch_region_betula.csv", header=TRUE)
plot(land,col="grey",lty=0,ylim=c(30,60),xlim=c(-5,35))
## or:
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
colors<-colorRampPalette(c("red", "blue"))
betula$events<-as.numeric(as.character(betula$events))
betula$Col <- colors(10)[as.numeric(cut(betula$events,breaks = 1))]
points(betula$long, betula$lat, col = colors(10), cex = .6)
