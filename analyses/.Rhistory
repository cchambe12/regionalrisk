nbloop <- c()
while (I == TRUE) {
nbloop <- c(nbloop, 1)                   # Loop counter
I.vector <- vector("numeric", ncol(MEM)) # For the I computed with each MEM variable
for (i in 1:ncol(MEM)) {
mod <- lm(y ~ MEM[, i])
I.vector[i] <- moran(residuals(mod), listw, nb_sites, Szero(listw))$I
}
min.moran <- which.min(abs(I.vector))
# Selection of the MEM variable(s) best minimizing the Moran's I value of the residuals:
MEM.sel[, sum(nbloop)] <- MEM[, min.moran]
colnames(MEM.sel)[sum(nbloop)] <- colnames(MEM)[min.moran]
y <- residuals(lm(y ~ MEM.sel[, sum(nbloop)]))
I <- I.test(y, listw, nperm, MEM.autocor, alpha)
}
if (SPATIAL == "FALSE") return("No significant spatial structure")
else list(MEM.all = MEM, MEM.select = MEM.sel)
# By David Bauman; davbauman@gmail.com
}
moransel<-MEM.moransel(y, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
dselect<-as.data.frame(moransel[["MEM.select"]])
moransel
### Looking at Lat Model in Odyssey
library(rstanarm)
library(brms)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
lat.stan<-read.csv("~/Documents/git/ospree/analyses/lat_analysis/lat_output/lat_arm.csv", header=TRUE)
lat.stan<-subset(lat.stan, lat.stan$resp<600)
lat.cen <- brm(resp ~ (force.z + photo.z + chill.z + lat.z +
force.z:photo.z + force.z:chill.z + photo.z:chill.z + force.z:lat.z +
photo.z:lat.z + chill.z:lat.z)+
((force.z + photo.z + chill.z + lat.z +
force.z:photo.z + force.z:chill.z + photo.z:chill.z + force.z:lat.z +
photo.z:lat.z + chill.z:lat.z)|complex), data = lat.stan,
chains = 4, cores = 4,control = list(max_treedepth = 12,adapt_delta = 0.99))
install.packages(c("brms", "Rcpp", "rstan"))
rm(list=ls())
options(stringsAsFactors = FALSE)
library(adespatial)
library(vegan)
library(spdep)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C<-C[sample(nrow(C), 70, replace=FALSE),]
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb<-graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw<- nb2listw(nb, style=style)
MEM<-scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
X<-subset(bbs, select=c(elev, distkm, mst))
source("scripts/MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
require(spdep)
require(adespatial)
require(vegan)
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
library(rstan)
library(brms)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb_latprep_nov.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$space-mean(bb$space,na.rm=TRUE))/(2*sd(bb$space,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 1000), ]
mod.nb<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, #cores=4,
family=zero_one_inflated_beta())
library(spdep)
library(adespatial)
bb<-read.csv("~/Documents/git")
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 500), ]
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C<-C[sample(nrow(C), 70, replace=FALSE),]
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb<-graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw<- nb2listw(nb, style=style)
MEM<-scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
X<-subset(bbs, select=c(elev, distkm, mst))
source("MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/source/MEM.moransel.R")
source("~/Documents/git/regrisk/analyses/scripts/source/MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 500), ]
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb<-graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw<- nb2listw(nb, style=style)
MEM<-scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
X<-subset(bbs, select=c(elev, distkm, mst))
source("MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
dselect<-as.data.frame(moransel[["MEM.select"]])
require(rstan)
library(rstan)
library(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb_latprep_nov.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$space-mean(bb$space,na.rm=TRUE))/(2*sd(bb$space,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 1000), ]
brm
base.test<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb)
base.test
pp_check(base.test)
mod.nb<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, cores=4,
family=zero_one_inflated_beta())
no.space<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z, data=bb, chains=2,
family=zero_one_inflated_beta())
library(adespatial)
library(spdep)
library(vegan)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 5000, replace=FALSE),]
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb<-graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw<- nb2listw(nb, style=style)
MEM<-scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
X<-subset(bbs, select=c(elev, distkm, mst))
source("MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 100, replace=FALSE),]
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb <- graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw <- nb2listw(nb, style=style)
MEM <- scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
Y <- decostand(Y, method = "hellinger")
C <- as.matrix(C)
X<-subset(bbs, select=c(elev, distkm, mst))
source("MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, C, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
moransel<-MEM.moransel(Y, listw, MEM.autocor = MEM_model, nperm=999, alpha=0.05)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 500, replace=FALSE),]
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb <- graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw <- nb2listw(nb, style=style)
MEM <- scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
Y <- decostand(Y, method = "hellinger")
C <- as.matrix(C)
X<-subset(bbs, select=c(elev, distkm, mst))
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, listw, MEM.autocor = MEM_model, nperm=999, alpha=0.05)
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_base.Rdata")
base.test
pp_check(base.test)
library(rstanarm)
pp_check(base.test)
launch_shinystan(base.test)
(loo1 <- loo(base.test))
# perform 10-fold cross validation
kfold1 <- kfold(base.test, chains = 1)
# perform 10-fold cross validation
kfold1 <- kfold(base.test)
# perform 10-fold cross validation
kfold1 <- brms::kfold(base.test, chains=1)
install.packages(c("rgdal", "rstan"))
# perform 10-fold cross validation
kfold1 <- brms::kfold(base.test, chains=1)
temp_base.test <- update(base.test, chains = 0)
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_binom.Rdata")
binom
pp_check(binom)
(loo1 <- loo(binom))
# perform 10-fold cross validation
(kfold1 <- brms::kfold(binom, chains=1))
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_brms.Rdata")
mod.nb
pp_check(mod.nb)
(loo1 <- loo(mod.nb))
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_nospace.Rdata")
no.space
pp_check(no.space)
(loo1 <- loo(no.space))
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/analyses/scripts/elevdist_pois.Rdata")
pois
(loo1 <- loo(pois))
library(brms)
pp_check(pois)
pois
pp_check(pois)
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_poisson.Rdata")
poisson
pp_check(poisson)
(loo1 <- loo(poisson))
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(brms)
require(rstan)
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: 6 species, two levels for CC, 11648 sites, mst, nao, elev, eigen, dist
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
nsp = 6     #total number of species
years= 10 #number of years
nind = 30 # number of individuals per species
N = years*nind
# Build up the data frame
sp = gl(nsp,  nind, length=N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 16, 21)
dist <- rnorm(N, 20, 27)
###### Set up differences for each level
mstdiff = -1
naodiff = 0.3
spacediff = -0.01
elevdiff = 0.8
distdiff = -0.4
spdiff = 1.5
ccdiff = -0.6
######## SD for each treatment
mstdiff.sd = 0.2
naodiff.sd = 0.05
spacediff.sd = 0.05
elevdiff.sd = 0.2
distdiff.sd = 0.1
spdiff.sd = 0.5
ccdiff.sd = 0.1
mm <- model.matrix(~(cc+nao+mst+elev+space+dist), data.frame(cc,nao,mst,elev,space,dist)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
## Coding check below - keep for future tweaks to code/data
#coeff <- c(1, spdiff, txdiff)
#risk <- rnorm(n = length(tx), mean = mm%*%coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
#(fake <- data_frame(risk, tx, sp))
##### Again, now with individuals.
baseinter = 1 # baseline intercept across all individuals for DVR
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by individual
fake <- vector()
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, ccdiff, ccdiff.sd),
rnorm(1, naodiff, naodiff.sd),
rnorm(1, mstdiff, mstdiff.sd),
rnorm(1, elevdiff, elevdiff.sd),
rnorm(1, spacediff, spacediff.sd),
rnorm(1, distdiff, distdiff.sd)
)
fs <- rnorm(n = length(sp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc, nao, mst, elev, space, dist)
fake<-rbind(fake, fakex)
}
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_negbinom.Rdata")
negbinom
fake$fs.one<-ifelse(fake$fs>1, 1, 0)
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: 6 species, two levels for CC, 11648 sites, mst, nao, elev, eigen, dist
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
nsp = 6     #total number of species
years= 10 #number of years
nind = 30 # number of individuals per species
N = years*nind
# Build up the data frame
sp = gl(nsp,  nind, length=N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 16, 21)
dist <- rnorm(N, 20, 27)
###### Set up differences for each level
mstdiff = -1
naodiff = 0.3
spacediff = -0.01
elevdiff = 0.8
distdiff = -0.4
spdiff = 1.5
ccdiff = -0.6
######## SD for each treatment
mstdiff.sd = 0.2
naodiff.sd = 0.05
spacediff.sd = 0.05
elevdiff.sd = 0.2
distdiff.sd = 0.1
spdiff.sd = 0.5
ccdiff.sd = 0.1
mm <- model.matrix(~(cc+nao+mst+elev+space+dist), data.frame(cc,nao,mst,elev,space,dist)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
## Coding check below - keep for future tweaks to code/data
#coeff <- c(1, spdiff, txdiff)
#risk <- rnorm(n = length(tx), mean = mm%*%coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
#(fake <- data_frame(risk, tx, sp))
##### Again, now with individuals.
baseinter = 1 # baseline intercept across all individuals for DVR
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by individual
fake <- vector()
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, ccdiff, ccdiff.sd),
rnorm(1, naodiff, naodiff.sd),
rnorm(1, mstdiff, mstdiff.sd),
rnorm(1, elevdiff, elevdiff.sd),
rnorm(1, spacediff, spacediff.sd),
rnorm(1, distdiff, distdiff.sd)
)
fs <- rnorm(n = length(sp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc, nao, mst, elev, space, dist)
fake<-rbind(fake, fakex)
}
mod<-lm(fs ~ cc+sp+nao+mst+elev+space+dist, data = fake) # sanity check
summary(mod)
### run models
fake$nao.z <- (fake$nao-mean(fake$nao,na.rm=TRUE))/(2*sd(fake$nao,na.rm=TRUE))
fake$mat.z <- (fake$mst-mean(fake$mst,na.rm=TRUE))/(2*sd(fake$mst,na.rm=TRUE))
fake$cc.z <- (fake$cc-mean(fake$cc,na.rm=TRUE))/(2*sd(fake$cc,na.rm=TRUE))
fake$elev.z <- (fake$elev-mean(fake$elev,na.rm=TRUE))/(2*sd(fake$elev,na.rm=TRUE))
fake$dist.z <-(fake$dist-mean(fake$dist,na.rm=TRUE))/(2*sd(fake$dist,na.rm=TRUE))
fake$space.z <-(fake$space-mean(fake$space,na.rm=TRUE))/(2*sd(fake$space,na.rm=TRUE))
fake$fs.one<-ifelse(fake$fs>1, 1, 0)
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z, data=fake, family=negbinomial())
library(brms)
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z, data=fake, family=negbinomial())
fake<-fake[sample(nrow(fake), 800), ]
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z, data=fake, family=negbinomial())
neg
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:species + mat.z:species + dist.z:species + space.z:species +
elev.z:species + cc.z:species + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=negbinomial())
fake$sp<-as.character(fake$sp)
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=negbinomial())
neg
library(rstanarm)
pp_check(neg)
binom<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=binomial())
binom
pp_check(binom)
pois<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=poisson())
pois
pp_check(pois)
bringbernieback<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=bernoulli())
bringbernieback
pp_check(bringbernieback)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
View(bb)
range(bb$elev)
range(bb$mst)
range(bb$cc)
range(bb$fs.count)
range(bb$nao)
range(bb$distkm)
range(bb$eigen)
range(fake$nao)
range(fake$mat)
range(fake$space)
range(fake$elev)
range(fake$dist)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[!duplicated(bb),]
bb<-na.omit(bb)
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("/n/wolkovich_lab/Lab/Cat/regrisk.nov.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 1000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = prior(cauchy(0,13)))
pois.test
bern.test<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=bernoulli(), iter = 4500, warmup=2000,
prior = prior(cauchy(0,1)))
bern.test
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load Libraries
library(rgeos)
library(rgdal)
library(raster)
# Set Working Directory
setwd("~/Documents/git/regionalrisk/analyses")
# Create Europe Map
#shapefile(coast, "output/coastline.shp")
bb<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
bb<-subset(bb, select=c("long", "lat"))
bb$LONG<-bb$long
bb$LAT<-bb$lat
bb<-subset(bb, select=c("LONG", "LAT"))
bb<-bb[!duplicated(bb),]
b1<-bb[1:2000,]
foober<-read.csv("output/fs_space_new.csv", header=TRUE)
View(b1)
View(foober)
