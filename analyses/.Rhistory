C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb <- graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw <- nb2listw(nb, style=style)
MEM <- scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
Y <- decostand(Y, method = "hellinger")
C <- as.matrix(C)
X<-subset(bbs, select=c(elev, distkm, mst))
source("MEM.moransel.R")
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, C, listw, MEM.autocor=MEM_model, nperm=999, alpha=0.001)
moransel<-MEM.moransel(Y, listw, MEM.autocor = MEM_model, nperm=999, alpha=0.05)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
bb<-bb[sample(nrow(bb), 500, replace=FALSE),]
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb <- graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw <- nb2listw(nb, style=style)
MEM <- scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
Y<-bbs$Y
Y <- decostand(Y, method = "hellinger")
C <- as.matrix(C)
X<-subset(bbs, select=c(elev, distkm, mst))
source("~/Documents/git/regionalrisk/analyses/scripts/MEM.moransel.R")
moransel<-MEM.moransel(Y, listw, MEM.autocor = MEM_model, nperm=999, alpha=0.05)
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_base.Rdata")
base.test
pp_check(base.test)
library(rstanarm)
pp_check(base.test)
launch_shinystan(base.test)
(loo1 <- loo(base.test))
# perform 10-fold cross validation
kfold1 <- kfold(base.test, chains = 1)
# perform 10-fold cross validation
kfold1 <- kfold(base.test)
# perform 10-fold cross validation
kfold1 <- brms::kfold(base.test, chains=1)
install.packages(c("rgdal", "rstan"))
# perform 10-fold cross validation
kfold1 <- brms::kfold(base.test, chains=1)
temp_base.test <- update(base.test, chains = 0)
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_binom.Rdata")
binom
pp_check(binom)
(loo1 <- loo(binom))
# perform 10-fold cross validation
(kfold1 <- brms::kfold(binom, chains=1))
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_brms.Rdata")
mod.nb
pp_check(mod.nb)
(loo1 <- loo(mod.nb))
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_nospace.Rdata")
no.space
pp_check(no.space)
(loo1 <- loo(no.space))
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/analyses/scripts/elevdist_pois.Rdata")
pois
(loo1 <- loo(pois))
library(brms)
pp_check(pois)
pois
pp_check(pois)
load("/Users/CatherineChamberlain/Desktop/Odyssey/Odyssey Models/elevdist_poisson.Rdata")
poisson
pp_check(poisson)
(loo1 <- loo(poisson))
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(brms)
require(rstan)
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: 6 species, two levels for CC, 11648 sites, mst, nao, elev, eigen, dist
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
nsp = 6     #total number of species
years= 10 #number of years
nind = 30 # number of individuals per species
N = years*nind
# Build up the data frame
sp = gl(nsp,  nind, length=N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 16, 21)
dist <- rnorm(N, 20, 27)
###### Set up differences for each level
mstdiff = -1
naodiff = 0.3
spacediff = -0.01
elevdiff = 0.8
distdiff = -0.4
spdiff = 1.5
ccdiff = -0.6
######## SD for each treatment
mstdiff.sd = 0.2
naodiff.sd = 0.05
spacediff.sd = 0.05
elevdiff.sd = 0.2
distdiff.sd = 0.1
spdiff.sd = 0.5
ccdiff.sd = 0.1
mm <- model.matrix(~(cc+nao+mst+elev+space+dist), data.frame(cc,nao,mst,elev,space,dist)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
## Coding check below - keep for future tweaks to code/data
#coeff <- c(1, spdiff, txdiff)
#risk <- rnorm(n = length(tx), mean = mm%*%coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
#(fake <- data_frame(risk, tx, sp))
##### Again, now with individuals.
baseinter = 1 # baseline intercept across all individuals for DVR
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by individual
fake <- vector()
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, ccdiff, ccdiff.sd),
rnorm(1, naodiff, naodiff.sd),
rnorm(1, mstdiff, mstdiff.sd),
rnorm(1, elevdiff, elevdiff.sd),
rnorm(1, spacediff, spacediff.sd),
rnorm(1, distdiff, distdiff.sd)
)
fs <- rnorm(n = length(sp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc, nao, mst, elev, space, dist)
fake<-rbind(fake, fakex)
}
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/elevdist_negbinom.Rdata")
negbinom
fake$fs.one<-ifelse(fake$fs>1, 1, 0)
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: 6 species, two levels for CC, 11648 sites, mst, nao, elev, eigen, dist
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
nsp = 6     #total number of species
years= 10 #number of years
nind = 30 # number of individuals per species
N = years*nind
# Build up the data frame
sp = gl(nsp,  nind, length=N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 16, 21)
dist <- rnorm(N, 20, 27)
###### Set up differences for each level
mstdiff = -1
naodiff = 0.3
spacediff = -0.01
elevdiff = 0.8
distdiff = -0.4
spdiff = 1.5
ccdiff = -0.6
######## SD for each treatment
mstdiff.sd = 0.2
naodiff.sd = 0.05
spacediff.sd = 0.05
elevdiff.sd = 0.2
distdiff.sd = 0.1
spdiff.sd = 0.5
ccdiff.sd = 0.1
mm <- model.matrix(~(cc+nao+mst+elev+space+dist), data.frame(cc,nao,mst,elev,space,dist)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
## Coding check below - keep for future tweaks to code/data
#coeff <- c(1, spdiff, txdiff)
#risk <- rnorm(n = length(tx), mean = mm%*%coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
#(fake <- data_frame(risk, tx, sp))
##### Again, now with individuals.
baseinter = 1 # baseline intercept across all individuals for DVR
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by individual
fake <- vector()
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, ccdiff, ccdiff.sd),
rnorm(1, naodiff, naodiff.sd),
rnorm(1, mstdiff, mstdiff.sd),
rnorm(1, elevdiff, elevdiff.sd),
rnorm(1, spacediff, spacediff.sd),
rnorm(1, distdiff, distdiff.sd)
)
fs <- rnorm(n = length(sp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc, nao, mst, elev, space, dist)
fake<-rbind(fake, fakex)
}
mod<-lm(fs ~ cc+sp+nao+mst+elev+space+dist, data = fake) # sanity check
summary(mod)
### run models
fake$nao.z <- (fake$nao-mean(fake$nao,na.rm=TRUE))/(2*sd(fake$nao,na.rm=TRUE))
fake$mat.z <- (fake$mst-mean(fake$mst,na.rm=TRUE))/(2*sd(fake$mst,na.rm=TRUE))
fake$cc.z <- (fake$cc-mean(fake$cc,na.rm=TRUE))/(2*sd(fake$cc,na.rm=TRUE))
fake$elev.z <- (fake$elev-mean(fake$elev,na.rm=TRUE))/(2*sd(fake$elev,na.rm=TRUE))
fake$dist.z <-(fake$dist-mean(fake$dist,na.rm=TRUE))/(2*sd(fake$dist,na.rm=TRUE))
fake$space.z <-(fake$space-mean(fake$space,na.rm=TRUE))/(2*sd(fake$space,na.rm=TRUE))
fake$fs.one<-ifelse(fake$fs>1, 1, 0)
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z, data=fake, family=negbinomial())
library(brms)
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z, data=fake, family=negbinomial())
fake<-fake[sample(nrow(fake), 800), ]
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z, data=fake, family=negbinomial())
neg
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:species + mat.z:species + dist.z:species + space.z:species +
elev.z:species + cc.z:species + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=negbinomial())
fake$sp<-as.character(fake$sp)
neg<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=negbinomial())
neg
library(rstanarm)
pp_check(neg)
binom<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=binomial())
binom
pp_check(binom)
pois<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=poisson())
pois
pp_check(pois)
bringbernieback<-brm(fs.one ~ nao.z + mat.z + cc.z + elev.z + dist.z + space.z +
nao.z:sp + mat.z:sp + dist.z:sp + space.z:sp +
elev.z:sp + cc.z:sp + nao.z:cc.z + mat.z:cc.z + dist.z:cc.z +
space.z:cc.z + elev.z:cc.z, data=fake, family=bernoulli())
bringbernieback
pp_check(bringbernieback)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
View(bb)
range(bb$elev)
range(bb$mst)
range(bb$cc)
range(bb$fs.count)
range(bb$nao)
range(bb$distkm)
range(bb$eigen)
range(fake$nao)
range(fake$mat)
range(fake$space)
range(fake$elev)
range(fake$dist)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[!duplicated(bb),]
bb<-na.omit(bb)
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("/n/wolkovich_lab/Lab/Cat/regrisk.nov.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 1000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = prior(cauchy(0,13)))
pois.test
bern.test<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=bernoulli(), iter = 4500, warmup=2000,
prior = prior(cauchy(0,1)))
bern.test
pois.test<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb,
family=poisson())
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
pois.test<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb,
family=poisson())
summary(pois.test)
bb<-bb[sample(nrow(bb), 500), ]
poisstrictpriorsquart<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = c(prior(normal(0, 5), class=b, coef=nao.z),
prior(normal(-1, 5), class=b, coef=mat.z),
prior(normal(0, 5), class=b, coef=dist.z),
prior(normal(0, 5), class=b, coef=space.z),
prior(normal(0, 5), class=b, coef=elev.z),
prior(normal(-2, 5), class=b, coef=nao.z)))
poisstrictpriorsquart<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = c(prior_string("normal(0,5)", class = "b"),
prior(normal(-2, 5), class=b, coef=nao.z)))
poisstrictpriorsquart<-brm(fs.count ~ nao.z + mat.z + dist.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z + space.z:cc.z, data=bb, chains=2,
family=poisson(), cores=2, iter = 4000, warmup=2000,
prior = c(prior_string("normal(0,5)", class = "b"),
prior(normal(-1, 5), class=b, coef=mat.z),
prior(normal(-2, 5), class=b, coef=nao.z)))
pois.test
poisstrictpriorsquart
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load Libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(egg)
library(brms)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
bb<-read.csv("output/fs_space_new.csv", header=TRUE)
xx<-read.csv("output/BBdata.csv", header=TRUE)
dxx<-bb
#dxx$fs<-ifelse(dxx$fs.count>0, 1, 0)
#dxx$fs.yr<-ave(dxx$fs.count, dxx$year, FUN=sum)
#dxx$fs.yrspp<-ave(dxx$fs.count, dxx$species, dxx$year, FUN=sum)
### Sites per species -
#length(unique(xx$PEP_ID[xx$species=="AESHIP"])) # lat.long: 10158 - eigen: 10158 - PEP: 10496
#length(unique(xx$PEP_ID[xx$species=="ALNGLU"])) # lat.long: 6775 - eigen: 6775 - PEP: 6915
#length(unique(xx$PEP_ID[xx$species=="BETPEN"])) # lat.long: 10139 - eigen: 10137 - PEP: 10465
#length(unique(xx$PEP_ID[xx$species=="FAGSYL"])) # lat.long: 9099 - eigen: 9097 - PEP: 9363
#length(unique(xx$PEP_ID[xx$species=="FRAEXC"])) # lat.long: 7327 - eigen: 7325 - PEP: 7503
#length(unique(xx$PEP_ID[xx$species=="QUEROB"])) # lat.long: 8831 - eigen: 8809 - PEP: 9044
#dxx$spp.prop<-NA
#dxx$spp.sites<-as.numeric(ave(dxx$lat.long, dxx$year, dxx$species, FUN=length))
#dxx$spp.prop<-ifelse(dxx$species=="AESHIP", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
#dxx$spp.prop<-ifelse(dxx$species=="ALNGLU", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
#dxx$spp.prop<-ifelse(dxx$species=="BETPEN", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
#dxx$spp.prop<-ifelse(dxx$species=="FAGSYL", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
#dxx$spp.prop<-ifelse(dxx$species=="FRAEXC", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
#dxx$spp.prop<-ifelse(dxx$species=="QUEROB", dxx$fs.yrspp/dxx$spp.sites, dxx$spp.prop)
#dxx$spp.ave<-ave(dxx$spp.prop, dxx$species, FUN=median)
#dxx$num.sites<-as.numeric(ave(dxx$lat.long, dxx$year, FUN=length))
#dxx$fs.prop<-dxx$fs.yr/dxx$num.sites
#dxx$fs.ave<-ave(dxx$fs.prop, FUN=median)
xx<-inner_join(xx, dxx)
xx$bb.yr<-ave(xx$bb, xx$year)
#xx$x<-scale(xx$bb.yr, center = FALSE, scale = TRUE)
#xx$sx<-xx$bb.yr-90.2963
#xx$tempsite<-ave(xx$mst, xx$lat.long, xx$year)
tm<-read.csv("output/tminprep_boxplots.csv", header=TRUE)
tm<-full_join(xx, tm)
tm<-na.omit(tm)
aeship<-subset(tm, species=="AESHIP")
ahip<-ggplot(aeship, aes(x=year, y=Tmin)) + geom_point(alpha=0.08) + xlab("Year") + ylab("Minimum Temperature from \nBudburst to Leafout") +
ggtitle(expression(paste(italic("C. Aesculus hippocastanum \n(Avg Day of Budburst = 99.24)")))) +
coord_cartesian(ylim=c(-5,20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),plot.margin = unit(c(1.5,1.5,1.5,1.5), "lines"),
plot.title=element_text(colour = "firebrick3", size = 9),axis.title = element_text(size=9)) +
geom_line(aes(y=bb.yr/10), col="blue", stat="smooth", size=2, method="auto") +
scale_y_continuous(sec.axis = sec_axis(~.*10, name="Avg Day of Budburst", labels=c(0,30,60,90,120, 150)))
alnglu<-subset(tm, species=="ALNGLU")
aglu<-ggplot(alnglu, aes(x=year, y=Tmin)) + geom_point(alpha=0.08) + xlab("Year") + ylab("Minimum Temperature from \nBudburst to Leafout") +
ggtitle(expression(paste(italic("B. Alnus glutinosa \n(Avg Day of Budburst = 98.91)")))) +
coord_cartesian(ylim=c(-5,20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),plot.margin = unit(c(1.5,1.5,1.5,1.5), "lines"),
plot.title=element_text(colour = "orangered1", size = 9),axis.title = element_text(size=9)) +
geom_line(aes(y=bb.yr/10), col="blue", stat="smooth", size=2, method="auto") +
scale_y_continuous(sec.axis = sec_axis(~.*10, name="Avg Day of Budburst", labels=c(0,30,60,90,120, 150)))
betpen<-subset(tm, species=="BETPEN")
bpen<-ggplot(betpen, aes(x=year, y=Tmin)) + geom_point(alpha=0.08) + xlab("Year") + ylab("Minimum Temperature from \nBudburst to Leafout") +
ggtitle(expression(paste(italic("A. Betula pendula \n(Avg Day of Budburst = 98.76)")))) +
coord_cartesian(ylim=c(-5,20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(1.5,1.5,1.5,1.5), "lines"),plot.title=element_text(colour = "orange3", size = 9),
axis.title = element_text(size=9)) +
geom_line(aes(y=bb.yr/10), col="blue", stat="smooth", size=2, method="auto") + scale_y_continuous(sec.axis = sec_axis(~.*10, name="Avg Day of Budburst", labels=c(0,30,60,90,120, 150)))
fagsyl<-subset(tm, species=="FAGSYL")
fsyl<-ggplot(fagsyl, aes(x=year, y=Tmin)) + geom_point(alpha=0.08) + xlab("Year") + ylab("Minimum Temperature from \nBudburst to Leafout") +
ggtitle(expression(paste(italic("D. Fagus sylvatica \n(Avg Day of Budburst = 106.7)")))) +
coord_cartesian(ylim=c(-5,20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),plot.margin = unit(c(1.5,1.5,1.5,1.5), "lines"),
plot.title=element_text(colour = "sienna2", size = 9),axis.title = element_text(size=9)) +
geom_line(aes(y=bb.yr/10), col="blue", stat="smooth", size=2, method="auto") +
scale_y_continuous(sec.axis = sec_axis(~.*10, name="Avg Day of Budburst", labels=c(0,30,60,90,120, 150)))
fraexc<-subset(tm, species=="FRAEXC")
fexc<-ggplot(fraexc, aes(x=year, y=Tmin)) + geom_point(alpha=0.08) + xlab("Year") + ylab("Minimum Temperature from \nBudburst to Leafout") +
ggtitle(expression(paste(italic("F. Fraxinus excelsior \n(Avg Day of Budburst = 116.34)")))) +
coord_cartesian(ylim=c(-5,20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),plot.margin = unit(c(1.5,1.5,1.5,1.5), "lines"),
plot.title=element_text(colour = "green4", size = 9),axis.title = element_text(size=9)) +
geom_line(aes(y=bb.yr/10), col="blue", stat="smooth", size=2, method="auto") +
scale_y_continuous(sec.axis = sec_axis(~.*10, name="Avg Day of Budburst", labels=c(0,30,60,90,120, 150)))
querob<-subset(tm, species=="QUEROB")
qrob<-ggplot(querob, aes(x=year, y=Tmin)) + geom_point(alpha=0.08) + xlab("Year") + ylab("Minimum Temperature from \nBudburst to Leafout") +
ggtitle(expression(paste(italic("E. Quercus robur \n(Avg Day of Budburst = 113.0)")))) +
coord_cartesian(ylim=c(-5,20)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),plot.margin = unit(c(1.5,1.5,1.5,1.5), "lines"),
plot.title=element_text(colour = "purple2", size = 9),axis.title = element_text(size=9)) +
geom_line(aes(y=bb.yr/10), col="blue", stat="smooth", size=2, method="auto") +
scale_y_continuous(sec.axis = sec_axis(~.*10, name="Avg Day of Budburst", labels=c(0,30,60,90,120,150)))
quartz()
ggarrange(bpen, aglu, ahip, fsyl, qrob, fexc, ncol=3, nrow=2)
tminplot<-ggarrange(bpen, aglu, ahip, fsyl, qrob, fexc, ncol=3, nrow=2)
png("figures/TminBB_bySpp.png",
width=convertWidth(sum(tminplot$width), "in", valueOnly=TRUE),
height=convertHeight(sum(tminplot$heights), "in", valueOnly=TRUE))
library(grid)
library(gridExtra)
png("figures/TminBB_bySpp.png",
width=convertWidth(sum(tminplot$width), "in", valueOnly=TRUE),
height=convertHeight(sum(tminplot$heights), "in", valueOnly=TRUE))
grid.draw(tminplot)
dev.off()
tminplot
jpeg("figures/TminBB_bySpp.jpg")
grid.draw(tminplot)
dev.off()
jpeg("figures/TminBB_bySpp.jpg",
width=convertWidth(sum(tminplot$width), "in", valueOnly=TRUE),
height=convertHeight(sum(tminplot$heights), "in", valueOnly=TRUE))
grid.draw(tminplot)
dev.off()
png("figures/TminBB_bySpp.png",
width=9,
height=6)
grid.draw(tminplot)
dev.off()
png("figures/TminBB_bySpp.png",
width=600,
height=400)
grid.draw(tminplot)
dev.off()
png("figures/TminBB_bySpp.png",
width=1000,
height=7500)
grid.draw(tminplot)
dev.off()
png("figures/TminBB_bySpp.png",
width=1000,
height=750)
grid.draw(tminplot)
dev.off()
png("figures/TminBB_bySpp.png",
width=850,
height=650)
grid.draw(tminplot)
dev.off()
png("figures/TminBB_bySpp.png",
width=800,
height=500)
grid.draw(tminplot)
dev.off()
