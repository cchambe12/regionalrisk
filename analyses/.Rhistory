require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 10000), ]
View(bb)
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/output/memselect.csv", header=TRUE)
dx<-cbind(bbs, dselect)
library(dplyr)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -distance, -space, -cc, -nao, -year)
rex.mod<-lm(fs.count~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
bb<-bb%>%dplyr::select(-space)
b_space<-cbind(bbs, eigen)
prep_space<-full_join(bb, b_space)
head(prep_space)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb <- graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw <- nb2listw(nb, style=style)
MEM <- scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
dx<-cbind(bbs, dselect)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -distance, -space, -cc, -nao, -year)
rex.mod<-lm(fs.count~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
bb<-bb%>%dplyr::select(-space)
b_space<-cbind(bbs, eigen)
prep_space<-full_join(bb, b_space)
head(prep_space)
table(eigen)
View(prep_space)
View(b_space)
prep_space<-left_join(bb, b_space)
View(prep_space)
View(b_space)
prep_space<-full_join(bb, eigen)
View(prep_space)
prep_space$eigen<-NA
prep_space$eigen<-ifelse(bb$lat.long==b_space$lat.long, b_space$eigen, prep_space$eigen)
View(prep_space)
prep_space$eigen<-NA
for(i in c(1:nrow(bb))){
for(j in c(1:nrow(b_space)))
prep_space$eigen[i]<-ifelse(bb$lat.long[i]==b_space$lat.long[j], b_space$eigen[j], prep_space$eigen[i])
}
pb <- txtProgressBar(min = 1, max = nrow(bb), style = 3)
for(i in c(1:nrow(bb))){
for(j in c(1:nrow(b_space)))
prep_space$eigen[i]<-ifelse(bb$lat.long[i]==b_space$lat.long[j], b_space$eigen[j], prep_space$eigen[i])
setTxtProgressBar(pb, i)
}
prep_space$eigen<-eigen
View(prep_space)
head(eigen)
tail(eigen)
bb$eigen<-ifelse(bb$lat.long==b_space$lat.long, b_space$eigen, NA)
View(bb)
View(b_space)
beig<-subset(b_space, select=c("lat.long", "eigen"))
test<-full_join(bb, beig)
View(test)
test<-full_join(bb, beig, by="lat.long")
View(test)
prep_space<-full_join(bb, beig, by="lat.long")
View(prep_space)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.nov.csv", header=TRUE)
MEM_model<-"positive"
style<-"B"
C<-subset(bb, select=c(long, lat))
C$xy<-paste(C$long, C$lat)
C<-C[!duplicated(C$xy),]
C<-subset(C, select=c(long, lat))
nb <- graph2nb(gabrielneigh(as.matrix(C), nnmult=5), sym=TRUE)
listw <- nb2listw(nb, style=style)
MEM <- scores.listw(listw, MEM.autocor = MEM_model)
bb$Y<-ave(bb$fs.count, bb$lat.long, FUN=sum)
bbs<-bb[!duplicated(bb$lat.long),]
dselect<-read.csv("~/Documents/git/regionalrisk/analyses/output/memselect.csv", header=TRUE)
dx<-cbind(bbs, dselect)
rex<-dx%>%dplyr::select(-lat.long, -lat, -long, -species, -distance, -space, -cc, -nao, -year)
rex.mod<-lm(fs.count~ ., data=rex)
space<-residuals(rex.mod)
eigen<-space
bb<-bb%>%dplyr::select(-space)
b_space<-cbind(bbs, eigen)
beig<-subset(b_space, select=c("lat.long", "eigen"))
prep_space<-full_join(bb, beig, by="lat.long")
View(prep_space)
write.csv(prep_space, file="~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", row.names=FALSE)
nsp = 6
nind = 80,000 # random effect
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
nsp = 6
nind = 80,000 # random effect
ncc = 2
(ntot = nsp*ntx*ncc) # 88 rows
ntot
ntot = nsp*ntx*ncc
(ntot = nsp*nind*ncc) # 88 rows
ntot = nsp*nind*ncc
ntot
nind = 80,000 # random effect
nind = 80000 # random effect
(ntot = nsp*nind*ncc) # 88 rows
nsp = 6
nind = 50000 # random effect
ncc = 2
(ntot = nsp*nind*ncc) # 88 rows
nsp = 6
nind = 10000 # random effect
ncc = 2
(ntot = nsp*nind*ncc) # 88 rows
nsp = 6
nind = 8000 # random effect
ncc = 2
(ntot = nsp*nind*ncc) # 88 rows
# Build up the data frame
sp = gl(nsp, length=ntot)
cc = gl(ncc, nsp, length = ntot)
# Build up the data frame
sp = gl(nsp, length=ntot)
# Build up the data frame
sp = gl(nsp,  nind, length=ntot)
cc = gl(ncc, nsp*nind, length = ntot)
(d <- data.frame(sp, cc))
###### Set up differences for each level
spdiff = 1.5
ccdiff = 0.8
######## SD for each treatment
spdiff.sd = 0.1
txdiff.sd = 0.1
mm <- model.matrix(~(sp+tx), data.frame(sp, tx)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
mm <- model.matrix(~(sp+cc), data.frame(sp, cc)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
View(mm)
baseinter = 1 # baseline intercept across all individuals for DVR
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by individual
fake <- vector()
ccdiff.sd = 0.1
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, spdiff, spdiff.sd),
rnorm(1, ccdiff, ccdiff.sd)
)
fs <- rnorm(n = length(cc), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc)
fake<-rbind(fake, fakex)
}
summary(lm(fs ~ cc+sp, data = fake)) # sanity check
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: 6 species, two levels for CC, 11648 sites, mst, nao, elev, eigen, dist
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
nsp = 6
nind = 8000 # random effect
ncc = 2
(ntot = nsp*nind*ncc) # 96000 rows
# Build up the data frame
sp = gl(nsp,  nind, length=ntot)
cc = gl(ncc, nsp*nind, length = ntot)
(d <- data.frame(sp, cc))
###### Set up differences for each level
spdiff = 1.5
ccdiff = 0.8
######## SD for each treatment
spdiff.sd = 0.1
ccdiff.sd = 0.1
mm <- model.matrix(~(sp+cc), data.frame(sp, cc)) ### ORDER HERE REALLY MATTERS!!! MAKE SURE IT LINES UP WITH "COEFF"
## Coding check below - keep for future tweaks to code/data
#coeff <- c(1, spdiff, txdiff)
#risk <- rnorm(n = length(tx), mean = mm%*%coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
#(fake <- data_frame(risk, tx, sp))
##### Again, now with individuals.
baseinter = 1 # baseline intercept across all individuals for DVR
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by individual
fake <- vector()
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, spdiff, spdiff.sd),
rnorm(1, ccdiff, ccdiff.sd)
)
fs <- rnorm(n = length(cc), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc)
fake<-rbind(fake, fakex)
}
summary(lm(fs ~ cc+sp, data = fake)) # sanity check
mod<-lm(fs ~ cc+sp, data = fake)) # sanity check
summary(mod)
fs
for(i in 1:nind){ # loop over individual (random effect of model)
# Give individuals different difference values, drawn from normal
coeff <- c(spint[i],
rnorm(1, spdiff, spdiff.sd),
rnorm(1, ccdiff, ccdiff.sd)
)
fs <- rnorm(n = length(cc), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc)
fake<-rbind(fake, fakex)
}
coeff <- c(spint[i],
rnorm(1, spdiff, spdiff.sd),
rnorm(1, ccdiff, ccdiff.sd)
)
fs <- rnorm(n = length(cc), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(fs, ind=i, sp, cc)
fake<-rbind(fake, fakex)
spint
coeff
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
summary(bb$mst)
SD(bb$mst)
sd(bb$mst)
mean(bb$nao)
sd(bb$nao)
mean(bb$eigen)
sd(bb$eigen)
mean(bb$elev)
sd(bb$elev)
mean(bb$distkm)
sd(bb$distkm)
bb<-bb[sample(nrow(bb), 2000), ]
mod<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z, data=bb)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
mod<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z, data=bb)
mod
mod<-brm(fs.count ~ nao + mst + distkm + space + elev +
cc, data=bb)
mod<-brm(fs.count ~ nao + mst + distkm + eigen + elev +
cc, data=bb)
mod
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(truncnorm)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 13751.49, 270)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -0.1
b_mst = -0.2
b_nao = 0.03
b_space = -0.01
b_elev = 0.2
b_dist = -0.05
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 4
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(4,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc[n] + b_mst[n] +
b_nao[n] + b_space[n] + b_elev[n] + b_dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
View(fake)
range(fake$fs)
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
for (n in 1:N){
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
View(fake)
range(fake$fs)
b_cc = -0.2
b_mst = -0.6
b_nao = 0.1
b_space = -0.01
b_elev = 0.5
b_dist = -0.1
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 4
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(4,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
View(fake)
range(fake$fs)
range(fake$cc)
b_cc = -0.6
b_mst = -1
b_nao = 0.3
b_space = -0.01
b_elev = 0.8
b_dist = -0.4
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 4
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(4,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
a_species[spnum[n]]
b_cc*cc[n]
b_mst*mst[n]
b_nao*nao[n]
b_space*space[n]
b_elev*elev[n]
b_dist*dist[n]
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(truncnorm)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 140, 27)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -0.6
b_mst = -1
b_nao = 0.3
b_space = -0.01
b_elev = 0.8
b_dist = -0.4
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 4
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(4,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
y
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(truncnorm)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 140, 27)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -0.6
b_mst = -1
b_nao = 0.3
b_space = -0.01
b_elev = 0.8
b_dist = -0.4
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 4
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(4,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(4, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
View(fake)
range(fake$fs)
b_dist*dist[n]
b_elev*elev[n]
rtruncnorm(4, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
# housekeeping
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(truncnorm)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
spnum
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
cc
mst <- rnorm(N, 8, 1.5)
mst
nao <- rnorm(N, 0.08, 0.3)
nao
space <- rnorm(N, -0.03, 0.33)
space
elev <- rnorm(N, 260, 215)
elev
dist <- rnorm(N, 140, 27)
dist
#predictors (t=treatment,s=sex,r=year)
b_cc = -0.6
b_mst = -1
b_nao = 0.3
b_space = -0.01
b_elev = 0.8
b_dist = -0.4
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 4
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(4,mu_a, sig_a);
}
a_species
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
y[n] <- rtruncnorm(7, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
y
y[n] <- rtruncnorm(4, a=L, b=Inf, a_species[spnum[n]] + b_cc[n] + b_mst[n] +
b_nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
y[n]
y
