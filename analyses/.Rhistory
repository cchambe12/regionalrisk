labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
xlab("Mean Spring Temperature") + ylab("Probability of False Spring") +
guides(fill=FALSE) + scale_linetype_manual(name="Climate Change", values=c("solid", "dotted"),
labels=c("0"="1950-1983",
"1"="1984-2016")) +
theme(legend.key = element_rect(colour = "transparent", fill = "transparent"), legend.text.align = 0, legend.position = "none") +
guides(color=guide_legend(override.aes=list(fill=NA))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
coord_cartesian(ylim=c(0,1)) + ggtitle("A.")
all_dist <- ggplot(me.species, aes(x=distkm, y=.prediction, col=species, linetype=as.factor(cc))) +
stat_smooth(method="lm", span=0.9, se=TRUE, aes(fill=species, linetype=as.factor(cc))) +
theme_classic() +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
xlab("Distance from Coast") + ylab("Probability of False Spring") +
guides(fill=FALSE) + scale_linetype_manual(name="Climate Change", values=c("solid", "dotted"),
labels=c("0"="1950-1983",
"1"="1984-2016")) +
theme(legend.key = element_rect(colour = "transparent", fill = "transparent"), legend.text.align = 0, legend.position = "none") +
guides(color=guide_legend(override.aes=list(fill=NA))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
coord_cartesian(ylim=c(0,1)) + ggtitle("B.")
all_nao <- ggplot(me.species, aes(x=nao, y=.prediction, col=species, linetype=as.factor(cc))) +
stat_smooth(method="lm", span=0.9, se=TRUE, aes(fill=species, linetype=as.factor(cc))) +
theme_classic() +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
xlab("NAO Index") + ylab("Probability of False Spring") +
guides(fill=FALSE) + scale_linetype_manual(name="Climate Change", values=c("solid", "dotted"),
labels=c("0"="1950-1983",
"1"="1984-2016")) +
theme(legend.key = element_rect(colour = "transparent", fill = "transparent"), legend.text.align = 0) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
coord_cartesian(ylim=c(0,1)) + ggtitle("D.")
grid.arrange(all_mat, all_dist, all_elev, all_nao, ncol=2, nrow=2, heights=c(2, 1.5),
widths=c(2, 1.5))
library(egg)
grid.arrange(all_mat, all_dist, all_elev, all_nao, ncol=2, nrow=2, heights=c(2, 1.5),
widths=c(2, 1.5))
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(all_nao)
all_nao <- ggplot(me.species, aes(x=nao, y=.prediction, col=species, linetype=as.factor(cc))) +
stat_smooth(method="lm", span=0.9, se=TRUE, aes(fill=species, linetype=as.factor(cc))) +
theme_classic() +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
xlab("NAO Index") + ylab("Probability of False Spring") +
guides(fill=FALSE) + scale_linetype_manual(name="Climate Change", values=c("solid", "dotted"),
labels=c("0"="1950-1983",
"1"="1984-2016")) +
theme(legend.key = element_rect(colour = "transparent", fill = "transparent"), legend.text.align = 0, legend.position="none") +
guides(color=guide_legend(override.aes=list(fill=NA))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
coord_cartesian(ylim=c(0,1)) + ggtitle("D.")
quartz()
grid.arrange(all_mat, all_dist, all_elev, all_nao, mylegend, ncol=2, nrow=2, heights=c(2, 1.5),
layout_matrix=rbind(c(2, 2),
c(1, 1, 1)))
grid.arrange(all_mat, all_dist, all_elev, all_nao, mylegend, ncol=3, nrow=2, heights=c(2, 1.5),
layout_matrix=rbind(c(2, 2),
c(1, 1, 1)))
grid.arrange(all_mat, all_dist, all_elev, all_nao, mylegend, heights=c(2, 1.5),
layout_matrix=rbind(c(2, NA, 2),
c(1, 1, 1)))
ndata <- 1000
agri <- rnorm(ndata, 0, 10)
cc <- rnorm(ndata, 0, 1)
ba <- -0.5
bc <- 0.5
a <- -1
z <- a + ba*agri + bc*cc
p <- 1/(1+exp(-z))
y <- rbinom(ndata, 1, p)
m0 <- lm(y ~ agri + cc + agri + agri:cc)
0.433774 + -0.038109*mean(agri)
m1 <- glm(y ~ agri + cc +agri:cc, family = "binomial")
int = -0.829
testnonz <- function(coef, pred) {(invlogit(int + coef*mean(pred)) -
invlogit(int + coef*(mean(pred)-1)))*100}
testnonz(-0.45496, agri) ## -10.12255
agri.z <- (agri-mean(agri,na.rm=TRUE))/(2*sd(agri,na.rm=TRUE))
#### Using Gelman-Hill method
invlogit <- function(x) {(1/(1+exp(-(x))))}
ndata <- 1000
agri <- rnorm(ndata, 0, 10)
cc <- rnorm(ndata, 0, 1)
ba <- -0.5
bc <- 0.5
a <- -1
z <- a + ba*agri + bc*cc
p <- 1/(1+exp(-z))
y <- rbinom(ndata, 1, p)
m0 <- lm(y ~ agri + cc + agri + agri:cc)
0.433774 + -0.038109*mean(agri)
m1 <- glm(y ~ agri + cc +agri:cc, family = "binomial")
int = -0.829
testnonz <- function(coef, pred) {(invlogit(int + coef*mean(pred)) -
invlogit(int + coef*(mean(pred)-1)))*100}
testnonz(-0.45496, agri) ## -10.12255
agri.z <- (agri-mean(agri,na.rm=TRUE))/(2*sd(agri,na.rm=TRUE))
cc.z <- (cc-mean(cc,na.rm=TRUE))/(2*sd(cc,na.rm=TRUE))
m2 <- glm(y ~ agri.z + cc.z + agri.z:cc.z, family = "binomial")
int = -0.8653
testz <- function(coef, pred) {(invlogit(int + (coef/(sd(pred)*2))*mean(pred)) -
invlogit(int + (coef/(sd(pred)*2))*(mean(pred)-1)))*100}
testz <- function(coef, pred) {(invlogit( + (coef*(sd(pred)*2)+mean(pred))*mean(pred)) -
invlogit(int + (coef*(sd(pred)*2)+mean(pred))*(mean(pred)-1)))*100}
testz(-8.715, agri) ## -10.13641
testz <- function(coef, pred) {(invlogit( + (coef*(sd(pred)*2))*mean(pred)) -
invlogit(int + (coef*(sd(pred)*2))*(mean(pred)-1)))*100}
testz(-8.715, agri) ## -100
testz <- function(coef, pred) {(invlogit( + (coef/(sd(pred)*2))*mean(pred)) -
invlogit(int + (coef/(sd(pred)*2))*(mean(pred)-1)))*100}
testz(-8.715, agri) ## -100
testz <- function(coef, pred) {(invlogit(int + (coef*(sd(pred)*2))*mean(pred)) -
invlogit(int + (coef*(sd(pred)*2))*(mean(pred)-1)))*100}
testz(-8.715, agri) ## -100
mean(pred)
pred=agri
mean(pred)
range(pred)
coef*(sd(pred)*2)
(coef*(sd(pred)*2))
coef=-8.715
(coef*(sd(pred)*2))
(invlogit(int + (coef*(sd(pred)*2))*mean(pred))
)
div4 = coef/4
div4
testz <- function(coef, pred) {(invlogit(int + coef*mean(pred))) -
invlogit(int + (coef*(mean(pred)-1)))*100}
testz(-8.715, agri) ## -100
pred=agri.z
testz <- function(coef, pred) {(int + coef*mean(pred)) - (int + (coef*(mean(pred)-1)))}
zpred <- testz(-8.715, agri) ##
zpred
pred=agri
div4 = coef/4 #-2.17875
testz <- function(coef, pred) {(int + coef*mean(pred)) - (int + (coef*(mean(pred)-1)))}
zpred <- testz(-8.715, agri) ##
zpred
(int + coef*mean(pred)) - (int + (coef*(mean(pred)-1))
)
testz <- function(coef, pred) {(int + coef*mean(pred)) - (int + (coef*(mean(pred)-1)))}
testz(-8.715, agri) ## -100
int + coef*mean(pred)
int + (coef*(mean(pred)-1)
)
ndata <- 1000
agri <- rnorm(ndata, 0, 10)
cc <- rnorm(ndata, 0, 1)
ba <- -0.5
bc <- 0.5
a <- -1
z <- a + ba*agri + bc*cc
p <- 1/(1+exp(-z))
y <- rbinom(ndata, 1, p)
m0 <- lm(y ~ agri + cc + agri + agri:cc)
0.433774 + -0.038109*mean(agri)
m1 <- glm(y ~ agri + cc +agri:cc, family = "binomial")
int = -0.829
testnonz <- function(coef, pred) {(invlogit(int + coef*mean(pred)) -
invlogit(int + coef*(mean(pred)-1)))*100}
testnonz(-0.45496, agri) ## -10.22591
-0.45496/4
m0
-0.038109/4
#### Now try and make fake data to really tease this apart and test
set.seed(1234)
ndata <- 1000
agri <- rnorm(ndata, 0, 10)
cc <- rnorm(ndata, 0, 1)
ba <- -0.5
bc <- 0.5
a <- -1
z <- a + ba*agri + bc*cc
p <- 1/(1+exp(-z))
y <- rbinom(ndata, 1, p)
m0 <- lm(y ~ agri + cc + agri + agri:cc)
m0
m1 <- glm(y ~ agri + cc +agri:cc, family = "binomial")
m1
coef(m1)
coef(m1)[1]
(coef(m1)[2])/4
int = coef(m1)[1]
testnonz <- function(coef, pred) {(invlogit(int + coef*mean(pred)) -
invlogit(int + coef*(mean(pred)-1)))*100}
testnonz((coef(m1)[2]), agri) ## -9.922911
summary(m1)
load("/Users/CatherineChamberlain/Documents/git/microclimates/modgddbb.Rdata")
mod.gddbb
check <- read.csv("~/Documents/git/regionalrisk/analyses/output/lastfreezedates.csv")
colnames(check)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
#check<-read.csv("~/Desktop/fs_newspace_orig.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 10000), ]
bb<-read.csv("/n/wolkovich_lab/Lab/Cat/FinalModels/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 10000), ]
orig.full<-brm(fs ~ nao.z + mat.z + dist.z + elev.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z,
data=bb, chains=2,family=bernoulli(), cores=2, iter = 4000, warmup=2500,
prior = prior(normal(0,1), class = "b"))
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
## Libraries
require(rstan)
require(brms)
options(stringsAsFactors = FALSE)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
orig.short<-brm(fs ~ nao.z + mat.z + dist.z + elev.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + elev.z:species + cc.z:species +
nao.z:cc.z + mat.z:cc.z + dist.z:cc.z + elev.z:cc.z,
data=bb, chains=2,family=bernoulli(), cores=2, iter = 4000, warmup=2500,
prior = prior(normal(0,1), class = "b"))
load("/Users/CatherineChamberlain/Desktop/orig_short_nospace.Rdata")
orig.short
load("/Users/CatherineChamberlain/Desktop/check_short_nospace.Rdata")
orig.full
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/orig_full.Rdata")
orig.full
foo<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
foo<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
foo$fscheck <- foo$fs
foo$fs <- NULL
bb<- full_join(bb, foo)
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
## Libraries
require(rstan)
require(brms)
require(dplyr)
bb<- full_join(bb, foo)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
#check<-read.csv("~/Desktop/fs_newspace_orig.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs", "fscheck", "nao",
"distkm"))
colnames(bb)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
#check<-read.csv("~/Desktop/fs_newspace_orig.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "fscheck", "nao",
"distkm"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
View(bb)
bb<- left_join(bb, foo)
View(bb)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$fs.count <- NULL
bb<- left_join(bb, foo)
View(bb)
foo<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
foo$fscheck<-ifelse(foo$fs.count>0, 1, 0)
foo$fs.count <- NULL
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$fs.count <- NULL
bb<- left_join(bb, foo)
View(bb)
-0.88+0.35+0.06+0.06+-0.32+-0.52+-0.41+-0.83+0.42+-0.12+-0.05
View(bb)
goober <- read.csv("~/Desktop/Big Data Items/allspp_climateprep.csv")
clim <- read.csv("~/Desktop/allspp_data.csv")
x <- left_join(goober, clim)
class(goober$species)
clim$species<-as.integer(as.factor(clim$species))
x <- left_join(goober, clim)
x$fs<- ifelse(x$Tmin<=-2.2, 1, 0)
x$fs.count<- ave(x$fs, x$PEP_ID, x$year, x$species, FUN=sum)
allspp<-x%>%dplyr::select(lat, long, PEP_ID, fs.count, year, species)
allspp<-allspp[!duplicated(allspp),]
allspp<-na.omit(allspp)
allspp$fs<-ifelse(allspp$fs.count>=1, 1, 0)
View(x)
View(clim)
x <- read.csv("~/Desktop/allspp_data.csv")
x$fs<- ifelse(x$Tmin<=-2.2, 1, 0)
x$lo<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=last)
x$bb<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=first) # Based on Danf's ACESAC - most closely related. Choose WL0 based on keeping all species consistent
#x<-x[!(x$doy<x$bb) & !(x$doy>x$lo),]
x<-x[!duplicated(x),]
x$fs.count<- ave(x$fs, x$PEP_ID, x$year, x$species, FUN=sum)
allspp<-x%>%dplyr::select(lat, long, PEP_ID, fs.count, year, species)
allspp<-allspp[!duplicated(allspp),]
allspp<-na.omit(allspp)
allspp$fs<-ifelse(allspp$fs.count>=1, 1, 0)
#write.csv(allspp, file="/n/wolkovich_lab/Lab/Cat/fs_allspp_original.csv", row.names = FALSE)
write.csv(allspp, file="/n/wolkovich_lab/Lab/Cat/fs_checkallspp.csv", row.names=FALSE)
write.csv(allspp, file="~/Documents/git/regionalrisk/analyses/output/fs_checkallspp.csv", row.names=FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data - must choose the dataframe for specific analyses
#fs<-read.csv("output/fs_allspp_dvr.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_five.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_original.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_fullleaf.csv", header=TRUE)
foo <- read.csv("output/fs_checkallspp.csv", header=TRUE)
fs <- foo
fs<-subset(fs, select=c("lat", "long", "fs.count", "year", "species", "fs"))
mat<-read.csv("output/mat_MAM.csv", header=TRUE)
mat<-subset(mat, year>1950)
elev<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
elev<-subset(elev, year>1950)
nao<-read.csv("output/nao_NovApr.csv", header=TRUE)
nao<-subset(nao, year>1950)
elev<-dplyr::select(elev, species, LAT, LON, ALT)
elev<-elev%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
elev$lat.long<-paste(elev$lat, elev$long)
elev<-elev[!duplicated(elev),]
matelev<-full_join(elev, mat)
#### Get elevation information
matelev$cc<-ifelse(matelev$year<=1983&matelev$year>1950, 0, 1)
fs<-dplyr::select(fs, lat, long, species, fs.count, year)
fs<-fs[!duplicated(fs),]
fspreds<-full_join(matelev, fs)
fspreds<-na.omit(fspreds)
fspreds<-fspreds[!duplicated(fspreds),]
fspreds$elev<-ave(fspreds$elev, fspreds$lat.long)
fspreds<-fspreds[!duplicated(fspreds),]
nao<-dplyr::select(nao, year, nao)
nao<-nao[!duplicated(nao),]
fspreds<-full_join(fspreds, nao)
dist<-read.csv("output/dist_wgs.csv", header=TRUE)
dist<-dist%>%rename(long=LONG)%>%rename(lat=LAT)
fspreds<-full_join(fspreds, dist)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_five_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_fullleaf_allpred.csv", row.names = FALSE)
write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", row.names = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
bb<-read.csv("/n/wolkovich_lab/Lab/Cat/fs_allspp_orig_allpred.csv", header=TRUE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
foo<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
foo$fscheck<-ifelse(foo$fs.count>0, 1, 0)
foo$fs.count <- NULL
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$fs.count <- NULL
bb<- left_join(bb, foo)
View(bb)
x <- read.csv("~/Desktop/allspp_data.csv")
x$fs<- ifelse(x$Tmin<=-2.2, 1, 0)
#x$lo<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=last)
#x$bb<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=first) # Based on Danf's ACESAC - most closely related. Choose WL0 based on keeping all species consistent
#x<-x[!(x$doy<x$bb) & !(x$doy>x$lo),]
x<-x[!duplicated(x),]
x$fs.count<- ave(x$fs, x$PEP_ID, x$year, x$species, FUN=sum)
allspp<-x%>%dplyr::select(lat, long, PEP_ID, fs.count, year, species)
allspp<-allspp[!duplicated(allspp),]
allspp<-na.omit(allspp)
allspp$fs<-ifelse(allspp$fs.count>=1, 1, 0)
write.csv(allspp, file="~/Documents/git/regionalrisk/analyses/output/fs_checkallspp.csv", row.names = FALSE)
############################################
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(tidyr)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data - must choose the dataframe for specific analyses
#fs<-read.csv("output/fs_allspp_dvr.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_five.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_original.csv", header=TRUE)
#fs<-read.csv("output/fs_allspp_fullleaf.csv", header=TRUE)
foo <- read.csv("output/fs_checkallspp.csv", header=TRUE)
fs <- foo
fs<-subset(fs, select=c("lat", "long", "fs.count", "year", "species", "fs"))
mat<-read.csv("output/mat_MAM.csv", header=TRUE)
mat<-subset(mat, year>1950)
elev<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
elev<-subset(elev, year>1950)
nao<-read.csv("output/nao_NovApr.csv", header=TRUE)
nao<-subset(nao, year>1950)
elev<-dplyr::select(elev, species, LAT, LON, ALT)
elev<-elev%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
elev$lat.long<-paste(elev$lat, elev$long)
elev<-elev[!duplicated(elev),]
matelev<-full_join(elev, mat)
#### Get elevation information
matelev$cc<-ifelse(matelev$year<=1983&matelev$year>1950, 0, 1)
fs<-dplyr::select(fs, lat, long, species, fs.count, year)
fs<-fs[!duplicated(fs),]
fspreds<-full_join(matelev, fs)
fspreds<-na.omit(fspreds)
fspreds<-fspreds[!duplicated(fspreds),]
fspreds$elev<-ave(fspreds$elev, fspreds$lat.long)
fspreds<-fspreds[!duplicated(fspreds),]
nao<-dplyr::select(nao, year, nao)
nao<-nao[!duplicated(nao),]
fspreds<-full_join(fspreds, nao)
dist<-read.csv("output/dist_wgs.csv", header=TRUE)
dist<-dist%>%rename(long=LONG)%>%rename(lat=LAT)
fspreds<-full_join(fspreds, dist)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_dvr_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_five_allpred.csv", row.names = FALSE)
#write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_allspp_fullleaf_allpred.csv", row.names = FALSE)
write.csv(fspreds, file="~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", row.names = FALSE)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_allspp_orig_allpred.csv", header=TRUE)
foo<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_checkallspp_fullleaf_allpred.csv", header=TRUE)
foo$fscheck<-ifelse(foo$fs.count>0, 1, 0)
foo$fs.count <- NULL
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$fs.count <- NULL
bb<- left_join(bb, foo)
table(bb$species, bb$fs)
table(bb$species, bb$fscheck)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
x <- read.csv("~/Desktop/allspp_data.csv")
x$fs<- ifelse(x$Tmin<=-2.2, 1, 0)
x$lo<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=last)
x$bb<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=first) # Based on Danf's ACESAC - most closely related. Choose WL0 based on keeping all species consistent
x<-x[!duplicated(x),]
x$fs.count<- ave(x$fs, x$PEP_ID, x$year, x$species, FUN=sum)
allspp<-x%>%dplyr::select(lat, long, PEP_ID, fs.count, year, species)
allspp<-allspp[!duplicated(allspp),]
allspp<-na.omit(allspp)
allspp$fs<-ifelse(allspp$fs.count>=1, 1, 0)
table(allspp$species, allspp$fs)
x <- read.csv("/n/wolkovich_lab/Lab/Cat/allspp_data.csv", header=TRUE)
x <-read.csv("~/Desktop/allspp_data.csv")
x$fs<- ifelse(x$Tmin<=-2.2, 1, 0)
x$lo<-ave(x$doy, x$PEP_ID, x$year, x$species, FUN=last)
