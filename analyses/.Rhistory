ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=120, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=146, 5, bet$risk)
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + geom_point()
ile
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=120, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=146, 5, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:10)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
ilemuc
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(ile$doy==123, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==141, 7.5, ile$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
ile$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
library(gridExtra)
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
geom_label(x = 82:97, y = 1:6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotation_custom(df, xmin=82, xmax=97, ymin=1, ymax=6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 135, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 137, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(Interpol.T)
library(chillR)
library(raster)
library(maptools)
library(rgeos)
library(rgdal)
raster1<-brick("~/Desktop/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
eur.temp<-nc_open("~/Desktop/tn_0.25deg_reg_v16.0.nc")
raster1<-brick("//WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc", varname="tn", sep="")
eur.temp <- nc_open("//128.103.155.31/WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc")
plot(raster1[[45]])
#raster1 <- setMinMax(raster1)
#length(doy)/365
doy<-ncvar_get(eur.temp, "time")
doy<-as.Date(doy, origin="1950-01-01")
day<-substr(doy, 9,10)
year<-as.numeric(substr(doy, 1, 4))
month<-as.numeric(substr(doy, 6, 7))
timevec<-paste(year, month, day, sep="-")
years.vec<-as.character(timevec, format="Y-%m-%d")
year<-as.numeric(substr(years.vec, 1, 4))
#doy.vec<-as.POSIXlt(names(raster1), format="X%j")
dates<-as.Date(years.vec)
names(raster1)<-dates
empty.raster<-raster1[[1]]
values(empty.raster)<-NA
years<-1950:2016
leaps <- function(x) {
m <- c()
for(i in 1:50) {
year.i <- years[which(((years %% 4 == 0) & (years %% 100 !=0) | (years %% 400 == 0)))]
m <- c(m, year.i)
}
return(m)
}
leap.years<-as.data.frame(leaps(1))
leap.years<-leap.years[!duplicated(leaps(1)),]
#year<-1950:2016
empty.raster<-raster1[[1]]
num.false.spring.year<-list()
#dates.false.spring<-list()
for(i in 1951:1983){#i=1952
print(i)
year.i<-i
is.leap<-ifelse(year.i%in%leap.years,TRUE,FALSE)
sequence.years<-which(year==year.i)
#length(sequence.years)
raster.sub<-subset(raster1,sequence.years)
#numnonas<-sum(!is.na(values(raster.sub[[1]])))
rast.array<-array(75,dim=c(ncell(raster.sub),181))
if(is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
if(!is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
#dates.fs<-apply(rast.array, 1, function(x){ifelse(x<=-2.2, x, 0)})
num.false.spring<-apply(rast.array,1,function(x){sum(ifelse(x<=-2.2,1,0))})
non.nas.ids<-which(!is.na(num.false.spring))
#values(emp.rast)<-NA
values(empty.raster)<- NA
#non.nas.dates<-which(!is.na(dates.fs))
#plot(raster1[[1]])
values(empty.raster)[non.nas.ids]<- num.false.spring[!is.na(num.false.spring)]
#values(empty.raster)[non.nas.dates]<- dates.fs[!is.na(dates.fs)]
#plot(empty.raster)
#dates.false.spring[[i]]<- empty.raster
num.false.spring.year[[i]]<-empty.raster
}
length(num.false.spring.year)
final.raster.preCC<-stack(unlist(num.false.spring.year))
summed.false.springs.preCC<-calc(final.raster.preCC,sum)
fs.years.pre<-calc(final.raster.preCC, function(x) {sum(ifelse(x>=1,1,0))})
writeRaster(fs.years.pre,"~/Documents/git/regionalrisk/analyses/output/fs.30.pre", bylayer=TRUE,format="GTiff")
install.packages("gdal")
library(gdal)
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgeos", repos = "http://R-Forge.R-project.org", type = "source")
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", type="source")
library(rgdal)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
rgdal::writeRaster(fs.years.post,"~/Documents/git/regionalrisk/analyses/output/fs.postCC", bylayer=TRUE,format="GTiff")
install.packages("rgeos", type="source")
install.packages("rgeos", type = "source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(c('rgdal','rgeos'),repos="http://www.stats.ox.ac.uk/pub/RWin")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rgeos", unload=TRUE)
install.packages("rgdal")
install.packages("installr")
updateR()
install.packages("updateR")
version
if(!require(installr)) {
install.packages("installr");
require(installr)
}
library(installr)
version
load("/Users/CatherineChamberlain/Desktop/Moransel.RData")
rm(bcoord, bcoords, bprep, distgab, listw, nb, nbgab, test, xymat)
mem.select<-as.data.frame(moransel$MEM.select)
View(mem.select)
save.image("~/Downloads/MEM_forNacho.RData")
head(bb)
unique(bb$fs.count)
rm(moransel, MEM_model, MEM.moransel)
unique(y)
bb$check<-ave(bb$fs, bb$PEP_ID, bb$species, FUN=sum)
head(bb)
sort(unique(bb$check))
length(unique(bb$year))
sort(unique(y))
bb$check2<-ave(bb$fs, bb$PEP_ID, FUN=sum)
head(bb)
bb$fs.num<-ave(bb$fs, bb$PEP_ID, bb$species, bb$year, FUN=sum)
unique(bb$fs.num)
df<-bb
df$fs.num<-ave(df$fs, df$sp)
df$fs.sd<-ave(df$fs, df$sp, FUN=sd)
df$sp<-ifelse(df$sp==1, "A.hippocastanum", df$sp)
df$sp<-ifelse(df$sp==2, "A.glutinosa", df$sp)
df$sp<-ifelse(df$sp==3, "B.pendula", df$sp)
df$sp<-ifelse(df$sp==4, "F.sylvatica", df$sp)
df$sp<-ifelse(df$sp==5, "F.excelsior", df$sp)
df$sp<-ifelse(df$sp==6, "Q.robar", df$sp)
dx<-df%>%dplyr::select(-fs, -mat, -lat, -long)
dx<-dx[!duplicated(dx),]
library(dplyr)
dx<-df%>%dplyr::select(-fs, -mat, -lat, -long)
dx<-dx[!duplicated(dx),]
df$fs.lat<-ave(df$fs, df$latr)
#pre<-bb%>%filter(year>1950)%>%filter(year<=1983)
pre<-bb
pre$fs<-ave(pre$fs, pre$PEP_ID, pre$species, FUN=sum)
pre$sp<-as.numeric(as.factor(pre$species))
pre$mat<-ave(pre$mat, pre$PEP_ID)
pre$lat<-as.numeric(pre$lat)
pre$long<-as.numeric(pre$long)
pre<-pre%>%dplyr::select(lat.long, lat, long, mat, sp, fs)
pre.bx<-pre[!duplicated(pre),]
## subsetting data, preparing genus variable, removing NAs
pre.mat.prepdata <- subset(pre.bx, select=c("fs", "mat", "sp", "lat", "long"))
pre.mat.stan <- pre.mat.prepdata[complete.cases(pre.mat.prepdata),]
df$latr<-round(df$lat, digits=2)
######### Plotting time! ##########
df<-pre.mat.stan
df$fs.num<-ave(df$fs, df$sp)
df$fs.sd<-ave(df$fs, df$sp, FUN=sd)
df$sp<-ifelse(df$sp==1, "A.hippocastanum", df$sp)
df$sp<-ifelse(df$sp==2, "A.glutinosa", df$sp)
df$sp<-ifelse(df$sp==3, "B.pendula", df$sp)
df$sp<-ifelse(df$sp==4, "F.sylvatica", df$sp)
df$sp<-ifelse(df$sp==5, "F.excelsior", df$sp)
df$sp<-ifelse(df$sp==6, "Q.robar", df$sp)
dx<-df%>%dplyr::select(-fs, -mat, -lat, -long)
dx<-dx[!duplicated(dx),]
diff<-ggplot(dx, aes(x=as.factor(sp), y=fs.num)) + geom_point(col=sp) +
geom_linerange(aes(ymin=fs.num-fs.sd, ymax=fs.num+fs.sd), alpha=0.3) +
ylab(expression("Years with False Springs")) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10))
#install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
library(ggplot2)
diff<-ggplot(dx, aes(x=as.factor(sp), y=fs.num)) + geom_point(col=sp) +
geom_linerange(aes(ymin=fs.num-fs.sd, ymax=fs.num+fs.sd), alpha=0.3) +
ylab(expression("Years with False Springs")) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10))
diff<-ggplot(dx, aes(x=as.factor(sp), y=fs.num)) + geom_point(col=dx$sp) +
geom_linerange(aes(ymin=fs.num-fs.sd, ymax=fs.num+fs.sd), alpha=0.3) +
ylab(expression("Years with False Springs")) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10))
plot(diff)
df$latr<-round(df$lat, digits=2)
df$fs.lat<-ave(df$fs, df$latr)
dl<-df%>%dplyr::select(fs.lat, latr, sp )
dl<-dl[!duplicated(dl),]
dl$latr<-as.numeric(dl$latr)
lat.spp<-ggplot(dl, aes(latr, fs.lat)) + xlab("Latitude") + geom_point(col=sp)
lat.spp<-ggplot(dl, aes(latr, fs.lat)) + xlab("Latitude") + geom_point(col=as.factor(sp))
lat.spp<-ggplot(dl, aes(latr, fs.lat)) + xlab("Latitude") + geom_point(col=as.factor(sp)) +
ylab("Number of False Springs")  + geom_smooth(aes(col=as.factor(sp)),method="lm", se=FALSE) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key=element_blank())
lat.spp<-ggplot(dl, aes(latr, fs.lat)) + xlab("Latitude") + geom_point(aes(col=as.factor(sp))) +
ylab("Number of False Springs")  + geom_smooth(aes(col=as.factor(sp)),method="lm", se=FALSE) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key=element_blank())
plot(lat.spp)
df$fs.mat<-ave(df$fs, df$mat)
dm<-df%>%dplyr::select(fs.mat, mat, sp )
dm<-dm[!duplicated(dm),]
dm$matr<-as.numeric(dm$matr)
mat.spp<-ggplot(dm, aes(mat, fs.mat)) + xlab("Mean Annual Temperature") + geom_point(aes(col=as.factor(sp))) +
ylab("Number of False Springs")  + geom_smooth(aes(col=as.factor(sp)),method="lm", se=FALSE) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key=element_blank())
plot(mat.spp)
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load Libraries
library(dplyr)
library(tidyr)
library(adespatial)
library(ade4)
library(spdep)
# Set Working Directory
setwd("~/Documents/git/regionalrisk/analyses/")
## Get Data
bb<-read.csv("output/fs_matspsite.csv", header=TRUE)
library(gstat)
library(fields)
sub_data<-bb%>%dplyr::select(fs, lat, long, lat.long)
sub_data$fs<-ave(sub_data$fs, sub_data$lat.long, FUN=sum)
sub_data<-dplyr::select(sub_data, -lat.long)
sub_data<-sub_data[!duplicated(sub_data),]
fitTps <- Tps(sub_data[c("lat", "long")], sub_data[,"fs"])
our.p <- predictSurface(fitTps)
spatially_corrected_y <- fitTps$residuals
surface(our.p,type="C",xlab="lat",ylab="longf", col = colorRampPalette( summerDay(255) )(8) )
surface(our.p,type="C",xlab="lat",ylab="long")
our.p
View(our.p)
View(spatially_corrected_y)
View(fitTps)
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load Libraries
library(dplyr)
library(tidyr)
library(adespatial)
library(ade4)
library(spdep)
library(vegan)
# Set Working Directory
setwd("~/Documents/git/regionalrisk/analyses/")
bb<-read.csv("output/fs_matspsite.csv", header=TRUE)
bb<-dplyr::select(bb, lat, long, lat.long, fs)
bb$y<-ave(bb$fs, bb$lat.long, FUN=sum)
bprep <- subset(bb, select=c("fs", "lat", "long"))
bprep <- bprep[complete.cases(bprep),]
bprep<-bprep[!duplicated(bprep),]
Y<-bprep[,1]
X<-bprep[,2:3]
X<-as.matrix(X)
#xymat<-as.matrix(bcoords,bcoords$lat:bcoords$long)
#X <- xymat[,1:2]
nbgab <- graph2nb(gabrielneigh(xymat), sym = TRUE)
nb<-graph2nb(gabrielneigh(as.matrix(bcoords)), sym=TRUE)
bcoord<-bprep%>%dplyr::select(lat,long)
bcoords<-as.data.frame(bcoord[!duplicated(bcoord),])
xymat<-as.matrix(bcoords,bcoords$lat:bcoords$long)
MEM_model <-"positive"
nb<-graph2nb(gabrielneigh(as.matrix(bcoords)), sym=TRUE)
listw<-nb2listw(nb, style ="B")
bprep<-bprep[1:70,]
Y<-bprep[,1]
X<-bprep[,2:3]
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.001)
Y<-decostand(Y, method="hellinger")
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.001)
bprep <- subset(bb, select=c("fs", "lat", "long"))
bprep <- bprep[complete.cases(bprep),]
bprep<-bprep[!duplicated(bprep),]
Y<-bprep[,1]
X<-bprep[,2:3]
bprep<-bprep[1:70,]
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.001)
X<-as.matrix(X)
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.001)
bprep <- subset(bb, select=c("fs", "lat", "long"))
bprep <- bprep[complete.cases(bprep),]
bprep<-bprep[!duplicated(bprep),]
bprep<-bprep[1:70,]
Y<-bprep[,1]
X<-bprep[,2:3]
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.001)
C<-bprep[,2:3]
C<-as.matrix(C)
MEM_model <-"positive"
nb<-graph2nb(gabrielneigh(C), sym=TRUE)
listw<-nb2listw(nb, style ="B")
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.001)
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=0.1)
select<-ME(Y~., data=as.data.frame(X), listw=listw, family=gaussian, nsim=2, alpha=1)
warnings()
