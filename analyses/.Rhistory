View(xx)
xx <- within(xx, { prov.lat <- ave(provenance.lat, datasetID, species, study, FUN=function(x>0) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx, { prov.lat <- ave(provenance.lat[(xx$provenance.lat!=0),], datasetID, species, study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx, { prov.lat <- ave(provenance.lat[(provenance.lat!=0),], datasetID, species, study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx, { prov.lat <- ave(provenance.lat[(xx$provenance.lat!=0),], xx$datasetID, xx$species, xx$study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx, { prov.lat <- ave(xx$provenance.lat[(xx$provenance.lat!=0),], xx$datasetID, xx$species, xx$study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx[which(xx$provenance.lat!=0)], { prov.lat <- ave(provenance.lat[(provenance.lat!=0),], datasetID, species, study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx[which(xx$provenance.lat!=0)], { prov.lat <- ave(provenance.lat, datasetID, species, study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
xx <- within(xx[which(xx$provenance.lat!=0),], { prov.lat <- ave(provenance.lat, datasetID, species, study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
ospree <- read.csv("output/ospree_clean_withchill_BB.csv", header=TRUE, na.strings = c("", "NA"))
xx<-ospree
xx[is.na(xx)] <- 0
xx <- within(xx[which(xx$provenance.lat!=0),], { prov.lat <- ave(provenance.lat, datasetID, species, study, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
length(unique(ospree$datasetID))
length(unique(ospree$xx))
length(unique(xx$datasetID))
ospree <- read.csv("output/ospree_clean_withchill_BB.csv", header=TRUE, na.strings = c("", "NA"))
xx<-ospree
xx[is.na(xx)] <- 0
xx <- within(xx, { prov.lat <- ifelse(provenance.lat!=0, ave(provenance.lat, datasetID, species, study, FUN=function(x) length(unique(x))), 0)}) # multiple provenance.lats
length(unique(ospree$xx))
length(unique(ospree$datasetID))
length(unique(xx$datasetID))
setwd("~/Documents/git/ospree/analyses")
ospree <- read.csv("output/ospree_clean_withchill_BB.csv", header=TRUE, na.strings = c("", "NA"))
xx<-ospree
xx[is.na(xx)] <- 0
xx <- within(xx, { prov.lat <- ifelse(provenance.lat!=0, ave(provenance.lat, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # multiple provenance.lats
xx <- within(xx, { field.sample <- ifelse(fieldsample.date!=0, ave(fieldsample.date, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult fieldsample.date
xx <- within(xx, { force <- ifelse(forcetemp!=0, ave(forcetemp, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult forcetemp
xx <- within(xx, { photo <- ifelse(photoperiod_day!=0, ave(photoperiod_day, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult photoperiod_day
xx <- within(xx, { chill <- ifelse(chill!=0, ave(chilltemp, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult studychill
xx <- within(xx, { chill <- ifelse(chilltemp!=0, ave(chilltemp, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult studychill
xx <- within(xx, { spp <- ifelse(species!=0, ave(species, datasetID,
study,FUN=function(x) length(unique(x))), 0)}) # mult species
xx <- within(xx, { prov.long <- ifelse(provenance.long!=0, ave(provenance.long, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # multiple provenance.longs
xx<-dplyr::select(xx, datasetID, species, study, prov.lat, prov.long, field.sample, force, photo, chill, spp)
xx<-xx[!duplicated(xx),]
xx$wein<-ifelse(is.na(xx$wein), 0, xx$wein)
xx$field.doy<-yday(xx$fieldsample.date2)
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
if(length(grep("Lizzie", getwd())>0)) { setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
} else
setwd("~/Documents/git/ospree/analyses")
ospree <- read.csv("output/ospree_clean_withchill_BB.csv", header=TRUE, na.strings = c("", "NA"))
xx<-ospree
xx[is.na(xx)] <- 0
xx <- within(xx, { prov.lat <- ifelse(provenance.lat!=0, ave(provenance.lat, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # multiple provenance.lats
xx <- within(xx, { field.sample <- ifelse(fieldsample.date!=0, ave(fieldsample.date, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult fieldsample.date
xx <- within(xx, { force <- ifelse(forcetemp!=0, ave(forcetemp, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult forcetemp
xx <- within(xx, { photo <- ifelse(photoperiod_day!=0, ave(photoperiod_day, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult photoperiod_day
xx <- within(xx, { chill <- ifelse(chilltemp!=0, ave(chilltemp, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # mult studychill
xx <- within(xx, { spp <- ifelse(species!=0, ave(species, datasetID,
study,FUN=function(x) length(unique(x))), 0)}) # mult species
xx <- within(xx, { prov.long <- ifelse(provenance.long!=0, ave(provenance.long, datasetID, species,
study, FUN=function(x) length(unique(x))), 0)}) # multiple provenance.longs
xx$field.doy<-yday(xx$fieldsample.date2)
xx$fieldsample.date2<-as.Date(xx$fieldsample.date2, "%Y-%m-%d")
xx$field.doy<-yday(xx$fieldsample.date2)
d.sub<-xx%>%dplyr::select(datasetID, field.doy, species, study)
d.sub <- within(d.sub, { field.sample <- ave(field.doy, datasetID, species, FUN=function(x) length(unique(x)))}) # mult fieldsample.date
d.sub<-d.sub[!duplicated(d.sub),]
d.sub<-subset(d.sub, field.sample>1)
d.sub<-d.sub[!is.na(d.sub$field.doy),]
d.sub$field.doy1<-ave(d.sub$field.doy, d.sub$datasetID, d.sub$species, FUN=min)
d.sub$field.doy2<-ave(d.sub$field.doy, d.sub$datasetID, d.sub$species, FUN=max)
d.sub$wein<-ifelse((d.sub$field.doy2-d.sub$field.doy1)>15, 1, 0)
xx$wein<-NA
for(i in c(1:nrow(xx))) {
for(j in c(1:nrow(d.sub)))
if(xx$datasetID[i] == d.sub$datasetID[j] & xx$species[i] == d.sub$species[j] & xx$study[i]==d.sub$study[j])
xx$wein[i]<-d.sub$wein[j]
}
xx<-dplyr::select(xx, datasetID, species, study, prov.lat, prov.long, field.sample, force, photo, chill, spp, wein)
xx<-xx[!duplicated(xx),]
xx$wein<-ifelse(is.na(xx$wein), 0, xx$wein)
write.csv(xx, file="~/Documents/git/ospree/analyses/output/studytype_withBB.csv", row.names = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(egg)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
b<-read.csv("output/regrisk.cleaned.csv", header=TRUE)
bb$cc<-ifelse(bb$cc==0, "before", "after")
b$cc<-ifelse(b$cc==0, "before", "after")
colnames(b)
diff<-ggplot(bx, aes(x=factor(species), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in Number of False Springs \n Before and After 1983")) + coord_cartesian(ylim=c(0,15)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
scale_x_discrete(limits= c("Betula pendula", "Alnus glutinosa", "Aesculus hippocastanum", "Fagus sylvatica",
"Quercus robur", "Fraxinus excelsior"))
bb$fs<-ave(bb$fs.count, bb$species, bb$cc)
bb<-b
bb$fs<-ave(bb$fs.count, bb$species, bb$cc)
bb$fs.sd<-ave(bb$fs.count, bb$species, bb$cc, FUN=sd)/sqrt(length(unique(bb$fs)))
bb<-dplyr::select(bb, species, cc, fs, fs.sd)
bb<-bb[!duplicated(bb),]
bb$cc.sd<-paste(bb$cc, "se", sep="_")
dm<-bb%>%dplyr::select(species, cc, fs)%>%spread(cc, fs)
ds<-bb%>%dplyr::select(species, cc.sd, fs.sd)%>%spread(cc.sd, fs.sd)
bx<-inner_join(dm, ds)
bx$diff<-bx$after-bx$before
bx$diff.sd<-sqrt((bx$after_se)^2+(bx$before_se)^2)
bx$species<-ifelse(bx$species=="AESHIP", "Aesculus hippocastanum", bx$species)
bx$species<-ifelse(bx$species=="ALNGLU", "Alnus glutinosa", bx$species)
bx$species<-ifelse(bx$species=="BETPEN", "Betula pendula", bx$species)
bx$species<-ifelse(bx$species=="FAGSYL", "Fagus sylvatica", bx$species)
bx$species<-ifelse(bx$species=="FRAEXC", "Fraxinus excelsior", bx$species)
bx$species<-ifelse(bx$species=="QUEROB", "Quercus robur", bx$species)
diff<-ggplot(bx, aes(x=factor(species), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in Number of False Springs \n Before and After 1983")) + coord_cartesian(ylim=c(0,15)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
scale_x_discrete(limits= c("Betula pendula", "Alnus glutinosa", "Aesculus hippocastanum", "Fagus sylvatica",
"Quercus robur", "Fraxinus excelsior"))
plot(diff)
diff<-ggplot(bx, aes(x=factor(species), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in Number of False Springs \n Before and After 1983")) + coord_cartesian(ylim=c(-5,5)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
scale_x_discrete(limits= c("Betula pendula", "Alnus glutinosa", "Aesculus hippocastanum", "Fagus sylvatica",
"Quercus robur", "Fraxinus excelsior"))
plot(diff)
diff<-ggplot(bx, aes(x=factor(species), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in Number of False Springs \n Before and After 1983")) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
scale_x_discrete(limits= c("Betula pendula", "Alnus glutinosa", "Aesculus hippocastanum", "Fagus sylvatica",
"Quercus robur", "Fraxinus excelsior"))
plot(diff)
#### Let's try Hadley's Methods!
# Maybe subset by each type of model I want to run...?
bb.mat<-subset(bb, select=c(year, species, cc, sp.temp, fs.count))
bb<-read.csv("output/regrisk.cleaned.csv", header=TRUE)
#### Let's try Hadley's Methods!
# Maybe subset by each type of model I want to run...?
bb.mat<-subset(bb, select=c(year, species, cc, sp.temp, fs.count))
bb.mat<-bb.mat[!duplicated(bb.mat),]
mat<-bb.mat%>%
group_by(cc, species)%>%
nest
sp_mod<-function(df){
glm(fs.count~sp.temp, data=df, family=poisson)
}
models<-mat%>%
mutate(mod = map(data, sp_mod))
library(purrr)
library(broom)
library(brms)
models<-mat%>%
mutate(mod = map(data, sp_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
mat.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
mat.df<-mat.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
test<-ggplot(mat.df, aes(y=`(Intercept)`, x=sp.temp)) + geom_point(aes(col=as.factor(species), size=as.factor(cc))) +
geom_smooth(se=FALSE) + xlab("Mean Spring Temperature") + ylab("Number of False Springs")
mat<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0)
mat
mat<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0)#+
mat
mat<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0) + guides(text=FALSE)
mat
mat<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0) + guides(shape=FALSE)
mat
mat<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
mat
colnames(bb)
bb.ele<-subset(bb, select=c(year, species, cc, elev, fs.count))
bb.ele<-bb.ele[!duplicated(bb.ele),]
ele<-bb.ele%>%
group_by(cc, species)%>%
nest
ele_mod<-function(df){
glm(fs.count~elev, data=df, family=poisson)
}
models<-ele%>%
mutate(mod = map(data, ele_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
ele.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
ele.df<-ele.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
ele<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
ele
bb.ele<-subset(bb, select=c(year, species, cc, elev, fs.count))
bb.ele<-bb.ele[!duplicated(bb.ele),]
ele<-bb.ele%>%
group_by(cc, species)%>%
nest
ele_mod<-function(df){
glm(fs.count~elev, data=df, family=poisson)
}
models<-ele%>%
mutate(mod = map(data, ele_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
ele.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
ele.df<-ele.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
ele<-ggplot(ele.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Elevation") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
bb.nao<-subset(bb, select=c(year, species, cc, m.index, fs.count))
bb.nao<-bb.nao[!duplicated(bb.nao),]
nao<-bb.nao%>%
group_by(cc, species)%>%
nest
nao_mod<-function(df){
glm(fs.count~m.index, data=df, family=poisson)
}
models<-mat%>%
mutate(mod = map(data, nao_mod))
models<-nao%>%
mutate(mod = map(data, nao_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
nao.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
nao.df<-nao.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
nao<-ggplot(nao.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("NAO") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
bb.space<-subset(bb, select=c(year, species, cc, space, fs.count))
bb.space<-bb.space[!duplicated(bb.space),]
space<-bb.space%>%
group_by(cc, species)%>%
nest
space_mod<-function(df){
glm(fs.count~space, data=df, family=poisson)
}
models<-space%>%
mutate(mod = map(data, space_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
space.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
space.df<-space.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
space<-ggplot(space.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Space Parameter") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
ggarrange(mat, ele, nao, space, ncols=2, nrows=2)
#### Let's try Hadley's Methods!
# Maybe subset by each type of model I want to run...?
bb.mat<-subset(bb, select=c(year, species, cc, sp.temp, fs.count))
bb.mat<-bb.mat[!duplicated(bb.mat),]
mat<-bb.mat%>%
group_by(cc, species)%>%
nest
sp_mod<-function(df){
glm(fs.count~sp.temp, data=df, family=poisson)
}
models<-mat%>%
mutate(mod = map(data, sp_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
mat.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
mat.df<-mat.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
mat<-ggplot(mat.df, aes(x=`(Intercept)`, y=sp.temp)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Mean Spring Temperature") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
bb.ele<-subset(bb, select=c(year, species, cc, elev, fs.count))
bb.ele<-bb.ele[!duplicated(bb.ele),]
ele<-bb.ele%>%
group_by(cc, species)%>%
nest
ele_mod<-function(df){
glm(fs.count~elev, data=df, family=poisson)
}
models<-ele%>%
mutate(mod = map(data, ele_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
ele.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
ele.df<-ele.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
ele<-ggplot(ele.df, aes(x=`(Intercept)`, y=elev)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Elevation") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
bb.nao<-subset(bb, select=c(year, species, cc, m.index, fs.count))
bb.nao<-bb.nao[!duplicated(bb.nao),]
nao<-bb.nao%>%
group_by(cc, species)%>%
nest
nao_mod<-function(df){
glm(fs.count~m.index, data=df, family=poisson)
}
models<-nao%>%
mutate(mod = map(data, nao_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
nao.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
nao.df<-nao.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
nao<-ggplot(nao.df, aes(x=`(Intercept)`, y=m.index)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("NAO") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
bb.space<-subset(bb, select=c(year, species, cc, space, fs.count))
bb.space<-bb.space[!duplicated(bb.space),]
space<-bb.space%>%
group_by(cc, species)%>%
nest
space_mod<-function(df){
glm(fs.count~space, data=df, family=poisson)
}
models<-space%>%
mutate(mod = map(data, space_mod))
models<-models%>%
mutate(tidy=map(mod, broom::tidy))
space.tidy<-unnest(models, tidy)
#mat.df<-unnest(models, data)
#mat.df<-inner_join(mat.df, mat.tidy)
space.df<-space.tidy%>%
select(cc, species, term, estimate)%>%
spread(term, estimate)
space<-ggplot(space.df, aes(x=`(Intercept)`, y=space)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Space Parameter") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
ggarrange(mat, ele, nao, space, ncols=2, nrows=2)
ele
ele<-ggplot(ele.df, aes(x=`(Intercept)`, y=elev)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Elevation") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
#coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
ele
nao<-ggplot(nao.df, aes(x=`(Intercept)`, y=m.index)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("NAO") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
#coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
nao
space<-ggplot(space.df, aes(x=`(Intercept)`, y=space)) + geom_line(aes(col=as.factor(cc)),stat="smooth",method="lm") + ylab("Space Parameter") + xlab("Number of False Springs") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(),
plot.margin = unit(c(2,2,2,2), "lines"),
plot.title=element_text(colour = "firebrick3")) +
#coord_cartesian(ylim=c(-0.2, -0.06), xlim=c(0, 2)) +
scale_color_manual(values=c("red4", "blue3"), labels=c("Before 1983", "After 1983"), name="") +
#geom_point(aes(shape=as.factor(cc))) +
geom_text(aes(label=species, col=as.factor(cc)),hjust=0, vjust=0, show.legend = FALSE)
space
ggarrange(mat, ele, nao, space, ncols=2, nrows=2)
ggarrange(mat, ele, nao, space, ncol=2, nrow=2)
