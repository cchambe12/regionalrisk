land<-readShapeSpatial("input/natural_earth_vector/50m_physical/ne_50m_land.shp") ##
boundars<-readShapeSpatial("input/natural_earth_vector/50m_cultural/ne_50m_admin_0_countries.shp")
master<-read.csv("output/master_events.csv", header=TRUE)
betula<-read.csv("output/betula_events.csv", header=TRUE)
fagus<-read.csv("output/fagus_events.csv", header=TRUE)
acer<-read.csv("output/acer_events.csv", header=TRUE)
tilia<-read.csv("output/tilia_events.csv", header=TRUE)
bet.clim<-read.csv("output/climate_master.csv", header=TRUE)
#bet.bb<-read.csv("output/bbch_region_betula.csv", header=TRUE)
plot(land,col="grey",lty=0,ylim=c(30,60),xlim=c(-5,35))
## master:
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
colors<-colorRampPalette(c("red", "blue"))
master$events<-as.numeric(as.character(master$events))
master$freq<-as.numeric(as.character(master$freq))
master$Col <- colors(10)[as.numeric(cut(master$events,breaks = 2))]
points(master$long, master$lat, col=colors(10), cex = .6)
# betula
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
colors<-colorRampPalette(c("red", "blue"))
betula$events<-as.numeric(as.character(betula$events))
betula$freq<-as.numeric(as.character(betula$freq))
betula$Col <- colors(10)[as.numeric(cut(betula$events,breaks = 2))]
points(betula$long, betula$lat, col=colors(10), cex = .6)
# fagus
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
colors<-colorRampPalette(c("red", "blue"))
fagus$events<-as.numeric(as.character(fagus$events))
fagus$freq<-as.numeric(as.character(fagus$freq))
fagus$Col <- colors(10)[as.numeric(cut(fagus$events,breaks = 2))]
points(fagus$long, fagus$lat, col=colors(10), cex = .6)
# acer
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
colors<-colorRampPalette(c("red", "blue"))
acer$events<-as.numeric(as.character(acer$events))
acer$freq<-as.numeric(as.character(acer$freq))
acer$Col <- colors(10)[as.numeric(cut(acer$events,breaks = 2))]
points(acer$long, acer$lat, col=colors(10), cex = .6)
# tilia
plot(boundars,col="grey",border="lightgrey",ylim=c(30,70),xlim=c(-5,35))
colors<-colorRampPalette(c("red", "blue"))
tilia$events<-as.numeric(as.character(tilia$events))
tilia$freq<-as.numeric(as.character(tilia$freq))
tilia$Col <- colors(10)[as.numeric(cut(tilia$events,breaks = 2))]
points(tilia$long, tilia$lat, col=colors(10), cex = .6)
dxx<-read.csv("master_events.csv", header=TRUE)
dxx<-read.csv("output/master_events.csv", header=TRUE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
dxx<-read.csv("output/betula_events.csv", header=TRUE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
dxx<-read.csv("output/tilia_events.csv", header=TRUE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
dxx<-read.csv("output/fagus_events.csv", header=TRUE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
dxx<-read.csv("output/acer_events.csv", header=TRUE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
library(lme4)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_betula.csv", header=TRUE)
clim<-read.csv("climate_master.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
#plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
############# WORK ON LAST OBSERVATION! ######################
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
#test<- within(test, count[test$count==2]<-2)
tt<-test%>%
filter(count!="start") %>%
group_by(pepBB) %>%
filter(date==max(date))
tt$count<-as.numeric(as.character(tt$count))
tt<-tt[!duplicated(tt), ]
tt$count<-ifelse(tt$count=="start", "start", 2)
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
#ends<- unique(plz$pepyear[which(plz$count=="end")])
#plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
#plzers<-plzers[!(plzers$start==plzers$end),]
#plzers<-plzers[!duplicated(plzers), ]
plzers<-plzers[!(is.na(plzers$PEP_ID))]
plzers$end<-ifelse(is.na(plzers$end), plzers$start, plzers$end)
class(plzers$end)<-"Date"
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, year=.$year, pepyear=.$pepyear, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
## Any relationship between growing season and region?
peppies<-as.data.frame(table(freeze$pepyear))
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx%>%dplyr::select(-total)
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, events=n)
dxx<-full_join(dxx, fs)
dxx$events<-ifelse(is.na(dxx$events), 0, dxx$events)
dxx$freq<-dxx$events/dxx$total
dxx<-read.csv("betula_events.csv", header=TRUE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
library(lme4)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_betula.csv", header=TRUE)
clim<-read.csv("climate_master.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
#plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
############# WORK ON LAST OBSERVATION! ######################
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
#test<- within(test, count[test$count==2]<-2)
tt<-test%>%
filter(count!="start") %>%
group_by(pepBB) %>%
filter(date==max(date))
tt$count<-as.numeric(as.character(tt$count))
tt<-tt[!duplicated(tt), ]
tt$count<-ifelse(tt$count=="start", "start", 2)
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
#ends<- unique(plz$pepyear[which(plz$count=="end")])
#plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
#plzers<-plzers[!(plzers$start==plzers$end),]
#plzers<-plzers[!duplicated(plzers), ]
plzers<-plzers[!(is.na(plzers$PEP_ID))]
plzers$end<-ifelse(is.na(plzers$end), plzers$start, plzers$end)
class(plzers$end)<-"Date"
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, year=.$year, pepyear=.$pepyear, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
## Any relationship between growing season and region?
peppies<-as.data.frame(table(freeze$pepyear))
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx%>%dplyr::select(-total)
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, events=n)
dxx<-full_join(dxx, fs)
dxx$events<-ifelse(is.na(dxx$events), 0, dxx$events)
dxx$freq<-dxx$events/dxx$total
write.csv(dxx, "~/Documents/git/regionalrisk/analyses/output/betula_events.csv", row.names=FALSE)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
View(dxx)
View(dxx)
View(freeze)
View(please)
freeze$doy<-strftime(freeze$date, format = "%j")
View(freeze)
hist(freeze$doy)
class(freeze$doy)
freeze$doy<-as.numeric(as.character(strftime(freeze$date, format = "%j")))
hist(freeze$doy)
View(plzers)
plzers$doy.bb<-as.numeric(as.character(strftime(plzers$start, format = "%j")))
plzers$doy.lf<-as.numeric(as.character(strftime(plzers$end, format = "%j")))
hist(plzers$doy.bb)
hist(plzers$doy.lf)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
library(lme4)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_fagus.csv", header=TRUE)
clim<-read.csv("climate_master.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
#plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
############# WORK ON LAST OBSERVATION! ######################
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
#test<- within(test, count[test$count==2]<-2)
tt<-test%>%
filter(count!="start") %>%
group_by(pepBB) %>%
filter(date==max(date))
tt$count<-as.numeric(as.character(tt$count))
tt<-tt[!duplicated(tt), ]
tt$count<-ifelse(tt$count=="start", "start", 2)
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
#ends<- unique(plz$pepyear[which(plz$count=="end")])
#plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
#plzers<-plzers[!(plzers$start==plzers$end),]
#plzers<-plzers[!duplicated(plzers), ]
plzers<-plzers[!(is.na(plzers$PEP_ID))]
plzers$end<-ifelse(is.na(plzers$end), plzers$start, plzers$end)
class(plzers$end)<-"Date"
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, year=.$year, pepyear=.$pepyear, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by="days")))
View(please)
View(please)
View(plzers)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
library(lme4)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_fagus.csv", header=TRUE)
clim<-read.csv("climate_master.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
#plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
View(plz)
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
tt<-test%>%
filter(count!="start") %>%
group_by(pepBB) %>%
filter(date==max(date))
View(tt)
tt$count<-as.numeric(as.character(tt$count))
tt<-tt[!duplicated(tt), ]
tt$count<-ifelse(tt$count=="start", "start", 2)
View(tt)
tt<-within(tt, count[tt$count==2]<-"end")
View(tt)
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
View(dat)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
View(dat)
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
View(plz)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
View(plz)
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
View(plzers)
plzers<-plzers[!(is.na(plzers$PEP_ID))]
plzers$end<-ifelse(is.na(plzers$end), plzers$start, plzers$end)
class(plzers$end)<-"Date"
peppies<-as.data.frame(table(plzers$pepyear))
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
plzers<-full_join(plzers,peppies)
