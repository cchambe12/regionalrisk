brms$Jvar<-ifelse(brms$term=="[FAGSYL,space]", 5.6, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[FRAEXC,space]", 5.5, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[QUEROB,space]", 5.4, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="cc", 5, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[AESHIP,cc]", 4.9, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[ALNGLU,cc]", 4.8, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[BETPEN,cc]", 4.7, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[FAGSYL,cc]", 4.6, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[FRAEXC,cc]", 4.5, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="[QUEROB,cc]", 4.4, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="m.index:cc", 4, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="sp.temp:cc", 3, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="cc:sm.elev", 2, brms$Jvar)
brms$Jvar<-ifelse(brms$term=="cc:space", 1, brms$Jvar)
cols <- colorRampPalette(brewer.pal(9,"Set1"))(7)
estimates<-c("NAO Index", "Mean Spring Temperature", "Elevation", "Space Parameter", "Climate Change",
"NAO Index x \nClimate Change", "Mean Spring Temperature \nx Climate Change",
"Elevation x \nClimate Chnage", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
regrisk<-ggplot(brms, aes(x=lower, xend=upper, y=Jvar, yend=Jvar, col=as.factor(species))) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estimate, y=Jvar, col=as.factor(species), size=as.factor(species))) +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Aesculus hippocastanum"))),
"2"=expression(paste(italic("Alnus glutinosa"))),
"3"=expression(paste(italic("Betula lenta"))),
"4"=expression(paste(italic("Fagus sylvatica"))),
"5"=expression(paste(italic("Fraxinus excelsior"))),
"6"=expression(paste(italic("Quercus robur"))),
"0"="Overall Effects"))+
geom_segment(arrow = arrow(length = unit(0.00, "npc"))) +
scale_y_discrete(limits = sort(unique(brms$term)), labels=estimates) +
xlab("Change in Number of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=5), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = c(0.85,0.25),
legend.text.align = 0) + #+ coord_cartesian(ylim=c(1,5), xlim=c(-20, 10))
scale_size_manual(values=c(3, 1, 1, 1, 1, 1, 1, 1, 1, 1), name="Species",
labels=c("1"=expression(paste(italic("Aesculus hippocastanum"))),
"2"=expression(paste(italic("Alnus glutinosa"))),
"3"=expression(paste(italic("Betula lenta"))),
"4"=expression(paste(italic("Fagus sylvatica"))),
"5"=expression(paste(italic("Fraxinus excelsior"))),
"6"=expression(paste(italic("Quercus robur"))),
"0"="Overall Effects"))
quartz()
regrisk
brms<-as.data.frame(tidy(slopes.fast,robust = TRUE))
load("~/Documents/git/regionalrisk/analyses/scripts/brm_biglm.Rdata")
brm.biglm
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
dx<-read.csv("output/fs_matspspace_times2.csv", header=TRUE)
dx<-subset(dx, year>1950)
dx<-dx%>%dplyr::select(lat, long, space)
dx<-dx[!duplicated(dx),]
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
mat<-subset(mat, year>1950)
head(dx)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
dx<-read.csv("output/fs_matspspace_times2.csv", header=TRUE)
dx<-subset(dx, year>1950)
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
mat<-subset(mat, year>1950)
head(dx)
check(mat)
head(mat)
dx<-dplyr::select(dx, long, lat, year, fs.count)
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
mat<-subset(mat, year>1950)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)
mat<-dplyr::select(mat, species, year, lat, long, bb)
full_join(dx, mat)
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
xx<-subset(xx, year>1950)
head(xx)
xx<-dplyr::select(xx, long, lat, year, fs.count)
d<-full_join(xx, mat)
head(mat)
head(xx)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
xx<-subset(xx, year>1950)
xx<-dplyr::select(xx, long, lat, year, fs.count, species)
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
mat<-subset(mat, year>1950)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)
mat<-dplyr::select(mat, species, year, lat, long, bb)
d<-inner_join(xx, mat)
d<-full_join(xx, mat)
head(d)
xx<-xx[!duplicated(xx),]
xx$lat.long<-paste(xx$lat, xx$long)
test<-xx[duplicated(xx$lat.long),]
View(test)
############# Add in Budburst data? ###########################
bb.aes<-read.csv("output/bbch_region_aesculus.csv", header=TRUE)
head(bb.aes)
bb.ag<-read.csv("output/bbch_region_alnus.csv", header=TRUE)
bb.bp<-read.csv("output/bbch_region_betula.csv", header=TRUE)
bb.fsyl<-read.csv("output/bbch_region_fagus.csv", header=TRUE)
bb.fex<-read.csv("output/bbch_region_fraxinus.csv", header=TRUE)
bb.qr<-read.csv("output/bbch_region_quercus.csv", header=TRUE)
## Using BBCH 11 for analysis
# AESHIP
bb.aes$lat.long<-paste(bb.aes$LAT, bb.aes$LON)
bb.aes<-bb.aes%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.aes$leafout<-ave(bb.aes$DAY) ## 111.24
bb.aes$bb<-bb.aes$DAY-12
bb.aes<-rename(bb.aes, year=YEAR)
bb.aes<-dplyr::select(bb.aes, species, year, bb, LAT, LON, ALT)
bb.aes<-bb.aes[!duplicated(bb.aes),]
# ALNGLU
bb.ag$lat.long<-paste(bb.ag$LAT, bb.ag$LON)
bb.ag<-bb.ag%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.ag$leafout<-ave(bb.ag$DAY)
bb.ag$bb<-bb.ag$DAY-12
bb.ag<-rename(bb.ag, year=YEAR)
bb.ag<-dplyr::select(bb.ag, species, year, bb, LAT, LON, ALT)
bb.ag<-bb.ag[!duplicated(bb.ag),]
# BETPEN
bb.bp$lat.long<-paste(bb.bp$LAT, bb.bp$LON)
bb.bp<-bb.bp%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.bp$leafout<-ave(bb.bp$DAY)
bb.bp$bb<-bb.bp$DAY-12
bb.bp<-rename(bb.bp, year=YEAR)
bb.bp<-dplyr::select(bb.bp, species, year, bb, LAT, LON, ALT)
bb.bp<-bb.bp[!duplicated(bb.bp),]
# FAGSYL
bb.fsyl$lat.long<-paste(bb.fsyl$LAT, bb.fsyl$LON)
bb.fsyl<-bb.fsyl%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.fsyl$leafout<-ave(bb.fsyl$DAY)
bb.fsyl$bb<-bb.fsyl$DAY-12
bb.fsyl<-rename(bb.fsyl, year=YEAR)
bb.fsyl<-dplyr::select(bb.fsyl, species, year, bb, LAT, LON, ALT)
bb.fsyl<-bb.fsyl[!duplicated(bb.fsyl),]
# FRAEXC
bb.fex$lat.long<-paste(bb.fex$LAT, bb.fex$LON)
bb.fex<-bb.fex%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.fex$leafout<-ave(bb.fex$DAY)
bb.fex$bb<-bb.fex$DAY-12
bb.fex<-rename(bb.fex, year=YEAR)
bb.fex<-dplyr::select(bb.fex, species, year, bb, LAT, LON, ALT)
bb.fex<-bb.fex[!duplicated(bb.fex),]
# QUEROB
bb.qr$lat.long<-paste(bb.qr$LAT, bb.qr$LON)
bb.qr<-bb.qr%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.qr$leafout<-ave(bb.qr$DAY)
bb.qr$bb<-bb.qr$DAY-12
bb.qr<-dplyr::select(bb.qr, species, year, bb, LAT, LON, ALT)
bb.qr<-rename(bb.qr, year=YEAR)
bb.qr<-dplyr::select(bb.qr, species, year, bb, LAT, LON, ALT)
bb.qr<-bb.qr[!duplicated(bb.qr),]
d<-full_join(bb.aes, bb.ag)
d<-full_join(d, bb.bp)
d<-full_join(d, bb.fsyl)
d<-full_join(d, bb.fex)
d<-full_join(d, bb.qr)
View(d)
write.csv(d, file="~/Documents/git/regionalrisk/analyses/output/BBdata.csv", row.names = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
xx<-subset(xx, year>1950)
xx<-dplyr::select(xx, long, lat, year, fs.count, species)
xx<-xx[!duplicated(xx),]
xx$lat.long<-paste(xx$lat, xx$long)
test<-xx[duplicated(xx$lat.long),]
mat<-read.csv("output/BBdata.csv", header=TRUE)
mat<-subset(mat, year>1950)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)
mat<-dplyr::select(mat, species, year, lat, long, bb)
d<-inner_join(mat, xx)
mat<-mat[!duplicated(mat),]
d<-full_join(mat, xx)
head(d)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
xx<-subset(xx, year>1950)
xx<-dplyr::select(xx, long, lat, year, fs.count, species)
xx<-xx[!duplicated(xx),]
mat<-read.csv("output/BBdata.csv", header=TRUE)
mat<-subset(mat, year>1950)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)
mat<-dplyr::select(mat, species, year, lat, long, bb)
mat<-mat[!duplicated(mat),]
head(xx);head(mat)
class(xx$lat)
class(mat$lat)
class(xx$long)
class(mat$long)
class(xx$year)
class(mat$year)
class(xx$species)
class(mat$species)
d<-mat
d$fs<-NA
for(i in c(1:nrow(d))){
for(j in c(1:nrow(xx)))
d$fs[i]<-ifelse(d$species[i]==xx$species[j] & d$lat[i]==xx$lat[j] &
d$long[i]==xx$long[j] & d$year[i]==xx$year[j], xx$fs[j], d$fs[i])
}
View(d)
View(xx)
xx$check<-paste(xx$lat, xx$long, xx$year, xx$species)
check<-xx[duplicated(xx$check),]
View(check)
d<-inner_join(mat, xx)
View(d)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggstance)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
########################
#### get the data
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
xx<-subset(xx, year>1950)
xx<-dplyr::select(xx, long, lat, year, fs.count, species)
xx<-xx[!duplicated(xx),]
mat<-read.csv("output/BBdata.csv", header=TRUE)
mat<-subset(mat, year>1950)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)
mat<-dplyr::select(mat, species, year, lat, long, bb)
mat<-mat[!duplicated(mat),]
d<-left_join(mat, xx)
View(d)
mat$lat.long<-paste(mat$lat, mat$long)
d<-inner_join(mat, xx)
View(d)
########################
#### get the data
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
colnames(xx)
View(xx)
xx<-subset(xx, year>1950)
xx$lat.long<-paste(xx$lat, xx$long)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load Libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(egg)
library(brms)
# Setting working directory
setwd("~/Documents/git/regionalrisk/analyses/")
############# Add in Budburst data? ###########################
bb.aes<-read.csv("output/bbch_region_aesculus.csv", header=TRUE)
bb.ag<-read.csv("output/bbch_region_alnus.csv", header=TRUE)
bb.bp<-read.csv("output/bbch_region_betula.csv", header=TRUE)
bb.fsyl<-read.csv("output/bbch_region_fagus.csv", header=TRUE)
bb.fex<-read.csv("output/bbch_region_fraxinus.csv", header=TRUE)
bb.qr<-read.csv("output/bbch_region_quercus.csv", header=TRUE)
## Using BBCH 11 for analysis
# AESHIP
bb.aes$lat.long<-paste(bb.aes$LAT, bb.aes$LON)
bb.aes<-bb.aes%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.aes$leafout<-ave(bb.aes$DAY) ## 111.24
bb.aes$bb<-bb.aes$DAY-12
bb.aes<-rename(bb.aes, year=YEAR)
bb.aes<-dplyr::select(bb.aes, species, year, bb, LAT, LON, ALT)
bb.aes<-bb.aes[!duplicated(bb.aes),]
# ALNGLU
bb.ag$lat.long<-paste(bb.ag$LAT, bb.ag$LON)
bb.ag<-bb.ag%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.ag$leafout<-ave(bb.ag$DAY)
bb.ag$bb<-bb.ag$DAY-12
bb.ag<-rename(bb.ag, year=YEAR)
bb.ag<-dplyr::select(bb.ag, species, year, bb, LAT, LON, ALT)
bb.ag<-bb.ag[!duplicated(bb.ag),]
# BETPEN
bb.bp$lat.long<-paste(bb.bp$LAT, bb.bp$LON)
bb.bp<-bb.bp%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.bp$leafout<-ave(bb.bp$DAY)
bb.bp$bb<-bb.bp$DAY-12
bb.bp<-rename(bb.bp, year=YEAR)
bb.bp<-dplyr::select(bb.bp, species, year, bb, LAT, LON, ALT)
bb.bp<-bb.bp[!duplicated(bb.bp),]
# FAGSYL
bb.fsyl$lat.long<-paste(bb.fsyl$LAT, bb.fsyl$LON)
bb.fsyl<-bb.fsyl%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.fsyl$leafout<-ave(bb.fsyl$DAY)
bb.fsyl$bb<-bb.fsyl$DAY-12
bb.fsyl<-rename(bb.fsyl, year=YEAR)
bb.fsyl<-dplyr::select(bb.fsyl, species, year, bb, LAT, LON, ALT)
bb.fsyl<-bb.fsyl[!duplicated(bb.fsyl),]
# FRAEXC
bb.fex$lat.long<-paste(bb.fex$LAT, bb.fex$LON)
bb.fex<-bb.fex%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.fex$leafout<-ave(bb.fex$DAY)
bb.fex$bb<-bb.fex$DAY-12
bb.fex<-rename(bb.fex, year=YEAR)
bb.fex<-dplyr::select(bb.fex, species, year, bb, LAT, LON, ALT)
bb.fex<-bb.fex[!duplicated(bb.fex),]
# QUEROB
bb.qr$lat.long<-paste(bb.qr$LAT, bb.qr$LON)
bb.qr<-bb.qr%>%filter(BBCH==11)%>%filter(YEAR>=1950)
bb.qr$leafout<-ave(bb.qr$DAY)
bb.qr$bb<-bb.qr$DAY-12
bb.qr<-rename(bb.qr, year=YEAR)
bb.qr<-dplyr::select(bb.qr, species, year, bb, LAT, LON, ALT)
bb.qr<-bb.qr[!duplicated(bb.qr),]
d<-full_join(bb.aes, bb.ag)
d<-full_join(d, bb.bp)
d<-full_join(d, bb.fsyl)
d<-full_join(d, bb.fex)
d<-full_join(d, bb.qr)
#d<-rename(d, year=YEAR)
colstokeep<-c("bb", "species", "year", "LAT", "LON")
bx<-subset(d, select=colstokeep)
bx<-bx[!duplicated(bx),]
write.csv(d, file="~/Documents/git/regionalrisk/analyses/output/BBdata.csv", row.names = FALSE)
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
df<-d
## Hmm... can we sequence from budburst to leafout to find the number of freezes between?
df<-d%>%rename(lat=LAT)%>%rename(long=LON)
df$lat.long<-paste(df$lat, df$long)
df<- df[order(df$lat.long, df$year, df$species), ]
df$pep.year<-paste(df$year, df$lat.long, df$species)
days.btw <- Map(seq, df$bb, df$lo, by = 1)
df$lo<-df$bb+12
days.btw <- Map(seq, df$bb, df$lo, by = 1)
dxx <- data.frame(species=df$species, lat=df$lat, long=df$long, year=df$year,
pep.year = rep.int(df$pep.year, vapply(days.btw, length, 1L)),
doy = do.call(c, days.btw))
head(dxx)
#dxx$year<-substr(dxx$pep.year, 1, 4)
dxx<-dplyr::select(dxx, -pep.year)
x<-paste(dxx$year, dxx$doy)
dxx$date<-as.Date(strptime(x, format="%Y %j"))
dxx$Date<- as.character(dxx$date)
head(dxx)
dxx<- dxx[order(dxx$lat.long, dxx$year, dxx$species), ]
write.csv(dxx, file="~/Documents/git/regionalrisk/analyses/output/fscount_prep.csv", row.names = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
library(rstan)
library(rstanarm)
library(sjPlot)
library(sjmisc)
library(RColorBrewer)
library(dplyr)
library(broom)
library(ggplot2)
# Set Working Directory
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("regrisk.cleaned.2.csv", header=TRUE)
bb$nao.z <- (bb$m.index-mean(bb$m.index,na.rm=TRUE))/(2*sd(bb$m.index,na.rm=TRUE))
bb$mat.z <- (bb$sp.temp-mean(bb$sp.temp,na.rm=TRUE))/(2*sd(bb$sp.temp,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$sm.elev-mean(bb$sm.elev,na.rm=TRUE))/(2*sd(bb$sm.elev,na.rm=TRUE))
bb$space.z <- (bb$space-mean(bb$space,na.rm=TRUE))/(2*sd(bb$space,na.rm=TRUE))
colnames(bb)
bb$elev.z <- (bb$sm.elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
fit<-lm(fs.count~ nao.z + mat.z + elev.z  +
space.z + cc.z + species + nao.z:species +
mat.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc + mat.z:cc + elev.z:cc +
space.z:cc, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)),  as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)), as.numeric(mean(bb$space.z)),
as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")),
as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$space.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$space.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$space.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$space.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$space.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)), as.numeric(mean(bb$elev.z*bb$cc.z)),
as.numeric(mean(bb$space.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
xbar
(as.numeric(mean(bb$nao.z))
)
bb$nao.z
class(bb$nao.z)
mean(bb$nao.z)
hist(bb$nao.z)
bb<-bb[!duplicated(bb),]
bb<-na.omit(bb)
fit<-lm(fs.count~ nao.z + mat.z + elev.z  +
space.z + cc.z + species + nao.z:species +
mat.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc + mat.z:cc + elev.z:cc +
space.z:cc, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)),  as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)), as.numeric(mean(bb$space.z)),
as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")),
as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$space.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$space.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$space.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$space.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$space.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)), as.numeric(mean(bb$elev.z*bb$cc.z)),
as.numeric(mean(bb$space.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
xbar
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
plot(bb$space)
plot(residuals(bb$space))
plot(bb$space, post.inter)
fitspace<-lm(fs.count~space, data=bb)
fit.res<-resid(fitspace)
plot(bb$space, fit.res)
fit.res<-residuals(fitspace)
plot(bb$space, fit.res)
