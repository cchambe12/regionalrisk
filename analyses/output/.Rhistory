ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:10)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
ilemuc
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(ile$doy==123, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==141, 7.5, ile$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
ile$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
library(gridExtra)
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
geom_label(x = 82:97, y = 1:6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotation_custom(df, xmin=82, xmax=97, ymin=1, ymax=6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 135, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 137, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(Interpol.T)
library(chillR)
library(raster)
library(maptools)
library(rgeos)
library(rgdal)
raster1<-brick("~/Desktop/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
eur.temp<-nc_open("~/Desktop/tn_0.25deg_reg_v16.0.nc")
raster1<-brick("//WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc", varname="tn", sep="")
eur.temp <- nc_open("//128.103.155.31/WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc")
plot(raster1[[45]])
#raster1 <- setMinMax(raster1)
#length(doy)/365
doy<-ncvar_get(eur.temp, "time")
doy<-as.Date(doy, origin="1950-01-01")
day<-substr(doy, 9,10)
year<-as.numeric(substr(doy, 1, 4))
month<-as.numeric(substr(doy, 6, 7))
timevec<-paste(year, month, day, sep="-")
years.vec<-as.character(timevec, format="Y-%m-%d")
year<-as.numeric(substr(years.vec, 1, 4))
#doy.vec<-as.POSIXlt(names(raster1), format="X%j")
dates<-as.Date(years.vec)
names(raster1)<-dates
empty.raster<-raster1[[1]]
values(empty.raster)<-NA
years<-1950:2016
leaps <- function(x) {
m <- c()
for(i in 1:50) {
year.i <- years[which(((years %% 4 == 0) & (years %% 100 !=0) | (years %% 400 == 0)))]
m <- c(m, year.i)
}
return(m)
}
leap.years<-as.data.frame(leaps(1))
leap.years<-leap.years[!duplicated(leaps(1)),]
#year<-1950:2016
empty.raster<-raster1[[1]]
num.false.spring.year<-list()
#dates.false.spring<-list()
for(i in 1951:1983){#i=1952
print(i)
year.i<-i
is.leap<-ifelse(year.i%in%leap.years,TRUE,FALSE)
sequence.years<-which(year==year.i)
#length(sequence.years)
raster.sub<-subset(raster1,sequence.years)
#numnonas<-sum(!is.na(values(raster.sub[[1]])))
rast.array<-array(75,dim=c(ncell(raster.sub),181))
if(is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
if(!is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
#dates.fs<-apply(rast.array, 1, function(x){ifelse(x<=-2.2, x, 0)})
num.false.spring<-apply(rast.array,1,function(x){sum(ifelse(x<=-2.2,1,0))})
non.nas.ids<-which(!is.na(num.false.spring))
#values(emp.rast)<-NA
values(empty.raster)<- NA
#non.nas.dates<-which(!is.na(dates.fs))
#plot(raster1[[1]])
values(empty.raster)[non.nas.ids]<- num.false.spring[!is.na(num.false.spring)]
#values(empty.raster)[non.nas.dates]<- dates.fs[!is.na(dates.fs)]
#plot(empty.raster)
#dates.false.spring[[i]]<- empty.raster
num.false.spring.year[[i]]<-empty.raster
}
length(num.false.spring.year)
final.raster.preCC<-stack(unlist(num.false.spring.year))
summed.false.springs.preCC<-calc(final.raster.preCC,sum)
fs.years.pre<-calc(final.raster.preCC, function(x) {sum(ifelse(x>=1,1,0))})
writeRaster(fs.years.pre,"~/Documents/git/regionalrisk/analyses/output/fs.30.pre", bylayer=TRUE,format="GTiff")
install.packages("gdal")
library(gdal)
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgeos", repos = "http://R-Forge.R-project.org", type = "source")
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", type="source")
library(rgdal)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
rgdal::writeRaster(fs.years.post,"~/Documents/git/regionalrisk/analyses/output/fs.postCC", bylayer=TRUE,format="GTiff")
install.packages("rgeos", type="source")
install.packages("rgeos", type = "source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(c('rgdal','rgeos'),repos="http://www.stats.ox.ac.uk/pub/RWin")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rgeos", unload=TRUE)
install.packages("rgdal")
install.packages("installr")
updateR()
install.packages("updateR")
version
if(!require(installr)) {
install.packages("installr");
require(installr)
}
library(installr)
version
df<-d[sample(nrow(d), 10000), ]
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstanarm)
library(rstan)
library(bayesplot)
library(shinystan)
### Load data
setwd("~/Documents/git/regionalrisk/analyses/output")
d<-read.csv("fs_yearsitespp.csv", header=TRUE)
## Start running the models
d$PEP_ID<-as.numeric(as.factor(d$PEP_ID))
d$year<-as.numeric(d$year)
d$species<-as.numeric(as.factor(d$species))
df<-d[sample(nrow(d), 10000), ]
range(df$species)
range(df$PEP_ID)
range(df$fs)
mod<-stan_glmer(fs~year+species+(1|PEP_ID), data=df, family=gaussian)
df<-d[sample(nrow(d), 5000), ]
mod<-stan_glmer(fs~year+species+(1|PEP_ID), data=df, family=gaussian)
d$decade<-substr(d$year, 3, 3)
mod
launch_shinystan(mod)
fit<-
mod<-stan_glmer(fs~year+species+(1|PEP_ID), data=df, link="logit", link.phi="log")
mod<-stan_betareg(fs~year+species+(1|PEP_ID), data=df, family=)
fit<-
mod<-stan_glmer(fs~year+species+(1|PEP_ID), data=df, link="logit", link.phi="log")
fit<-
mod<-stan_betaregfs~year+species+(1|PEP_ID), data=df, link="logit", link.phi="log")
fit<-
mod<-stan_betareg(fs~year+species+(1|PEP_ID), data=df, link="logit", link.phi="log")
fit<-
mod<-stan_betareg(fs~year+species+lat*long, data=df, link="logit", link.phi="log")
d$fs
class(d$fs)
d$fs<-as.numeric(d$fs)
df<-d[sample(nrow(d), 5000), ]
fit<-
mod<-stan_betareg(fs~year+species+lat*long, data=df, link="logit", link.phi="log")
fit<-
mod<-stan_glm(fs~year+species+lat*long, data=df, family = gaussian(link = 'log'))
mod
d<-read.csv("fs_yearsitespp.csv", header=TRUE)
## Start running the models
d$PEP_ID<-as.numeric(as.factor(d$PEP_ID))
d$year<-as.numeric(d$year)
#d$species<-as.numeric(as.factor(d$species))
d$fs<-as.numeric(d$fs)
## test model
df<-d[sample(nrow(d), 5000), ]
mod<-stan_glm(fs~year+species+lat*long, data=df, family = gaussian(link = 'log'))
mod
## Hmmm.. how to subset down to one decade vs another?
d$decade<-substr(d$year, 3, 3)
years<-c(7, 0)
dd<-d%>% filter(decade%in%years)
dd$fs.num<-ave(dd$fs, dd$decade, dd$PEP_ID, dd$species, FUN=count)
dd$decade<-as.character(dd$decade)
head(dd)
dd$fs.num<-ave(dd$fs, dd$decade, dd$PEP_ID, dd$species, FUN=count)
### Load data
setwd("~/Documents/git/regionalrisk/analyses/output")
d<-read.csv("fs_yearsitespp.csv", header=TRUE)
## Start running the models
#d$PEP_ID<-as.numeric(as.factor(d$PEP_ID))
d$year<-as.numeric(d$year)
#d$species<-as.numeric(as.factor(d$species))
d$fs<-as.numeric(d$fs)
## Hmmm.. how to subset down to one decade vs another?
d$decade<-substr(d$year, 3, 3)
years<-c(7, 0)
dd<-d%>% filter(decade%in%years)
dd$decade<-as.character(dd$decade)
dd$PEP_ID
class(dd$PEP_ID)
dd$PEP_ID<-as.character(dd$PEP_ID)
dd$fs.num<-ave(dd$fs, dd$decade, dd$PEP_ID, dd$species, FUN=count)
dd$fs.num<-ave(dd$fs, dd$decade, dd$PEP_ID, dd$species, FUN=sum)
View(dd)
fit<-stan_glm(fs.num~decade + species, data=dd)
ddf<-dd[sample(nrow(dd), 8000), ]
fit<-stan_glm(fs.num~decade + species, data=ddf)
fit
plot(fit, pars="beta")
fit<-stan_glm(fs.num~decade + species + lat*long, data=ddf)
fit
fit<-stan_glmer(fs.num~decade + (1|species) + lat*long, data=dd, family=gaussian)
ddf<-dd[sample(nrow(dd), 12000), ]
fit<-stan_glmer(fs.num~decade + (1|species) + lat*long, data=ddf, family=gaussian)
fit
dd<-d
dd$fs.num<-ave(dd$fs, dd$decade, dd$PEP_ID, dd$species, FUN=sum)
ddf<-dd[sample(nrow(dd), 12000), ]
fit1<-stan_glm(fs.num~decade, data=ddf, family=gaussian)
fit1
class(dd$year)
2016-1984
2983-1950
1983-1950
dd<-dd%>%filter(year>1950)
dd$cc<-ifelse(dd$year<=1983, 0, 1)
ddf<-dd[sample(nrow(dd), 30000), ]
fit1<-stan_glm(fs.num~cc + species, data=ddf, family=gaussian)
fit1
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(rstan)
library(rstanarm)
library(shinystan)
### Load data
setwd("~/Documents/git/regionalrisk/analyses/output")
bp<-read.csv("betpen_data.csv", header=TRUE)
ah<-read.csv("aeship_data.csv", header=TRUE)
ag<-read.csv("alnglu_data.csv", header=TRUE)
fs<-read.csv("fagsyl_data.csv", header=TRUE)
fe<-read.csv("fraexc_data.csv", header=TRUE)
qr<-read.csv("querob_data.csv", header=TRUE)
## Start looking at the data a bit...
bp$fs<- ifelse(bp$Tmin<=-2.2, 1, 0)
bp$fs.count<- ave(bp$fs, bp$PEP_ID, bp$year, FUN=sum)
betpen<-bp%>%dplyr::select(lat, long, PEP_ID, fs.count, year)
betpen<-betpen[!duplicated(betpen),]
betpen<-na.omit(betpen)
betpen$species<-"BETPEN"
betpen$fs<-ifelse(betpen$fs.count>=1, 1, 0)
ah$fs<- ifelse(ah$Tmin<=-2.2, 1, 0)
ah$fs.count<- ave(ah$fs, ah$PEP_ID, ah$year, FUN=sum)
aeship<-ah%>%dplyr::select(lat, long, PEP_ID, fs.count, year)
aeship<-aeship[!duplicated(aeship),]
aeship<-na.omit(aeship)
aeship$species<-"AESHIP"
aeship$fs<-ifelse(aeship$fs.count>=1, 1, 0)
d<-full_join(betpen, aeship)
ag$fs<- ifelse(ag$Tmin<=-2.2, 1, 0)
ag$fs.count<- ave(ag$fs, ag$PEP_ID, ag$year, FUN=sum)
alnglu<-ag%>%dplyr::select(lat, long, PEP_ID, fs.count, year)
alnglu<-alnglu[!duplicated(alnglu),]
alnglu<-na.omit(alnglu)
alnglu$species<-"ALNGLU"
alnglu$fs<-ifelse(alnglu$fs.count>=1, 1, 0)
d<-full_join(d, alnglu)
fe$fs<- ifelse(fe$Tmin<=-2.2, 1, 0)
fe$fs.count<- ave(fe$fs, fe$PEP_ID, fe$year, FUN=sum)
fraexc<-fe%>%dplyr::select(lat, long, PEP_ID, fs.count, year)
fraexc<-fraexc[!duplicated(fraexc),]
fraexc<-na.omit(fraexc)
fraexc$species<-"FRAEXC"
fraexc$fs<-ifelse(fraexc$fs.count>=1, 1, 0)
d<-full_join(d, fraexc)
fs$fs<- ifelse(fs$Tmin<=-2.2, 1, 0)
fs$fs.count<- ave(fs$fs, fs$PEP_ID, fs$year, FUN=sum)
fagsyl<-fs%>%dplyr::select(lat, long, PEP_ID, fs.count, year)
fagsyl<-fagsyl[!duplicated(fagsyl),]
fagsyl<-na.omit(fagsyl)
fagsyl$species<-"FAGSYL"
fagsyl$fs<-ifelse(fagsyl$fs.count>=1, 1, 0)
d<-full_join(d, fagsyl)
qr$fs<- ifelse(qr$Tmin<=-2.2, 1, 0)
qr$fs.count<- ave(qr$fs, qr$PEP_ID, qr$year, FUN=sum)
querob<-qr%>%dplyr::select(lat, long, PEP_ID, fs.count, year)
querob<-querob[!duplicated(querob),]
querob<-na.omit(querob)
querob$species<-"QUEROB"
querob$fs<-ifelse(querob$fs.count>=1, 1, 0)
d<-full_join(d, querob)
write.csv(d, file="~/Documents/git/regionalrisk/analyses/output/fs_yearsitespp.csv", row.names = FALSE)
### Load data
setwd("~/Documents/git/regionalrisk/analyses/output")
d<-read.csv("fs_yearsitespp.csv", header=TRUE)
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstanarm)
library(rstan)
library(bayesplot)
library(shinystan)
### Load data
setwd("~/Documents/git/regionalrisk/analyses/output")
d<-read.csv("fs_yearsitespp.csv", header=TRUE)
## Start running the models
#d$PEP_ID<-as.numeric(as.factor(d$PEP_ID))
d$year<-as.numeric(d$year)
#d$species<-as.numeric(as.factor(d$species))
d$fs<-as.numeric(d$fs)
## Hmmm.. how to subset down to one decade vs another?
d$decade<-substr(d$year, 3, 3)
#years<-c(7, 0)
#dd<-d%>% filter(decade%in%years)
dd<-d
#dd$fs.num<-ave(dd$fs, dd$decade, dd$PEP_ID, dd$species, FUN=sum)
dd<-dd%>%filter(year>1950)
dd$cc<-ifelse(dd$year<=1983, 0, 1)
View(dd)
fit1<-stan_glm(fs.count~decade + species, data=ddf, family=gaussian)
ddf<-dd[sample(nrow(dd), 30000), ]
fit1<-stan_glm(fs.count~decade + species, data=ddf, family=gaussian)
fit1
fit1<-stan_glm(fs.count~species + lat*long, data=ddf, family=gaussian)
fit1
fit2<-stan_glm(fs.cc~species+cc+lat*long, data=ddf, family=gaussian)
dd$fs.cc<-ave(dd$fs.count, dd$cc, dd$PEP_ID, dd$species, FUN=sum)
dd$fs.dec<-ave(dd$fs.count, dd$decade, dd$PEP_ID, dd$species, FUN=sum)
ddf<-dd[sample(nrow(dd), 30000), ]
fit2<-stan_glm(fs.cc~species+cc+lat*long, data=ddf, family=gaussian)
fit3<-stan_glm(fs.dec~species+decade+lat*long, data=ddf, family=gaussian)
fit2
plot(fit2, pars="beta")
fit3
plot(fit3, pars="beta")
launch_shinystan(fit3)
