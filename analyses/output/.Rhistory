#dx<-read.csv("output/fs_matspspace_old.csv", header=TRUE)
#dx<-read.csv("output/fs_matspspace_times2.csv", header=TRUE)
#dx<-subset(dx, year>1950)
#xx<-read.csv("output/fs_matspspace.csv", header=TRUE)
#bb.stan<-read.csv("output/bb.brm.nointer.csv", header=TRUE)
#dx<-dx%>%dplyr::select(lat, long, space)
#dx<-dx[!duplicated(dx),]
#dxx<-dx[which(dx$space<=-100 | dx$space>=300),]
#mapWorld <- borders("world", colour="gray72", fill="gray65",ylim=c(30,70),xlim=c(-10,35)) # create a layer of borders
#myPalette <- colorRampPalette(rev(brewer.pal(11, "Spectral")))
#bb.map.mini<-bb.map
#bb.map.mini$space<-round(bb.map$space, digits=0)
#bb.map.mini<-bb.map.mini[!duplicated(bb.map.mini),]
#sc <- scale_colour_gradientn(colours = myPalette(100), limits=c(-51, 87))
#site<- ggplot(bb.map.mini, aes(x=long, y=lat, col=space), alpha=0.2) +   mapWorld +
#  coord_cartesian(ylim=c(30,70),xlim=c(-10,35))
#site <- site + theme(panel.border = element_blank(),
#                 panel.grid.major = element_blank(),
#                panel.grid.minor = element_blank()) + geom_point() + geom_jitter(alpha=0.3)+
# sc + labs(color="Space Parameter")+
# xlab("Longitude") + ylab("Latitude")
#quartz()
#site
#spg<-bb.map
#coordinates(spg)<- ~long+lat
#proj4string(spg)<-CRS("+proj=longlat +datum=WGS84")
#coords<-spTransform(spg, CRS("+proj=longlat"))
#shapefile(coords, "output/bbspace.shp")
dx<-read.csv("output/space_updated.csv", header=TRUE)
View(dx)
xx<-read.csv("output/fs_yearsitespp.csv", header=TRUE)
xx<-subset(xx, year>1950)
df<-read.csv("output/mat_MAM.csv", header=TRUE)
df<-subset(df, year>1950)
mat<-read.csv("output/fs_bb_sitedata.csv", header=TRUE)
mat<-subset(mat, year>1950)
nao<-read.csv("output/nao_year_sp.csv", header=TRUE)
nao<-subset(nao, year>1950)
### Clean up dataframes a bit
dx<-dx%>%dplyr::select(lat, long, space)
dx<-dx[!duplicated(dx),]
dx<-full_join(df, dx)
mat<-dplyr::select(mat, species, LAT, LON, ALT)
mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
mat$lat.long<-paste(mat$lat, mat$long)
mat<-mat[!duplicated(mat),]
bb<-full_join(mat, df)
bb<-full_join(mat, dx)
#### Get elevation information
#bb<-bb%>%rename(sp.temp=pre.bb)
bb$cc<-ifelse(bb$year<=1983&bb$year>1950, 0, 1)
xx<-dplyr::select(xx, lat, long, species, fs.count, year, space)
xx<-xx[!duplicated(xx),]
bb<-full_join(bb, xx)
bb<-bb[!duplicated(bb),]
#bb$elev<-ave(bb$elev, bb$lat.long)
#bb<-bb[!duplicated(bb),]
bb<-na.omit(bb)
nao<-dplyr::select(nao, species, year, m.index)
nao<-nao[!duplicated(nao),]
bb<-full_join(bb, nao)
dist<-read.csv("output/dist_utm.csv", header=TRUE)
dist<-dist%>%rename(long=LONG)%>%rename(lat=LAT)
bb<-full_join(bb, dist)
tar.var<-c("species", "year", "lat.long")
resp.var<-c("fs.count")
bb.sub<-bb[,c(tar.var, resp.var)]
bb.sub.nodup<-bb[!duplicated(bb.sub),]
dd<-bb.sub.nodup
#dd$space<-round(dd$space, digits=3)
#dd<-dd[!duplicated(dd),]
write.csv(dd, file="~/Documents/git/regionalrisk/analyses/output/regrisk.fixed.csv", row.names = FALSE)
#mat<-mat%>%rename(lat=LAT)%>%rename(long=LON)%>%rename(elev=ALT)
head(dd)
columnstokeep <- c("species", "m.index", "mst", "cc", "lat", "elev", "fs.count", "distkm", "space")
#columnstokeep.map <- c("space","lat", "long")
#bb.map<-subset(bb, select=columnstokeep.map)
bb.stan <- subset(dd, select=columnstokeep)
bb.stan<-bb.stan[!duplicated(bb.stan),]
#bb.map<-bb.map[!duplicated(bb.map),]
bb.stan<-na.omit(bb.stan)
#bb.map<-bb.map[!duplicated(bb.map),]
bb.stan<-na.omit(bb.stan)
#bb.stan<-bb
write.csv(bb.stan, file="~/Documents/git/regionalrisk/analyses/output/bb_latprep.csv", row.names = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
library(rstan)
library(rstanarm)
library(sjPlot)
library(sjmisc)
library(RColorBrewer)
library(dplyr)
library(broom)
library(ggplot2)
# Set Working Directory
setwd("~/Documents/git/regionalrisk/analyses/output")
#bb<-read.csv("regrisk.fixed.csv", header=TRUE)
bb<-read.csv("bb_latprep.csv", header=TRUE)
bb$nao.z <- (bb$m.index-mean(bb$m.index,na.rm=TRUE))/(2*sd(bb$m.index,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$space-mean(bb$space,na.rm=TRUE))/(2*sd(bb$space,na.rm=TRUE))
bb$species<-ifelse(bb$species=="FAGSYL", "aaFAGSYL", bb$species)
fit<-lm(fs.count~ nao.z + mat.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc + mat.z:cc + elev.z:cc + space.z:cc.z, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)),  as.numeric(mean(bb$elev.z)), as.numeric(mean(bb$space.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$space.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$space.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$space.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$space.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$space.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)), as.numeric(mean(bb$elev.z*bb$cc.z)),
as.numeric(mean(bb$space.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
hist(bb$m.index)
hist(bb$mst)
hist(bb$elev)
hist(bb$lat)
hist(bb$distkm)
hist(bb$space)
hist(bb$nao.z)
hist(bb$mat.z)
hist(bb$elev.z)
hist(bb$lat.z)
hist(bb$dist.z)
hist(bb$space.z)
bbs<-bb[sample(nrow(bb), 60000),]
d<-bbs
lat<-ggplot(d, aes(x=distkm, y=space)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
dist<-ggplot(d, aes(x=distkm, y=space)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
lat<-ggplot(d, aes(x=distkm, y=lat)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
d<-bb
dist<-ggplot(d, aes(x=distkm, y=space)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
lat<-ggplot(d, aes(x=distkm, y=lat)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
elev<-ggplot(d, aes(x=distkm, y=elev)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
mat<-ggplot(d, aes(x=distkm, y=mst)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
dist
lat
quartz()
lat
lat
quartz()
elev
quartz()
mat
elev<-ggplot(d, aes(x=lat, y=elev)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
quartz()
elev
mat<-ggplot(d, aes(x=lat, y=mst)) + geom_point(aes(col=as.factor(species))) +
facet_wrap(~species) + theme(legend.position = "none")
mat
quartz()
mat
fit<-lm(fs.count~ nao.z + mat.z + dist.z +
cc.z + species + nao.z:species +
mat.z:species + dist.z:species + cc.z:species +
nao.z:cc + mat.z:cc + dist.z:cc.z, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$dist.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$dist.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$dist.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$dist.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$dist.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$dist.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$dist.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
fit<-lm(fs.count~ nao.z + mat.z + elev.z + lat.z +
cc.z + species + nao.z:species +
mat.z:species + elev.z:species + lat.z:species + cc.z:species +
nao.z:cc + mat.z:cc + elev.z:cc.z + lat.z:cc.z, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)),  as.numeric(mean(bb$elev.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$dist.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$dist.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$dist.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$dist.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$dist.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$elev.z*bb$cc.z)), as.numeric(mean(bb$lat.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)),  as.numeric(mean(bb$lat.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$dist.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$dist.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$dist.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$dist.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$dist.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$elev.z*bb$cc.z)), as.numeric(mean(bb$lat.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
fit<-lm(fs.count~ nao.z + mat.z + elev.z + dist.z +
cc.z + species + nao.z:species +
mat.z:species + elev.z:species + dist.z:species + cc.z:species +
nao.z:cc + mat.z:cc + elev.z:cc.z + dist.z:cc.z, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)),  as.numeric(mean(bb$dist.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$dist.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$dist.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$dist.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$dist.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$dist.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$elev.z*bb$cc.z)), as.numeric(mean(bb$lat.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)),  as.numeric(mean(bb$dist.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$dist.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$dist.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$dist.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$dist.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$dist.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$elev.z*bb$cc.z)), as.numeric(mean(bb$dist.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
##### Interaction Plots code
nao<- plot_model(fit, type = "pred", terms = c("nao.z", "species")) + xlab("NAO") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none")
elev<- plot_model(fit, type = "pred", terms = c("elev.z", "species")) + xlab("(Small) Elevation") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none")
mat<- plot_model(fit, type = "pred", terms = c("mat.z", "species")) + xlab("Mean Spring Temperature") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none")
space<- plot_model(fit, type = "pred", terms = c("dist.z", "species")) + xlab("Distance from Coast") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none")
cc<- plot_model(fit, type = "pred", terms = c("cc.z", "species")) + xlab("Climate Change") + ylab("Number of False Springs") + ggtitle("")
quartz()
ggarrange(nao, mat, cc, space, elev, ncol=3, nrow=2)
library(Egg)
library(egg)
ggarrange(nao, mat, cc, space, elev, ncol=3, nrow=2)
##### Interaction Plots code
nao<- plot_model(fit, type = "pred", terms = c("nao.z", "species")) + xlab("NAO") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
elev<- plot_model(fit, type = "pred", terms = c("elev.z", "species")) + xlab("Elevation") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
mat<- plot_model(fit, type = "pred", terms = c("mat.z", "species")) + xlab("Mean Spring Temperature") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
space<- plot_model(fit, type = "pred", terms = c("dist.z", "species")) + xlab("Distance from Coast") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
cc<- plot_model(fit, type = "pred", terms = c("cc.z", "species")) + xlab("Climate Change") + ylab("Number of False Springs") + ggtitle("") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
ggarrange(nao, mat, cc, space, elev, ncol=3, nrow=2)
##### Interaction Plots code
nao<- plot_model(fit, type = "pred", terms = c("nao.z", "cc")) + xlab("NAO") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
elev<- plot_model(fit, type = "pred", terms = c("elev.z", "cc")) + xlab("Elevation") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
mat<- plot_model(fit, type = "pred", terms = c("mat.z", "cc")) + xlab("Mean Spring Temperature") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
space<- plot_model(fit, type = "pred", terms = c("dist.z", "cc")) + xlab("Distance from Coast") + ylab("Number of False Springs") + ggtitle("") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
ggarrange(nao, mat, space, elev, ncol=2, nrow=2)
quartz()
ggarrange(nao, mat, space, elev, ncol=2, nrow=2)
fit<-lm(fs.count~ nao.z + mat.z + elev.z + space.z +
cc.z + species + nao.z:species +
mat.z:species + elev.z:species + space.z:species + cc.z:species +
nao.z:cc + mat.z:cc + elev.z:cc.z + space.z:cc.z, data=bb)             # not necessary in this case
b <- coef(fit)[-1]
R <- qr.R(fit$qr)[-1,-1]
SSR <- crossprod(fit$residuals)[1]
not_NA <- !is.na(fitted(fit))
N <- sum(not_NA)
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)),  as.numeric(mean(bb$dist.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$dist.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$dist.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$dist.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$dist.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$dist.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$elev.z*bb$cc.z)), as.numeric(mean(bb$dist.z*bb$cc.z)))
xbar <- c(as.numeric(mean(bb$nao.z)), as.numeric(mean(bb$mat.z)), as.numeric(mean(bb$elev.z)),  as.numeric(mean(bb$dist.z)), as.numeric(mean(bb$cc.z)),
as.numeric(as.factor("AESHIP")), as.numeric(as.factor("ALNGLU")), as.numeric(as.factor("BETPEN")),
as.numeric(as.factor("FRAEXC")), as.numeric(as.factor("QUEROB")),
as.numeric(mean(bb$nao.z[bb$species=="AESHIP"])), as.numeric(mean(bb$nao.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$nao.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$nao.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$nao.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$mat.z[bb$species=="AESHIP"])), as.numeric(mean(bb$mat.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$mat.z[bb$species=="BETPEN"])), as.numeric(mean(bb$mat.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$mat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$elev.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$elev.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$elev.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$elev.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$elev.z[bb$species=="QUEROB"])),
#as.numeric(mean(bb$lat.z[bb$species=="AESHIP"])),
#as.numeric(mean(bb$lat.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$lat.z[bb$species=="BETPEN"])),
#as.numeric(mean(bb$lat.z[bb$species=="FRAEXC"])),
#as.numeric(mean(bb$lat.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$space.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$space.z[bb$species=="ALNGLU"])), as.numeric(mean(bb$space.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$space.z[bb$species=="FRAEXC"])),
as.numeric(mean(bb$space.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$cc.z[bb$species=="AESHIP"])),
as.numeric(mean(bb$cc.z[bb$species=="ALNGLU"])),
as.numeric(mean(bb$cc.z[bb$species=="BETPEN"])),
as.numeric(mean(bb$cc.z[bb$species=="FRAEXC"])), as.numeric(mean(bb$cc.z[bb$species=="QUEROB"])),
as.numeric(mean(bb$nao.z*bb$cc.z)), as.numeric(mean(bb$mat.z*bb$cc.z)),
as.numeric(mean(bb$elev.z*bb$cc.z)), as.numeric(mean(bb$space.z*bb$cc.z)))
xbarnames<-colnames(R)
names(xbar)<-xbarnames
y <- bb$fs.count[not_NA]
ybar <- mean(y)
s_y <- sd(y)
post.inter <- stan_biglm.fit(b, R, SSR, N, xbar, ybar, s_y, prior = R2(.75),
# the next line is only to make the example go fast
chains = 4, iter = 2000)
post.inter
##### Interaction Plots code
nao<- plot_model(fit, type = "pred", terms = c("nao.z", "cc")) + xlab("NAO") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
elev<- plot_model(fit, type = "pred", terms = c("elev.z", "cc")) + xlab("Elevation") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
mat<- plot_model(fit, type = "pred", terms = c("mat.z", "cc")) + xlab("Mean Spring Temperature") + ylab("Number of False Springs") + ggtitle("") + theme(legend.position = "none") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
space<- plot_model(fit, type = "pred", terms = c("space.z", "cc")) + xlab("Distance from Coast") + ylab("Number of False Springs") + ggtitle("") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
ggarrange(nao, mat, space, elev, ncol=2, nrow=2)
quartz()
ggarrange(nao, mat, space, elev, ncol=2, nrow=2)
ggarrange(nao, mat, elev, space, ncol=2, nrow=2)
space<- plot_model(fit, type = "pred", terms = c("space.z", "cc")) + xlab("Space") + ylab("Number of False Springs") + ggtitle("") + scale_y_continuous(expand = c(0, 0)) + coord_cartesian(ylim=c(0,0.4))
ggarrange(nao, mat, elev, space, ncol=2, nrow=2)
