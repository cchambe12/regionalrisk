d.total$num.years<-ave(d.total$year, d.total[,("prov")], FUN=length)
d.aes <- merge(d.total, d.aes, by=c('prov', 'year'), sort = FALSE)
View(d.aes)
d.aes$num.years<-as.numeric(d.aes$num.years)
View(d.aes)
unique(sort(as.numeric(d.aes$freezes)))
d.aes$freezes<-ifelse(d.aes$freezes>0, 1, 0)
d.aes$freezes<-ave(d.aes$freezes, d.aes$prov, FUN=function(x) cumsum(c(0, head(x, -1))))
d.aes$freezes <- ave(
d.aes$frz, d.aes$prov, d.aes$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
d.aes$freezes<-ifelse(d.aes$freezes>0, 1, 0)
d.aes$freezes<-ave(d.aes$freezes, d.aes$prov,d.aes$year, FUN=function(x) cumsum(c(0, head(x, -1))))
unique(sort(as.numeric(d.aes$freezes)))
d.aes$frequency<-as.numeric(d.aes$freezes/d.aes$num.years)
fs<-d.aes%>%dplyr::select(prov, year, freezes)
fs<-fs[!duplicated(fs),]
fs$frz.years<-ave(fs$freezes, fs[,c("prov","year")], FUN=length)
View(fs)
d.aes$freezes <- ave(
d.aes$frz, d.aes$prov, d.aes$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
fs<-d.aes%>%dplyr::select(prov, year, freezes)
fs<-fs[!duplicated(fs),]
fs$frz.years<-ave(fs$freezes, fs[,c("prov","year")], FUN=length)
fsi<-function(x) ifelse(freeze>0,1,0)
fs$frz.years<-ave(fs$freezes, fs[,c("prov","year")], FUN=fsi)
fsi<-function(x) ifelse(fs$freezes>0,1,0)
fs$frz.years<-ave(fs$freezes, fs[,c("prov","year")], FUN=fsi)
View(match)
fs<-d.aes%>%dplyr::select(prov, year, freezes)
fs<-fs[!duplicated(fs),]
fsi<-function(x) ifelse(fs$freezes>0,1,0)
fs$freezes<-ifelse(fs$freezes>0,1,0)
fs<-fs[!duplicated(fs),]
fs$frz.years<-ave(fs$freezes, d.total[,("prov")], FUN=length)
fs$frz.years<-ave(fs$freezes, fs[,("prov")], FUN=length)
fs<-d.aes%>%dplyr::select(prov, year, freezes)
fs<-fs[!duplicated(fs),]
fs$freezes<-ifelse(fs$freezes>0,1,0)
fs<-fs[!duplicated(fs),]
fs$frz.years<-ave(fs$freezes, fs[,("prov")], FUN=length)
fs<-d.aes%>%dplyr::select(prov, year, freezes)
fs<-fs[!duplicated(fs),]
fs$freezes<-ifelse(fs$freezes>0,1,NA)
fs<-na.omit(fs)
fs<-fs[!duplicated(fs),]
fs$frz.years<-ave(fs$freezes, fs[,("prov")], FUN=length)
d.aes <- merge(fs, d.aes, by=c('prov', 'year'), sort = FALSE)
d.aes$frequency<-as.numeric(d.aes$frz.years/d.aes$num.years)
d.aes<-df
d.aes$year<-substr(d.aes$date, 0,4)
d.aes$frz<-ifelse(d.aes$Tmin<=-2.2, 1, 0)
d.aes$freezes <- ave(
d.aes$frz, d.aes$prov, d.aes$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
d.total<-d.aes%>%dplyr::select(prov, year)
d.total<-d.total[!duplicated(d.total),]
d.total$num.years<-ave(d.total$year, d.total[,("prov")], FUN=length)
d.aes <- merge(d.total, d.aes, by=c('prov', 'year'), sort = FALSE)
d.aes$num.years<-as.numeric(d.aes$num.years)
fs<-d.aes%>%dplyr::select(prov, year, freezes)
fs<-fs[!duplicated(fs),]
fs$freezes<-ifelse(fs$freezes>0,1,NA)
fs<-na.omit(fs)
fs<-fs[!duplicated(fs),]
fs$frz.years<-ave(fs$freezes, fs[,("prov")], FUN=length)
fs<-dplyr::select(-freezes)
fs<-dplyr::select(fs,-freezes)
d.aes <- merge(fs, d.aes, by=c('prov', 'year'), sort = FALSE)
d.aes$frequency<-as.numeric(d.aes$frz.years/d.aes$num.years)
mod<-lm(frequency~lat*long, data=d.aes)
summary(mod)
mod<-lm(frequency~risk, data=d.aes)
summary(mod)
d.aes<-df
d.aes$year<-substr(d.aes$date, 0,4)
d.aes$frz<-ifelse(d.aes$Tmin<=-2.2, 1, 0)
d.aes$freezes <- ave(
d.aes$frz, d.aes$prov, d.aes$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
df<-data.frame(x, y, z)
df<-data.frame(x=x, y=y, z=z)
doy<- 90:150
bb<-c(95, 122)
lf<-c(100, 142)
species<-c("ILEMUC", "BETALL")
risk<-c("low", "med", "high", "med")
df<-data.frame(doy, bb, lf, species, risk)
df<-data.frame(doy, bb=NA, lf=NA, species=NA, risk=NA)
View(df)
doy<- 90:150
df<-data.frame(doy, phase=NA, species=NA, risk=NA)
df$phase<-ifelse(df$doy==95, "BB", df$phase)
df$phase<-ifelse(df$doy==100, "LO", df$phase)
df$species<-ifelse(df$doy==95, "ILEMUC", df$species)
df$species<-ifelse(df$doy==100, "ILEMUC", df$species)
df$phase<-ifelse(df$doy==122, "BB", df$phase)
df$phase<-ifelse(df$doy==142, "LO", df$phase)
df$species<-ifelse(df$doy==122, "BETALL", df$species)
df$species<-ifelse(df$doy==142, "BETALL", df$species)
df$risk<-ifelse(df$doy>=96 & df$doy<=99 & df$species=="ILEMUC", 10, df$risk)
df$risk<-ifelse(df$doy>=124 & df$doy<=140 & df$species=="BETALL", 10, df$risk)
df$risk<-ifelse(df$doy>=90 & df$doy<=94 & df$species=="ILEMUC", 3, df$risk)
df$risk<-ifelse(df$doy>=90 & df$doy<=120 & df$species=="BETALL", 3, df$risk)
df$risk<-ifelse(df$doy>=101 & df$species=="ILEMUC", 5, df$risk)
df$risk<-ifelse(df$doy>=146 & df$species=="BETALL", 5, df$risk)
View(df)
df$risk<-ifelse(df$doy>=96 && df$doy<=99 && df$species=="ILEMUC", 10, df$risk)
View(df)
doy<- 90:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 && ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy>=90 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
View(ile)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy>=90 & bet$doy<=120, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=146, 5, bet$risk)
View(bet)
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
library(ggplot)
library(ggplot2)
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ile
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=120, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=146, 5, bet$risk)
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + geom_point()
ile
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ile<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=120, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=146, 5, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line()
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:10)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
ilemuc
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(ile$doy==123, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==141, 7.5, ile$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
ile$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
library(gridExtra)
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
geom_label(x = 82:97, y = 1:6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotation_custom(df, xmin=82, xmax=97, ymin=1, ymax=6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 135, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 137, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(Interpol.T)
library(chillR)
library(raster)
library(maptools)
library(rgeos)
library(rgdal)
raster1<-brick("~/Desktop/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
eur.temp<-nc_open("~/Desktop/tn_0.25deg_reg_v16.0.nc")
raster1<-brick("//WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc", varname="tn", sep="")
eur.temp <- nc_open("//128.103.155.31/WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc")
plot(raster1[[45]])
#raster1 <- setMinMax(raster1)
#length(doy)/365
doy<-ncvar_get(eur.temp, "time")
doy<-as.Date(doy, origin="1950-01-01")
day<-substr(doy, 9,10)
year<-as.numeric(substr(doy, 1, 4))
month<-as.numeric(substr(doy, 6, 7))
timevec<-paste(year, month, day, sep="-")
years.vec<-as.character(timevec, format="Y-%m-%d")
year<-as.numeric(substr(years.vec, 1, 4))
#doy.vec<-as.POSIXlt(names(raster1), format="X%j")
dates<-as.Date(years.vec)
names(raster1)<-dates
empty.raster<-raster1[[1]]
values(empty.raster)<-NA
years<-1950:2016
leaps <- function(x) {
m <- c()
for(i in 1:50) {
year.i <- years[which(((years %% 4 == 0) & (years %% 100 !=0) | (years %% 400 == 0)))]
m <- c(m, year.i)
}
return(m)
}
leap.years<-as.data.frame(leaps(1))
leap.years<-leap.years[!duplicated(leaps(1)),]
#year<-1950:2016
empty.raster<-raster1[[1]]
num.false.spring.year<-list()
#dates.false.spring<-list()
for(i in 1951:1983){#i=1952
print(i)
year.i<-i
is.leap<-ifelse(year.i%in%leap.years,TRUE,FALSE)
sequence.years<-which(year==year.i)
#length(sequence.years)
raster.sub<-subset(raster1,sequence.years)
#numnonas<-sum(!is.na(values(raster.sub[[1]])))
rast.array<-array(75,dim=c(ncell(raster.sub),181))
if(is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
if(!is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
#dates.fs<-apply(rast.array, 1, function(x){ifelse(x<=-2.2, x, 0)})
num.false.spring<-apply(rast.array,1,function(x){sum(ifelse(x<=-2.2,1,0))})
non.nas.ids<-which(!is.na(num.false.spring))
#values(emp.rast)<-NA
values(empty.raster)<- NA
#non.nas.dates<-which(!is.na(dates.fs))
#plot(raster1[[1]])
values(empty.raster)[non.nas.ids]<- num.false.spring[!is.na(num.false.spring)]
#values(empty.raster)[non.nas.dates]<- dates.fs[!is.na(dates.fs)]
#plot(empty.raster)
#dates.false.spring[[i]]<- empty.raster
num.false.spring.year[[i]]<-empty.raster
}
length(num.false.spring.year)
final.raster.preCC<-stack(unlist(num.false.spring.year))
summed.false.springs.preCC<-calc(final.raster.preCC,sum)
fs.years.pre<-calc(final.raster.preCC, function(x) {sum(ifelse(x>=1,1,0))})
writeRaster(fs.years.pre,"~/Documents/git/regionalrisk/analyses/output/fs.30.pre", bylayer=TRUE,format="GTiff")
install.packages("gdal")
library(gdal)
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgeos", repos = "http://R-Forge.R-project.org", type = "source")
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", type="source")
library(rgdal)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
rgdal::writeRaster(fs.years.post,"~/Documents/git/regionalrisk/analyses/output/fs.postCC", bylayer=TRUE,format="GTiff")
install.packages("rgeos", type="source")
install.packages("rgeos", type = "source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(c('rgdal','rgeos'),repos="http://www.stats.ox.ac.uk/pub/RWin")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rgeos", unload=TRUE)
install.packages("rgdal")
install.packages("installr")
updateR()
install.packages("updateR")
version
if(!require(installr)) {
install.packages("installr");
require(installr)
}
library(installr)
version
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(rstanarm)
library(rstan)
library(bayesplot)
library(shinystan)
### Load data
setwd("~/Documents/git/regionalrisk/analyses/output")
d<-read.csv("fs_yearsitespp.csv", header=TRUE)
dx<-read.csv("mat_compressed.csv", header=TRUE)
## Start running the models
#d$PEP_ID<-as.numeric(as.factor(d$PEP_ID))
d$year<-as.numeric(d$year)
#d$species<-as.numeric(as.factor(d$species))
d$fs<-as.numeric(d$fs)
mat<-full_join(dx, d)
mat<-mat[!duplicated(mat),]
mat<-mat[!is.na(mat$PEP_ID),]
df<-mat[sample(nrow(mat), 15000), ]
## 2) FS # ~ species + site + MAT
mm<-stan_glm(fs.count~species + lat.long + mat, data=df, family=gaussian)
df<-mat[sample(nrow(mat), 5000), ]
## 2) FS # ~ species + site + MAT
mm<-stan_glm(fs.count~species + lat.long + mat, data=df, family=gaussian)
df<-mat[sample(nrow(mat), 5000), ]
## 2) FS # ~ species + site + MAT
mm<-stan_glm(fs.count~species + mat, data=df, family=gaussian)
mm
mat$cc<-ifelse(mat$year>=1984, 1, 0)
df<-mat[sample(nrow(mat), 5000), ]
mm2<-stan_glmer(fs.count~mat+lat+long+(1|species) + cc + cc*species, data=df, family=gaussian)
mm2
plot(mm2, pars="beta")
mm2<-stan_glmer(fs.count~mat + lat*long + cc*species, data=df, family=gaussian)
mm2<-stan_glm(fs.count~mat + lat*long + cc*species, data=df, family=gaussian)
mm2
mm2<-stan_glm(fs.count~mat + cc*species, data=df, family=gaussian)
mm2
a<-stan_glm(fs~year, data=df, family=gaussian)
a
a<-stan_glm(fs.count~year, data=df, family=gaussian)
a
b<-stan_glm(fs.count~cc, data=df, family=gaussian)
b
c<-stan_glm(fs.count~lat*long, data=df, family=gaussian)
c
stan_glm(fs.count~mat, data=df)
stan_glm(fs~mat, data=df)
stan_glm(fs.count~species, data=df)
stan_glm(fs.count~mat, data=mat)
df<-mat[sample(nrow(mat), 50000), ]
stan_glm(fs.count~mat, data=df)
