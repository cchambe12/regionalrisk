#test<- within(test, count[test$count==2]<-2)
tt<-test%>%
filter(count==2) %>%
group_by(pepBB) %>%
filter(date==max(date))
tt<-tt[!duplicated(tt), ]
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
ends<- unique(plz$pepyear[which(plz$count=="end")])
plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(data.table)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb<-read.csv("bbch_region_betula.csv", header=TRUE)
clim<-read.csv("climate_betula.csv", header=TRUE)
clim$date<-as.Date(paste(clim$year, clim$month, clim$day, sep="-"))
bb<-bb%>%dplyr::rename("lat" = LAT)%>%dplyr::rename("long"=LON)
x<-paste(bb$YEAR, bb$DAY)
bb$date<-as.Date(strptime(x, format="%Y %j"))
bb$year<-as.numeric(substr(bb$date, 0,4))
bb$month<-as.numeric(substr(bb$date, 6, 7))
bb$day<-as.numeric(substr(bb$date, 9,10))
bb<-bb%>%dplyr::select(-National_ID, -YEAR)
bb$lat<-round(bb$lat, digits=2)
bb$long<-round(bb$long, digits=2)
clim$lat<-round(clim$lat, digits=2)
clim$long<-round(clim$long, digits=2)
d<-full_join(clim, bb)
d<-filter(d, year>=1950)
d<-d[!duplicated(d),]
#how_many<-d[which(is.na(d$Tmin)),]
d<-d[!(is.na(d$Tmin) & is.na(d$PEP_ID)),]
d$grow<-ifelse(is.na(d$BBCH), NA, TRUE)
d$count <- ave(
d$grow, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$frz<- ifelse((d$Tmin<=-2.2), 1, 0)
plz<- d#%>% filter(year==1997)
plz<-plz[!(is.na(plz$count) & is.na(plz$Tmin)),]
plz<- plz[ave(plz$year, plz$PEP_ID, FUN = length) > 1, ]
plz$count<-ifelse(plz$count==1, "start", plz$count)
############# WORK ON LAST OBSERVATION! ######################
plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
plz$pepBB<-paste(plz$pepyear, plz$BBCH, sep=",")
test<-plz
#test<- within(test, count[test$count==2]<-2)
tt<-test%>%
filter(count==2) %>%
group_by(pepBB) %>%
filter(date==max(date))
tt<-tt[!duplicated(tt), ]
tt<-within(tt, count[tt$count==2]<-"end")
dat <- merge(plz, tt, by = "pepBB", all.x = TRUE)
dat$count.x[which(dat$count.x==2 & dat$count.y=="end")]<-"end"
dat$count.x[which(dat$count.x=="start" & dat$count.y=="end")]<-"start"
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
ends<- unique(plz$pepyear[which(plz$count=="end")])
plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
detach("package:plyr", unload=TRUE)
dat.clean<-dat%>%
dplyr::select(pepBB, year.x, Tmin.x, lat.x, long.x, date.x, PEP_ID.x, BBCH.x, DAY.x, species.x, count.x, frz.x, pepyear.x)%>%
rename(year=year.x)%>%
rename(Tmin=Tmin.x)%>%
rename(lat=lat.x)%>%
rename(long=long.x)%>%
rename(date=date.x)%>%
rename(PEP_ID=PEP_ID.x)%>%
rename(BBCH=BBCH.x)%>%
rename(DAY=DAY.x)%>%
rename(species=species.x)%>%
rename(count=count.x)%>%
rename(frz=frz.x)%>%
rename(pepyear=pepyear.x)
plz<-dat.clean
#############################################################
#plz$count<-ifelse(plz$count==2, "end", plz$count)
#plz$count<-ifelse(plz$count==3, NA, plz$count)
#plz<-na.omit(plz)
#plz$pepyear<-paste(plz$PEP_ID, plz$year, sep=",")
ends<- unique(plz$pepyear[which(plz$count=="end")])
plz<-filter(plz, pepyear %in% ends)
plz$start<-ifelse(plz$count=="start", plz$date, NA)
class(plz$start)<-"Date"
plz$end<-ifelse(plz$count=="end", plz$date, NA)
class(plz$end)<-"Date"
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
View(freeze)
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear, BBCH)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, BBCH=.$BBCH, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
View(freeze)
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepBB)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepBB]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, BBCH=.$BBCH, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear, BBCH)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
plzers<-plz%>%dplyr::select(year, PEP_ID, start, end, lat, long, pepyear)#%>%group_by(PEP_ID, year)%>%arrange(PEP_ID)
plzers<-setDT(plzers)[, lapply(.SD, na.omit), by = pepyear]
plzers<-plzers[!(plzers$start==plzers$end),]
plzers<-plzers[!duplicated(plzers), ]
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
View(freeze)
write.csv(freeze, "~/Documents/git/regionalrisk/analyses/output/lastobs.csv", row.names=FALSE)
freeze$ave<-ave(freeze$PEP_ID, count(freeze$date), FUN = mean)
counts<-data.frame(aggregate(freeze, by= list(PEP_ID, year), FUN=sum))
counts<-data.frame(aggregate(freeze, by= list(freeze$PEP_ID, freeze$year), FUN=sum))
counts<-data.frame(aggregate(freeze, by= list(freeze$PEP_ID, freeze$year), FUN=count))
counts<-data.frame(aggregate(freeze, by= freeze$pepyear, FUN=count))
please<-plzers %>%
arrange(PEP_ID)%>%
rowwise()%>%
do(data.frame(PEP_ID=.$PEP_ID, year=.$year, pepyear=.$pepyear, lat= .$lat, long=.$long, date = seq.Date(.$start, .$end, by=1)))
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
counts<-data.frame(aggregate(freeze, by= freeze$pepyear, FUN=count))
View(freeze)
freeze<-freeze%>%group_by(pepyear) %>%summarise(count=count(dates))
freeze<-freeze%>%group_by(pepyear) %>%summarise(count=count(date))
View(freeze)
freeze<-freeze%>%group_by(pepyear) %>%summarise(count=count(day))
freeze<-freeze%>%group_by(PEP_ID, year) %>%summarise(count=count(day))
d$growth <- ave(
d$date, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
d$growth <- ave(
d$day, d$PEP_ID, d$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
View(freeze)
freeze$growth <- ave(
freeze$day, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
View(freeze)
freeze$growth <- ave(
freeze$day, freeze$PEP_ID, freeze$year,
FUN=function(x) count(c(1, head(x, -1)))
)
freeze$growth<-freeze[, .N, by=.(year(date), PEP_ID(date))]
peppies<-as.data.frame(table(unique(freeze$pepyear))
freeze$growth <- ave(
freeze$day, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(1, head(x, -1)))
)
peppies<-as.data.frame(table(unique(freeze$pepyear)))
View(peppies)
peppies<-as.data.frame(table(freeze$pepyear))
View(peppies)
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
View(peppies)
df<-full_join(freeze, peppies)
View(df)
freeze<-left_join(please,clim)
freeze<-freeze[!(is.na(freeze$Tmin)),]
freeze$frz<-ifelse(freeze$Tmin<=-2.2, 1, 0)
freeze$count <- ave(
freeze$frz, freeze$PEP_ID, freeze$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
peppies<-as.data.frame(table(freeze$pepyear))
peppies<-peppies%>%
rename(pepyear=Var1)%>%
rename(growth=Freq)
df<-full_join(freeze, peppies)
View(df)
freeze<-full_join(freeze, peppies)
qplot(PEP_ID, growth, data = df,
geom = "boxplot") +
xlab("Site")+ylab("Growing Season length")
qplot(PEP_ID, growth, data = df,
geom = "boxplot", color=year) +
xlab("Site")+ylab("Growing Season length")
qplot(PEP_ID, growth, group=year, data = df,
geom = "boxplot") +
xlab("Site")+ylab("Growing Season length")
qplot(PEP_ID, growth, group=year, data = freeze,
geom = "boxplot") +
xlab("Site")+ylab("Growing Season length")
qplot(PEP_ID, growth, group=PEP_ID, data = freeze,
geom = "boxplot") +
xlab("Site")+ylab("Growing Season length")
qplot(lat, growth, data = freeze,
geom = "boxplot") +
xlab("Site")+ylab("Growing Season length")
qplot(as.factor(PEP_ID), growth, data = freeze,
geom = "boxplot") +
xlab("Site")+ylab("Growing Season length")
qplot(as.factor(PEP_ID), growth, data = freeze,
geom = "boxplot", color=lat) +
xlab("Site")+ylab("Growing Season length")
qplot(as.factor(PEP_ID), growth, data = freeze,
geom = "boxplot", color=as.factor(lat)) +
xlab("Site")+ylab("Growing Season length")
dxx<-freeze%>%
dplyr::select(PEP_ID, year, growth, frz, lat, long)%>%
group_by(PEP_ID, year)%>%
summarise(frz=last(frz))
View(dxx)
dxx<-freeze%>%
dplyr::select(PEP_ID, year, growth, frz, lat, long)%>%
group_by(PEP_ID, year)%>%
filter(row_number()==n)
dxx<-freeze%>%
dplyr::select(PEP_ID, year, growth, frz, lat, long)%>%
group_by(PEP_ID, year)
View(dxx)
dxx<-freeze%>%
dplyr::select(PEP_ID, year, growth, count, lat, long)%>%
group_by(PEP_ID, year)
View(dxx)
counters<-freeze%>%group_by(PEP_ID, year)%>%summarise(low=min(count))
View(counters)
counters<-freeze%>%group_by(PEP_ID, year)%>%summarise(frz=max(count))
View(counters)
counters<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
View(counters)
dxx$fs<-ifelse(dxx$count>=1, TRUE, NA)
View(dxx)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$count>=1, TRUE, NA)
dxx$fs<-ifelse(dxx$max>=1, TRUE, NA)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
View(dxx)
dxx$fs<-ifelse(dxx$frz>=1, TRUE, NA)
View(dxx)
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
library(lme4)
mod<-lmer(fs~lat*long + (1|year), family=binomial(link="logit"))
mod<-glmer(fs~lat*long + (1|year), family=binomial(link="logit"))
mod<-glmer(fs~lat*long + (1|year), data=dxx, family=binomial(link="logit"))
mod<-glmer(fs~lat + (1|year), data=dxx, family=binomial(link="logit"))
mod<-glmer(fs~year + (1|lat), data=dxx, family=binomial(link="logit"))
mod<-glmer(fs~lat + (1|year), data=dxx, family=binomial(link="logit"))
display(mod)
hist(dxx$lat)
hist(dxx$year)
dxx$fs<-ifelse(dxx$frz>=1, 1, NA)
dxx<-na.omit(dxx)
View(dxx)
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
dxx$total<-nrow(group_by(dxx, PEP_ID, year),
mod<-glmer(fs~lat + (1|year), data=dxx, family=binomial(link="logit"))
display(mod)
dxx$total<-nrow(group_by(dxx, PEP_ID, year)
mod<-glmer(fs~lat + (1|year), data=dxx, family=binomial(link="logit"))
display(mod)
dxx$total<-nrow(group_by(dxx, PEP_ID, year))
View(dxx)
dxx$total<-ddply(dxx,.(PEP_ID,year),nrow)
dxx$total<-require::ddply(dxx,.(PEP_ID,year),nrow)
dxx$total<-plyr::ddply(dxx,.(PEP_ID,year),nrow)
dxx$total<-plyr::ddply(dxx,(PEP_ID,year),nrow)
dxx$total<-plyr::ddply(dxx,.$(PEP_ID,year),nrow)
dxx$total<-plyr::ddply(dxx,.$PEP_ID,.$year,nrow)
dxx$total<-aggregate(list(total=rep(1,nrow(PEP_ID, year))), dxx, length)
dxx$pepyear<-paste(dxx$PEP_ID, dxx$year)
dxx$total<-aggregate(list(total=rep(1,nrow(pepyear))), dxx, length)
dxx$total<-aggregate(list(total=rep(1,nrow(dxx$pepyear))), dxx, length)
dxx$total<-aggregate(list(total=nrow(dxx$pepyear)), dxx, length)
dxx<-dxx%>%summarise(total=count(pepyear))
ungroup(dxx)
dxx<-dxx%>%summarise(total=count(pepyear))
dxx<-dxx%>%summarise(total=n(pepyear))
dxx<-dxx%>%total=count(pepyear)
dxx<-dxx%>%total=count(dxx$pepyear)
dxx$total=count(dxx$pepyear)
dxx$total=dplyr::count(dxx$pepyear)
dxx$total<-length(dxx$pepyear![duplicate(dat$pepyear)],)
dxx$total<-length(dxx$pepyear[duplicate(dat$pepyear)],)
dxx$total<-length(dxx$pepyear[duplicated(dat$pepyear)],)
dxx$total<-length(dxx$pepyear[duplicated(dat$pepyear)])
View(dxx)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
dxx$pepyear<-paste(dxx$PEP_ID, dxx$year)
View(dxx)
dxx$total<-tally(group_by(dxx, PEP_ID))
dxx<-tally(group_by(dxx, PEP_ID))
View(dxx)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx, PEP_ID))
View(total)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-dxx%>%tally(group_by(PEP_ID))%>%rename(total=n)
total<-dxx%>%tally(group_by(PEP_ID))
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
View(total)
dxx<-full_join(dxx, total)
View(dxx)
fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-dxx
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
View(fs)
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, fs=n)
fs<-full_join(fs, total)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, fs=n)
dxx<-full_join(fs, total)
View(dxx)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, fs=n)
dxx<-full_join(dxx, fs)
View(dxx)
dxx$freq<-dxx$fs/dxx$total
View(dxx)
ggplot((dxx), aes(x=lat, y=freq)) + geom_point(aes(color=long))
ggplot((dxx), aes(x=lat, y=long)) + geom_point(aes(color=freq))
ggplot((dxx), aes(x=lat, y=long)) + geom_point(aes(color=as.factor(freq)))
model1<-lm(freq~lat*long, data=dxx)
display(mod1)
display(model1)
fs<-dxx
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
freeze<-full_join(freeze, peppies)
dxx<-freeze%>%group_by(PEP_ID, year, lat, long, growth)%>%summarise(frz=max(count))
dxx$fs<-ifelse(dxx$frz>=1, 1, 0)
total<-tally(group_by(dxx,PEP_ID))
total<-rename(total, total=n)
dxx<-full_join(dxx, total)
fs<-dxx%>%dplyr::select(-total)
fs$fs<-ifelse(dxx$fs>=1, 1, NA)
fs<-na.omit(fs)
fs<-tally(group_by(fs,PEP_ID))
fs<-rename(fs, events=n)
dxx<-full_join(dxx, fs)
View(dxx)
dxx$events<-ifelse(is.na(dxx$events), 0, dxx$events)
dxx$freq<-dxx$fs/dxx$total
View(dxx)
dxx$freq<-dxx$events/dxx$total
View(dxx)
model1<-lm(freq~lat*long, data=dxx)
display(model1)
mod<-lm(events~lat*long, data=dxx)
display(mod)
bin<-lm(fs~lat*long + year, data=dxx, family=binomial(link="logit"))
bin<-lm(fs~lat*long + year, data=dxx)
display(bin)
