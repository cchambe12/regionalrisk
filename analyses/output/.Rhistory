modoutput$estavg <- ave(modoutput$estclean, modoutput$termclean)
modoutput$lowavg <- ave(modoutput$lowclean, modoutput$termclean)
modoutput$highavg <- ave(modoutput$highclean, modoutput$termclean)
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
allspp <- c("nao.z:cc.z", "mat.z:cc.z", "elev.z:cc.z", "dist.z:cc.z", "space.z:cc.z")
modoutput$species<-ifelse(modoutput$species%in%allspp, "all", modoutput$species)
indspp <- subset(modoutput, select=c("species", "lowclean", "highclean", "estclean", "Jvar", "termclean"))
indspp <- indspp[indspp$species!="all",]
indspp <- indspp[!duplicated(indspp),]
allspp <- subset(modoutput, select=c("species", "lowavg", "highavg", "estavg", "Jvar", "termclean"))
allspp <- allspp[(allspp$species=="all" | (allspp$species=="AESHIP")),]
allspp <- allspp[!duplicated(allspp),]
allspp$species <- "aaall"
names(allspp)<-c("species", "lowclean", "highclean", "estclean", "Jvar", "termclean")
modoutput <- full_join(indspp, allspp)
modoutput$Jvar <- ifelse(modoutput$species=="AESHIP", modoutput$Jvar - 0.2, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="ALNGLU", modoutput$Jvar - 0.25, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="BETPEN", modoutput$Jvar - 0.3, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="FAGSYL", modoutput$Jvar - 0.35, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="FRAEXC", modoutput$Jvar - 0.4, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="QUEROB", modoutput$Jvar - 0.45, modoutput$Jvar)
modoutput$species<-ifelse(modoutput$species=="BETPEN", "aaBETPEN", modoutput$species)
modoutput$species<-ifelse(modoutput$species=="FRAEXC", "zFRAEXC", modoutput$species)
###### VERY CLOSE! NEED TO MAKE MAIN DOTS BIGGER FOR ESTAVG AND THEN SMALLER DIFF COL DOTS FOR EACH SPECIES (ESTCLEAN)#####
my.pal <- colorRampPalette(brewer.pal(7,"Accent"))(6)
my.pal <- c("black", my.pal)
modoutput <- modoutput[(modoutput$species=="aaall"),]
regrisk<-ggplot(modoutput, aes(x=lowclean, xend=highclean, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estclean, y=Jvar, col=species, size=species, alpha=species)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc")), aes(col=species, alpha=species)) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$termclean)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +  #+ ggtitle("Original Parameters") +
coord_cartesian(xlim=c(-1, 1), ylim=c(1,11), clip = 'off') + #ggtitle("A.")
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
#annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
#annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
#annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR FIVE
annotate("text", x = -0.55, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR DVR AND ORIG
scale_color_manual(name="Species", values=c("black", cols), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_size_manual(name="Species", values=c(2, 1,1,1,1,1,1), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_alpha_manual(name="Species", values=c(1,.5,.5,.5,.5,.5,.5), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior")))))
png("analyses/figures/model_output_98_orig.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(regrisk)
dev.off()
modoutput <- moddvr98 #modelhere
cols <- colorRampPalette(brewer.pal(7,"Accent"))(6)
modoutput$term <- ifelse(modoutput$term=="b_Intercept", "b_speciesAESHIP", modoutput$term)
modoutput<-modoutput[1:47,]
modoutput$term<-gsub(".*b_","",modoutput$term)
#modoutput$term <- gsub(".*species", "", modoutput$term)
modoutput<-modoutput[!(modoutput$term=="sd_species__nao.z" | modoutput$term=="sd_species__mat.z" | modoutput$term=="sd_species__elev.z"
| modoutput$term=="sd_species__dist.z" | modoutput$term=="sd_species__space.z" | modoutput$term=="sd_species__cc.z" |
modoutput$term=="sigma"),]
modoutput$species <- ifelse(grepl("species",modoutput$term),gsub(".*species", "", modoutput$term), modoutput$term)
makeaeship <- c("nao.z", "mat.z", "dist.z", "elev.z", "space.z", "cc.z")
modoutput$species <- ifelse(modoutput$term%in%makeaeship, "AESHIP", modoutput$species)
modoutput$termclean <- gsub(":species.*", "", modoutput$term)
modoutput$estclean <- NA
modoutput$estclean <- ifelse(modoutput$termclean=="mat.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="mat.z")]+
modoutput$estimate, modoutput$estimate)
modoutput$estclean <- ifelse(modoutput$termclean=="nao.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="nao.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="dist.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="dist.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="elev.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="elev.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="space.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="space.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$estclean <- ifelse(modoutput$termclean=="cc.z" & modoutput$species != "AESHIP",
modoutput$estimate[(modoutput$term=="cc.z")]+
modoutput$estimate, modoutput$estclean)
modoutput$lowclean <- NA
modoutput$lowclean <- ifelse(modoutput$termclean=="mat.z" & modoutput$species != "AESHIP",
modoutput$'2%'[(modoutput$term=="mat.z")]+
modoutput$'2%', modoutput$'2%')
modoutput$lowclean <- ifelse(modoutput$termclean=="nao.z" & modoutput$species != "AESHIP",
modoutput$'2%'[(modoutput$term=="nao.z")]+
modoutput$'2%', modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="dist.z" & modoutput$species != "AESHIP",
modoutput$'2%'[(modoutput$term=="dist.z")]+
modoutput$'2%', modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="elev.z" & modoutput$species != "AESHIP",
modoutput$'2%'[(modoutput$term=="elev.z")]+
modoutput$'2%', modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="space.z" & modoutput$species != "AESHIP",
modoutput$'2%'[(modoutput$term=="space.z")]+
modoutput$'2%', modoutput$lowclean)
modoutput$lowclean <- ifelse(modoutput$termclean=="cc.z" & modoutput$species != "AESHIP",
modoutput$'2%'[(modoutput$term=="cc.z")]+
modoutput$'2%', modoutput$lowclean)
modoutput$highclean <- NA
modoutput$highclean <- ifelse(modoutput$termclean=="mat.z" & modoutput$species != "AESHIP",
modoutput$'98%'[(modoutput$term=="mat.z")]+
modoutput$'98%', modoutput$'98%')
modoutput$highclean <- ifelse(modoutput$termclean=="nao.z" & modoutput$species != "AESHIP",
modoutput$'98%'[(modoutput$term=="nao.z")]+
modoutput$'98%', modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="dist.z" & modoutput$species != "AESHIP",
modoutput$'98%'[(modoutput$term=="dist.z")]+
modoutput$'98%', modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="elev.z" & modoutput$species != "AESHIP",
modoutput$'98%'[(modoutput$term=="elev.z")]+
modoutput$'98%', modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="space.z" & modoutput$species != "AESHIP",
modoutput$'98%'[(modoutput$term=="space.z")]+
modoutput$'98%', modoutput$highclean)
modoutput$highclean <- ifelse(modoutput$termclean=="cc.z" & modoutput$species != "AESHIP",
modoutput$'98%'[(modoutput$term=="cc.z")]+
modoutput$'98%', modoutput$highclean)
modoutput$estavg <- ave(modoutput$estclean, modoutput$termclean)
modoutput$lowavg <- ave(modoutput$lowclean, modoutput$termclean)
modoutput$highavg <- ave(modoutput$highclean, modoutput$termclean)
modoutput$Jvar<-NA
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z", 8, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z", 11, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z", 9, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z", 10, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z", 7, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="cc.z", 6, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="nao.z:cc.z", 2, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="mat.z:cc.z", 5, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="elev.z:cc.z", 3, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="dist.z:cc.z", 4, modoutput$Jvar)
modoutput$Jvar<-ifelse(modoutput$termclean=="space.z:cc.z", 1, modoutput$Jvar)
estimates<-c("Mean Spring Temperature", "Distance from Coast", "Elevation", "NAO Index", "Space Parameter", "Climate Change",
"Mean Spring Temperature \nx Climate Change", "Distance from Coast \nx Climate Change",
"Elevation x \nClimate Change", "NAO Index x \nClimate Change", "Space Parameter \nx Climate Change")
estimates<-rev(estimates)
modoutput <- modoutput[!is.na(modoutput$Jvar),]
allspp <- c("nao.z:cc.z", "mat.z:cc.z", "elev.z:cc.z", "dist.z:cc.z", "space.z:cc.z")
modoutput$species<-ifelse(modoutput$species%in%allspp, "all", modoutput$species)
indspp <- subset(modoutput, select=c("species", "lowclean", "highclean", "estclean", "Jvar", "termclean"))
indspp <- indspp[indspp$species!="all",]
indspp <- indspp[!duplicated(indspp),]
allspp <- subset(modoutput, select=c("species", "lowavg", "highavg", "estavg", "Jvar", "termclean"))
allspp <- allspp[(allspp$species=="all" | (allspp$species=="AESHIP")),]
allspp <- allspp[!duplicated(allspp),]
allspp$species <- "aaall"
names(allspp)<-c("species", "lowclean", "highclean", "estclean", "Jvar", "termclean")
modoutput <- full_join(indspp, allspp)
modoutput$Jvar <- ifelse(modoutput$species=="AESHIP", modoutput$Jvar - 0.2, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="ALNGLU", modoutput$Jvar - 0.25, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="BETPEN", modoutput$Jvar - 0.3, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="FAGSYL", modoutput$Jvar - 0.35, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="FRAEXC", modoutput$Jvar - 0.4, modoutput$Jvar)
modoutput$Jvar <- ifelse(modoutput$species=="QUEROB", modoutput$Jvar - 0.45, modoutput$Jvar)
modoutput$species<-ifelse(modoutput$species=="BETPEN", "aaBETPEN", modoutput$species)
modoutput$species<-ifelse(modoutput$species=="FRAEXC", "zFRAEXC", modoutput$species)
#write.csv(modoutput, file="~/Documents/git/regionalrisk/analyses/output/modoutput_90_origspp.csv", row.names=FALSE)
#write.csv(modoutput, file="~/Documents/git/regionalrisk/analyses/output/modoutput_90_dvrspp.csv", row.names=FALSE)
#write.csv(modoutput, file="~/Documents/git/regionalrisk/analyses/output/modoutput_90_fivespp.csv", row.names=FALSE)
###### VERY CLOSE! NEED TO MAKE MAIN DOTS BIGGER FOR ESTAVG AND THEN SMALLER DIFF COL DOTS FOR EACH SPECIES (ESTCLEAN)#####
my.pal <- colorRampPalette(brewer.pal(7,"Accent"))(6)
my.pal <- c("black", my.pal)
modoutput <- modoutput[(modoutput$species=="aaall"),]
regrisk<-ggplot(modoutput, aes(x=lowclean, xend=highclean, y=Jvar, yend=Jvar)) +
geom_vline(xintercept=0, linetype="dotted") + geom_point(aes(x=estclean, y=Jvar, col=species, size=species, alpha=species)) +
geom_segment(arrow = arrow(length = unit(0.00, "npc")), aes(col=species, alpha=species)) +
guides(size=FALSE) +
scale_y_discrete(limits = sort(unique(modoutput$termclean)), labels=estimates) +
xlab("Change in Probability of False Springs") + ylab("") + theme_linedraw() +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans"), legend.position = "none",
legend.text.align = 0,
plot.margin = unit(c(3,3,1,1), "lines")) +  #+ ggtitle("Original Parameters") +
coord_cartesian(xlim=c(-1, 1), ylim=c(1,11), clip = 'off') + #ggtitle("A.")
annotate("segment", x = 0.05, xend = 1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) +
#annotate("segment", x = -0.1, xend = -1.6, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## FOR FIVE
annotate("segment", x = -0.05, xend = -1.1, y = 11.75, yend = 11.75, colour = "black", size=0.2, arrow=arrow(length=unit(0.20,"cm"))) + ## for DVR and ORIG
#annotate("text", x = 0.6, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR FIVE
annotate("text", x = 0.55, y = 12, colour = "black", size=3, label="More False Spring Risk") + ## FOR DVR AND ORIG
#annotate("text", x = -0.8, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR FIVE
annotate("text", x = -0.55, y = 12, colour = "black", size=3, label="Less False Spring Risk") + ## FOR DVR AND ORIG
scale_color_manual(name="Species", values=c("black", cols), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_size_manual(name="Species", values=c(2, 1,1,1,1,1,1), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))))) +
scale_alpha_manual(name="Species", values=c(1,.5,.5,.5,.5,.5,.5), labels=c("aaall"="Overall estimate",
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"QUEROB"=expression(paste(italic("Quercus robur"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior")))))
#quartz()
#regrisk
png("analyses/figures/model_output_98_dvr.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(regrisk)
dev.off()
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
library(rstan)
library(brms)
library(ggplot2)
library(egg)
library(RColorBrewer)
#library(sjmisc)
#library(sjPlot)
library(ggeffects)
library(broom)
library(dplyr)
setwd("~/Documents/git/regionalrisk/analyses/output")
bb <- read.csv("fs_newspace_orig.csv", header=TRUE)
cols <- colorRampPalette(brewer.pal(7,"Accent"))(6)
load("~/Documents/git/regionalrisk/orig_full.Rdata")
##### Interaction Plots code
#####################################################################################################
################### Original - predictors with species ##############################################
#naosp<- ggpredict(orig.full, terms = c("nao.z", "species"), ci.lvl=0.98)
#write.csv(naosp, file="~/Documents/git/regionalrisk/analyses/output/naosp_predicted_90.csv", row.names = FALSE)
#write.csv(naosp, file="~/Documents/git/regionalrisk/analyses/output/naosp_predicted_50.csv", row.names = FALSE)
#write.csv(naosp, file="~/Documents/git/regionalrisk/analyses/output/naosp_predicted_98.csv", row.names = FALSE)
naosp0<-read.csv("~/Documents/git/regionalrisk/analyses/output/naosp_predicted_98.csv", header=TRUE)
naosp0$group<-ifelse(naosp0$group=="BETPEN", "aaBETPEN", naosp0$group)
naosp0$group<-ifelse(naosp0$group=="FRAEXC", "zFRAEXC", naosp0$group)
naosp0$x <- (naosp0$x)*sd(bb$nao)*2 + mean(bb$nao)
naosp.p<-ggplot(naosp0, aes(x=x, y=predicted))+ geom_line(aes(col=group)) + xlab("NAO Index") +
ylab("Probability of False Spring") + ggtitle("(d)") + theme_classic() + theme(legend.position = "none",
plot.title = element_text(face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,0.4)) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
#elevsp<- ggpredict(orig.full, terms = c("elev.z", "species"), ci.lvl=0.98)
#write.csv(elevsp, file="~/Documents/git/regionalrisk/analyses/output/elevsp_predicted.csv", row.names = FALSE)
#write.csv(elevsp, file="~/Documents/git/regionalrisk/analyses/output/elevsp_predicted_90.csv", row.names = FALSE)
#write.csv(elevsp, file="~/Documents/git/regionalrisk/analyses/output/elevsp_predicted_98.csv", row.names = FALSE)
elevsp<-read.csv("~/Documents/git/regionalrisk/analyses/output/elevsp_predicted_98.csv", header=TRUE)
elevsp$group<-ifelse(elevsp$group=="BETPEN", "aaBETPEN", elevsp$group)
elevsp$group<-ifelse(elevsp$group=="FRAEXC", "zFRAEXC", elevsp$group)
elevsp$x <- ((elevsp$x)*sd(bb$elev)*2) + mean(bb$elev)
elevsp.p<-ggplot(elevsp, aes(x=x, y=predicted))+ geom_line(aes(col=group)) + xlab("Elevation (m)") +
ylab("Probability of False Spring") + ggtitle("(c)") + theme_classic() + theme(legend.position = "none",
plot.title = element_text(face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,1)) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
#matsp<- ggpredict(orig.full, terms = c("mat.z", "species"), ci.lvl = 0.98)
#write.csv(matsp, file="~/Documents/git/regionalrisk/analyses/output/matsp_predicted.csv", row.names = FALSE)
#write.csv(matsp, file="~/Documents/git/regionalrisk/analyses/output/matsp_predicted_50.csv", row.names = FALSE)
#write.csv(matsp, file="~/Documents/git/regionalrisk/analyses/output/matsp_predicted_98.csv", row.names = FALSE)
matsp<-read.csv("~/Documents/git/regionalrisk/analyses/output/matsp_predicted_98.csv", header=TRUE)
matsp$group<-ifelse(matsp$group=="BETPEN", "aaBETPEN", matsp$group)
matsp$group<-ifelse(matsp$group=="FRAEXC", "zFRAEXC", matsp$group)
matsp$x <- (matsp$x)*sd(bb$mst)*2 + mean(bb$mst)
matsp.p<-ggplot(matsp, aes(x=x, y=predicted))+ geom_line(aes(col=group)) + xlab("Mean Spring \nTemperature (°C)") +
ylab("Probability of False Spring") + ggtitle("(a)") + theme_classic()+ theme(legend.position = "none",
plot.title = element_text(face="bold")) +
scale_y_continuous(expand = c(0, 0)) +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,1)) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
#load("~/Documents/git/regionalrisk/orig_full.Rdata")
#spacesp<- ggpredict(orig.full, terms = c("dist.z", "species"), ci.lvl = 0.98)
#write.csv(spacesp, file="~/Documents/git/regionalrisk/analyses/output/spacesp_predicted.csv", row.names = FALSE)
#write.csv(spacesp, file="~/Documents/git/regionalrisk/analyses/output/spacesp_predicted_90.csv", row.names = FALSE)
#write.csv(spacesp, file="~/Documents/git/regionalrisk/analyses/output/spacesp_predicted_98.csv", row.names = FALSE)
spacesp<-read.csv("~/Documents/git/regionalrisk/analyses/output/spacesp_predicted_98.csv", header=TRUE)
spacesp$group<-ifelse(spacesp$group=="BETPEN", "aaBETPEN", spacesp$group)
spacesp$group<-ifelse(spacesp$group=="FRAEXC", "zFRAEXC", spacesp$group)
spacesp$x <- (spacesp$x)*sd(bb$distkm)*2 + mean(bb$distkm)
spacesp.p<-ggplot(spacesp, aes(x=x, y=predicted))+ geom_line(aes(col=group)) + xlab("Distance from Coast (km)") + ylab("Probability of False Spring") +
ggtitle("(b)") + scale_y_continuous(expand = c(0, 0)) +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,1)) +
theme_classic() + theme(legend.position = "none",
plot.title = element_text(face="bold")) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
#ccsp<- ggpredict(orig.full, terms = c("cc.z", "species"), ci.lvl = 0.98)
#write.csv(ccsp, file="~/Documents/git/regionalrisk/analyses/output/ccsp_predicted_90.csv", row.names = FALSE)
#write.csv(ccsp, file="~/Documents/git/regionalrisk/analyses/output/ccsp_predicted_50.csv", row.names = FALSE)
#write.csv(ccsp, file="~/Documents/git/regionalrisk/analyses/output/ccsp_predicted_98.csv", row.names = FALSE)
ccsp<-read.csv("~/Documents/git/regionalrisk/analyses/output/ccsp_predicted_98.csv", header=TRUE)
ccsp$group<-ifelse(ccsp$group=="BETPEN", "aaBETPEN", ccsp$group)
ccsp$group<-ifelse(ccsp$group=="FRAEXC", "zFRAEXC", ccsp$group)
ccsp$x <- ifelse(ccsp$x <0, 0, 1)
ccsp.p<-ggplot(ccsp, aes(x=x, y=predicted))+ geom_point(aes(col=group))+ geom_line(aes(col=group), linetype="dotted") +
xlab("Climate Change") + ylab("Probability of False Spring") + ggtitle("(e)") +
scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(breaks=c(0,1),labels=c("1951-1983","1984-2016")) +
#geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,0.4))  + theme(legend.key = element_rect(fill="transparent")) +
theme_classic() + theme(legend.position = "none",
plot.title = element_text(face="bold")) +
theme(legend.text.align = 0) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
ccsp.p<-ggplot(ccsp, aes(x=x, y=predicted))+ geom_point(aes(col=group))+ geom_line(aes(col=group), linetype="dotted") +
xlab("Climate Change") + ylab("Probability of False Spring") + ggtitle("(e)") +
scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(breaks=c(0,1),labels=c("1951-1983","1984-2016")) +
#geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,0.4))  + theme(legend.key = element_rect(fill="transparent")) +
theme_classic() + theme(#legend.position = "none",
plot.title = element_text(face="bold")) +
theme(legend.text.align = 0) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(ccsp.p)
ccsp.p<-ggplot(ccsp, aes(x=x, y=predicted))+ geom_point(aes(col=group))+ geom_line(aes(col=group), linetype="dotted") +
xlab("Climate Change") + ylab("Probability of False Spring") + ggtitle("(e)") +
scale_y_continuous(expand = c(0, 0)) + scale_x_continuous(breaks=c(0,1),labels=c("1951-1983","1984-2016")) +
#geom_ribbon(aes(ymin=conf.low, ymax=conf.high, col=group, fill=group), linetype=0, alpha=0.4) +
coord_cartesian(ylim=c(0,0.4))  + theme(legend.key = element_rect(fill="transparent")) +
theme_classic() + theme(legend.position = "none",
plot.title = element_text(face="bold")) +
theme(legend.text.align = 0) +
scale_colour_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur"))))) +
scale_fill_manual(name="Species", values=cols,
labels=c("AESHIP"=expression(paste(italic("Aesculus hippocastanum"))),
"ALNGLU"=expression(paste(italic("Alnus glutinosa"))),
"aaBETPEN"=expression(paste(italic("Betula pendula"))),
"FAGSYL"=expression(paste(italic("Fagus sylvatica"))),
"zFRAEXC"=expression(paste(italic("Fraxinus excelsior"))),
"QUEROB"=expression(paste(italic("Quercus robur")))))
quartz()
g1<-grid.arrange(matsp.p, spacesp.p, elevsp.p, ncol=3, widths=c(1.5, 1.5, 1.5))
g2<-grid.arrange(naosp.p, ccsp.p, mylegend, ncol=3, widths=c(1.5,1.5,1))
spplot<-grid.arrange(g1, g2, nrow=2, heights=c(1.5, 1))
png("~/Documents/git/regionalrisk/analyses/figures/InteractionPlots/Species_orig.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=6, units="in", res = 350 )
grid.arrange(g1, g2, nrow=2, heights=c(1.5, 1))
dev.off()
png("~/Documents/git/regionalrisk/analyses/figures/InteractionPlots/Species_orig.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=8,
height=6, units="in", res = 350 )
grid.arrange(g1, g2, nrow=2, heights=c(1.5, 1))
dev.off()
png("~/Documents/git/regionalrisk/analyses/figures/Figure5.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=8,
height=6, units="in", res = 350 )
grid.arrange(g1, g2, nrow=2, heights=c(1.5, 1))
dev.off()
library(tmap)
library(raster)
library(rgdal)
library(rgeos)
library(sp)
install.packages(tmap)
install.packages("tmap")
install.packages("tmaptools")
library(tmap)
library(tmaptools)
library(raster)
library(rgdal)
#library(rgeos)
library(sp)
1034+1363+1349+2031
5777/2031
2031/5777
png("~/Documents/git/regionalrisk/analyses/figures/InteractionPlots/Species_orig.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=9,
height=6, units="in", res = 350 )
grid.arrange(g1, g2, nrow=2, heights=c(1.5, 1))
dev.off()
png("~/Documents/git/regionalrisk/analyses/figures/Figure5.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=9,
height=6, units="in", res = 350 )
grid.arrange(g1, g2, nrow=2, heights=c(1.5, 1))
dev.off()
